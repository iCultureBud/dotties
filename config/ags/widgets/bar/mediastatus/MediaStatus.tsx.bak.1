UnDo
let artist, title: any = "";
O%home%iculture%Repos%dotties%config%ags%widgets%bar%mediastatus%MediaStatus.tsx5
+					? <icon icon="media-playback-pause" />5
+				status === Mpris.PlaybackStatus.PLAYING
+					? <icon icon="media-playback-pause" />
+					: <icon icon="media-playback-start" />5
g@[=
g@[=
g@[a
import { bind } from "astal";
$import Mpris from "gi://AstalMpris";
const MAX_TITLE: Number = 20;
P//------------------------------------------------------------------------------
7// Media Widget -> shows playbackstate for each player.
+// Also shows artist and title for Spotify.
M// TODO: Only show active player (e.g. youtube playes and spotify is paused).
6function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
7	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
@		artist = bin
Q%home%iculture%Repos%dotties%config%ags%widgets%bar%mediastatus%MediaStatus.tsccx
UnDo
-import { Variable, GLib, bind } from "astal";5
ximport { Variable, GLib, bind } from "astal";5
g@[:
import { bind } from "astal";5
import { Variable, GLib, bind } from "astal";import { bind } from "astal";5
dimport { bind } from "astal";5
g@[;
g@[;
g@[=
g@[=
g@[a
import { bind } from "astal";
$import Mpris from "gi://AstalMpris";
const MAX_TITLE: Number = 20;
P//------------------------------------------------------------------------------
7// Media Widget -> shows playbackstate for each player.
+// Also shows artist and title for Spotify.
M// TODO: Only show active player (e.g. youtube playes and spotify is paused).
6function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
7	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
@		artist = bind(player, "artist").as(a => a && a + " - " || "");
)		title = bind(player, "title").as(t => {
&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
%			return t.substring(0, 20) + "...";
		});
;	return <box id={player.busName} className="MainBox Media">
9		{isSpot && <box className="info">{artist}{title}</box>}
0		<button onClicked={() => player.play_pause()}>
/			{bind(player, "playbackStatus").as(status =>
+				status === Mpris.PlaybackStatus.PLAYING
+					? <icon icon="media-playback-pause" />
+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[e
import { bind } from "astal";
$import Mpris from "gi://AstalMpris";
const MAX_TITLE: Number = 20;
P//------------------------------------------------------------------------------
7// Media Widget -> shows playbackstate for each player.
+// Also shows artist and title for Spotify.
M// TODO: Only show active player (e.g. youtube playes and spotify is paused).
6function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
7	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
@		artist = bind(player, "artist").as(a => a && a + " - " || "");
)		title = bind(player, "title").as(t => {
&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
%			return t.substring(0, 20) + "...";
		});
;	return <box id={player.busName} className="MainBox Media">
9		{isSpot && <box className="info">{artist}{title}</box>}
0		<button onClicked={() => player.play_pause()}>
/			{bind(player, "playbackStatus").as(status =>
+				status === Mpris.PlaybackStatus.PLAYING
+					? <icon icon="media-playback-pause" />
+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
import { bind } from "astal";import { bind } from "astal";
$import Mpris from "gi://AstalMpris";
const MAX_TITLE: Number = 20;
P//------------------------------------------------------------------------------
7// Media Widget -> shows playbackstate for each player.
+// Also shows artist and title for Spotify.
M// TODO: Only show active player (e.g. youtube playes and spotify is paused).
6function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
7	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
@		artist = bind(player, "artist").as(a => a && a + " - " || "");
)		title = bind(player, "title").as(t => {
&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
%			return t.substring(0, 20) + "...";
		});
;	return <box id={player.busName} className="MainBox Media">
9		{isSpot && <box className="info">{artist}{title}</box>}
0		<button onClicked={() => player.play_pause()}>
/			{bind(player, "playbackStatus").as(status =>
+				status === Mpris.PlaybackStatus.PLAYING
+					? <icon icon="media-playback-pause" />
+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[e
import { bind } from "astal";
$import Mpris from "gi://AstalMpris";
const MAX_TITLE: Number = 20;
P//------------------------------------------------------------------------------
7// Media Widget -> shows playbackstate for each player.
+// Also shows artist and title for Spotify.
M// TODO: Only show active player (e.g. youtube playes and spotify is paused).
6function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
7	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
@		artist = bind(player, "artist").as(a => a && a + " - " || "");
)		title = bind(player, "title").as(t => {
&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
%			return t.substring(0, 20) + "...";
		});
;	return <box id={player.busName} className="MainBox Media">
9		{isSpot && <box className="info">{artist}{title}</box>}
0		<button onClicked={() => player.play_pause()}>
/			{bind(player, "playbackStatus").as(status =>
+				status === Mpris.PlaybackStatus.PLAYING
+					? <icon icon="media-playback-pause" />
+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
import { bind } from "astal";
$import Mpris from "gi://AstalMpris";
const MAX_TITLE: Number = 20;
P//------------------------------------------------------------------------------
7// Media Widget -> shows playbackstate for each player.
+// Also shows artist and title for Spotify.
M// TODO: Only show active player (e.g. youtube playes and spotify is paused).
6function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
7	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
@		artist = bind(player, "artist").as(a => a && a + " - " || "");
)		title = bind(player, "title").as(t => {
&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
%			return t.substring(0, 20) + "...";
		});
;	return <box id={player.busName} className="MainBox Media">
9		{isSpot && <box className="info">{artist}{title}</box>}
0		<button onClicked={() => player.play_pause()}>
/			{bind(player, "playbackStatus").as(status =>
+				status === Mpris.PlaybackStatus.PLAYING
+					? <icon icon="media-playback-pause" />
+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[e
import { bind } from "astal";
$import Mpris from "gi://AstalMpris";
const MAX_TITLE: Number = 20;
P//------------------------------------------------------------------------------
7// Media Widget -> shows playbackstate for each player.
+// Also shows artist and title for Spotify.
M// TODO: Only show active player (e.g. youtube playes and spotify is paused).
6function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
7	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
@		artist = bind(player, "artist").as(a => a && a + " - " || "");
)		title = bind(player, "title").as(t => {
&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
%			return t.substring(0, 20) + "...";
		});
;	return <box id={player.busName} className="MainBox Media">
9		{isSpot && <box className="info">{artist}{title}</box>}
0		<button onClicked={() => player.play_pause()}>
/			{bind(player, "playbackStatus").as(status =>
+				status === Mpris.PlaybackStatus.PLAYING
+					? <icon icon="media-playback-pause" />
+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
import { bind } from "astal";$import Mpris from "gi://AstalMpris";
const MAX_TITLE: Number = 20;
P//------------------------------------------------------------------------------
7// Media Widget -> shows playbackstate for each player.
+// Also shows artist and title for Spotify.
M// TODO: Only show active player (e.g. youtube playes and spotify is paused).
6function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
7	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
@		artist = bind(player, "artist").as(a => a && a + " - " || "");
)		title = bind(player, "title").as(t => {
&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
%			return t.substring(0, 20) + "...";
		});
;	return <box id={player.busName} className="MainBox Media">
9		{isSpot && <box className="info">{artist}{title}</box>}
0		<button onClicked={() => player.play_pause()}>
/			{bind(player, "playbackStatus").as(status =>
+				status === Mpris.PlaybackStatus.PLAYING
+					? <icon icon="media-playback-pause" />
+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[e
import { bind } from "astal";
$import Mpris from "gi://AstalMpris";
const MAX_TITLE: Number = 20;
P//------------------------------------------------------------------------------
7// Media Widget -> shows playbackstate for each player.
+// Also shows artist and title for Spotify.
M// TODO: Only show active player (e.g. youtube playes and spotify is paused).
6function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
7	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
@		artist = bind(player, "artist").as(a => a && a + " - " || "");
)		title = bind(player, "title").as(t => {
&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
%			return t.substring(0, 20) + "...";
		});
;	return <box id={player.busName} className="MainBox Media">
9		{isSpot && <box className="info">{artist}{title}</box>}
0		<button onClicked={() => player.play_pause()}>
/			{bind(player, "playbackStatus").as(status =>
+				status === Mpris.PlaybackStatus.PLAYING
+					? <icon icon="media-playback-pause" />
+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
$import Mpris from "gi://AstalMpris";
const MAX_TITLE: Number = 20;
P//------------------------------------------------------------------------------
7// Media Widget -> shows playbackstate for each player.
+// Also shows artist and title for Spotify.
M// TODO: Only show active player (e.g. youtube playes and spotify is paused).
6function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
7	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
@		artist = bind(player, "artist").as(a => a && a + " - " || "");
)		title = bind(player, "title").as(t => {
&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
%			return t.substring(0, 20) + "...";
		});
;	return <box id={player.busName} className="MainBox Media">
9		{isSpot && <box className="info">{artist}{title}</box>}
0		<button onClicked={() => player.play_pause()}>
/			{bind(player, "playbackStatus").as(status =>
+				status === Mpris.PlaybackStatus.PLAYING
+					? <icon icon="media-playback-pause" />
+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[e
import { bind } from "astal";
$import Mpris from "gi://AstalMpris";
const MAX_TITLE: Number = 20;
P//------------------------------------------------------------------------------
7// Media Widget -> shows playbackstate for each player.
+// Also shows artist and title for Spotify.
M// TODO: Only show active player (e.g. youtube playes and spotify is paused).
6function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
7	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
@		artist = bind(player, "artist").as(a => a && a + " - " || "");
)		title = bind(player, "title").as(t => {
&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
%			return t.substring(0, 20) + "...";
		});
;	return <box id={player.busName} className="MainBox Media">
9		{isSpot && <box className="info">{artist}{title}</box>}
0		<button onClicked={() => player.play_pause()}>
/			{bind(player, "playbackStatus").as(status =>
+				status === Mpris.PlaybackStatus.PLAYING
+					? <icon icon="media-playback-pause" />
+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
import Mpris from "gi://AstalMpris";
const MAX_TITLE: Number = 20;
P//------------------------------------------------------------------------------
7// Media Widget -> shows playbackstate for each player.
+// Also shows artist and title for Spotify.
M// TODO: Only show active player (e.g. youtube playes and spotify is paused).
6function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
7	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
@		artist = bind(player, "artist").as(a => a && a + " - " || "");
)		title = bind(player, "title").as(t => {
&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
%			return t.substring(0, 20) + "...";
		});
;	return <box id={player.busName} className="MainBox Media">
9		{isSpot && <box className="info">{artist}{title}</box>}
0		<button onClicked={() => player.play_pause()}>
/			{bind(player, "playbackStatus").as(status =>
+				status === Mpris.PlaybackStatus.PLAYING
+					? <icon icon="media-playback-pause" />
+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[e
import { bind } from "astal";
$import Mpris from "gi://AstalMpris";
const MAX_TITLE: Number = 20;
P//------------------------------------------------------------------------------
7// Media Widget -> shows playbackstate for each player.
+// Also shows artist and title for Spotify.
M// TODO: Only show active player (e.g. youtube playes and spotify is paused).
6function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
7	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
@		artist = bind(player, "artist").as(a => a && a + " - " || "");
)		title = bind(player, "title").as(t => {
&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
%			return t.substring(0, 20) + "...";
		});
;	return <box id={player.busName} className="MainBox Media">
9		{isSpot && <box className="info">{artist}{title}</box>}
0		<button onClicked={() => player.play_pause()}>
/			{bind(player, "playbackStatus").as(status =>
+				status === Mpris.PlaybackStatus.PLAYING
+					? <icon icon="media-playback-pause" />
+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
import Mpris from "gi://AstalMpris";const MAX_TITLE: Number = 20;
P//------------------------------------------------------------------------------
7// Media Widget -> shows playbackstate for each player.
+// Also shows artist and title for Spotify.
M// TODO: Only show active player (e.g. youtube playes and spotify is paused).
6function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
7	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
@		artist = bind(player, "artist").as(a => a && a + " - " || "");
)		title = bind(player, "title").as(t => {
&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
%			return t.substring(0, 20) + "...";
		});
;	return <box id={player.busName} className="MainBox Media">
9		{isSpot && <box className="info">{artist}{title}</box>}
0		<button onClicked={() => player.play_pause()}>
/			{bind(player, "playbackStatus").as(status =>
+				status === Mpris.PlaybackStatus.PLAYING
+					? <icon icon="media-playback-pause" />
+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[e
import { bind } from "astal";
$import Mpris from "gi://AstalMpris";
const MAX_TITLE: Number = 20;
P//------------------------------------------------------------------------------
7// Media Widget -> shows playbackstate for each player.
+// Also shows artist and title for Spotify.
M// TODO: Only show active player (e.g. youtube playes and spotify is paused).
6function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
7	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
@		artist = bind(player, "artist").as(a => a && a + " - " || "");
)		title = bind(player, "title").as(t => {
&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
%			return t.substring(0, 20) + "...";
		});
;	return <box id={player.busName} className="MainBox Media">
9		{isSpot && <box className="info">{artist}{title}</box>}
0		<button onClicked={() => player.play_pause()}>
/			{bind(player, "playbackStatus").as(status =>
+				status === Mpris.PlaybackStatus.PLAYING
+					? <icon icon="media-playback-pause" />
+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
const MAX_TITLE: Number = 20;
P//------------------------------------------------------------------------------
7// Media Widget -> shows playbackstate for each player.
+// Also shows artist and title for Spotify.
M// TODO: Only show active player (e.g. youtube playes and spotify is paused).
6function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
7	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
@		artist = bind(player, "artist").as(a => a && a + " - " || "");
)		title = bind(player, "title").as(t => {
&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
%			return t.substring(0, 20) + "...";
		});
;	return <box id={player.busName} className="MainBox Media">
9		{isSpot && <box className="info">{artist}{title}</box>}
0		<button onClicked={() => player.play_pause()}>
/			{bind(player, "playbackStatus").as(status =>
+				status === Mpris.PlaybackStatus.PLAYING
+					? <icon icon="media-playback-pause" />
+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[e
import { bind } from "astal";
$import Mpris from "gi://AstalMpris";
const MAX_TITLE: Number = 20;
P//------------------------------------------------------------------------------
7// Media Widget -> shows playbackstate for each player.
+// Also shows artist and title for Spotify.
M// TODO: Only show active player (e.g. youtube playes and spotify is paused).
6function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
7	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
@		artist = bind(player, "artist").as(a => a && a + " - " || "");
)		title = bind(player, "title").as(t => {
&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
%			return t.substring(0, 20) + "...";
		});
;	return <box id={player.busName} className="MainBox Media">
9		{isSpot && <box className="info">{artist}{title}</box>}
0		<button onClicked={() => player.play_pause()}>
/			{bind(player, "playbackStatus").as(status =>
+				status === Mpris.PlaybackStatus.PLAYING
+					? <icon icon="media-playback-pause" />
+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
~const MAX_TITLE: Number = 20;//------------------------------------------------------------------------------
7// Media Widget -> shows playbackstate for each player.
+// Also shows artist and title for Spotify.
M// TODO: Only show active player (e.g. youtube playes and spotify is paused).
6function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
7	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
@		artist = bind(player, "artist").as(a => a && a + " - " || "");
)		title = bind(player, "title").as(t => {
&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
%			return t.substring(0, 20) + "...";
		});
;	return <box id={player.busName} className="MainBox Media">
9		{isSpot && <box className="info">{artist}{title}</box>}
0		<button onClicked={() => player.play_pause()}>
/			{bind(player, "playbackStatus").as(status =>
+				status === Mpris.PlaybackStatus.PLAYING
+					? <icon icon="media-playback-pause" />
+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[e
import { bind } from "astal";
$import Mpris from "gi://AstalMpris";
const MAX_TITLE: Number = 20;
P//------------------------------------------------------------------------------
7// Media Widget -> shows playbackstate for each player.
+// Also shows artist and title for Spotify.
M// TODO: Only show active player (e.g. youtube playes and spotify is paused).
6function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
7	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
@		artist = bind(player, "artist").as(a => a && a + " - " || "");
)		title = bind(player, "title").as(t => {
&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
%			return t.substring(0, 20) + "...";
		});
;	return <box id={player.busName} className="MainBox Media">
9		{isSpot && <box className="info">{artist}{title}</box>}
0		<button onClicked={() => player.play_pause()}>
/			{bind(player, "playbackStatus").as(status =>
+				status === Mpris.PlaybackStatus.PLAYING
+					? <icon icon="media-playback-pause" />
+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
a//------------------------------------------------------------------------------
7// Media Widget -> shows playbackstate for each player.
+// Also shows artist and title for Spotify.
M// TODO: Only show active player (e.g. youtube playes and spotify is paused).
6function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
7	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
@		artist = bind(player, "artist").as(a => a && a + " - " || "");
)		title = bind(player, "title").as(t => {
&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
%			return t.substring(0, 20) + "...";
		});
;	return <box id={player.busName} className="MainBox Media">
9		{isSpot && <box className="info">{artist}{title}</box>}
0		<button onClicked={() => player.play_pause()}>
/			{bind(player, "playbackStatus").as(status =>
+				status === Mpris.PlaybackStatus.PLAYING
+					? <icon icon="media-playback-pause" />
+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[e
import { bind } from "astal";
$import Mpris from "gi://AstalMpris";
const MAX_TITLE: Number = 20;
P//------------------------------------------------------------------------------
7// Media Widget -> shows playbackstate for each player.
+// Also shows artist and title for Spotify.
M// TODO: Only show active player (e.g. youtube playes and spotify is paused).
6function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
7	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
@		artist = bind(player, "artist").as(a => a && a + " - " || "");
)		title = bind(player, "title").as(t => {
&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
%			return t.substring(0, 20) + "...";
		});
;	return <box id={player.busName} className="MainBox Media">
9		{isSpot && <box className="info">{artist}{title}</box>}
0		<button onClicked={() => player.play_pause()}>
/			{bind(player, "playbackStatus").as(status =>
+				status === Mpris.PlaybackStatus.PLAYING
+					? <icon icon="media-playback-pause" />
+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
]//------------------------------------------------------------------------------// Media Widget -> shows playbackstate for each player.
+// Also shows artist and title for Spotify.
M// TODO: Only show active player (e.g. youtube playes and spotify is paused).
6function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
7	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
@		artist = bind(player, "artist").as(a => a && a + " - " || "");
)		title = bind(player, "title").as(t => {
&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
%			return t.substring(0, 20) + "...";
		});
;	return <box id={player.busName} className="MainBox Media">
9		{isSpot && <box className="info">{artist}{title}</box>}
0		<button onClicked={() => player.play_pause()}>
/			{bind(player, "playbackStatus").as(status =>
+				status === Mpris.PlaybackStatus.PLAYING
+					? <icon icon="media-playback-pause" />
+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[e
import { bind } from "astal";
$import Mpris from "gi://AstalMpris";
const MAX_TITLE: Number = 20;
P//------------------------------------------------------------------------------
7// Media Widget -> shows playbackstate for each player.
+// Also shows artist and title for Spotify.
M// TODO: Only show active player (e.g. youtube playes and spotify is paused).
6function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
7	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
@		artist = bind(player, "artist").as(a => a && a + " - " || "");
)		title = bind(player, "title").as(t => {
&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
%			return t.substring(0, 20) + "...";
		});
;	return <box id={player.busName} className="MainBox Media">
9		{isSpot && <box className="info">{artist}{title}</box>}
0		<button onClicked={() => player.play_pause()}>
/			{bind(player, "playbackStatus").as(status =>
+				status === Mpris.PlaybackStatus.PLAYING
+					? <icon icon="media-playback-pause" />
+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
// Media Widget -> shows playbackstate for each player.
+// Also shows artist and title for Spotify.
M// TODO: Only show active player (e.g. youtube playes and spotify is paused).
6function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
7	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
@		artist = bind(player, "artist").as(a => a && a + " - " || "");
)		title = bind(player, "title").as(t => {
&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
%			return t.substring(0, 20) + "...";
		});
;	return <box id={player.busName} className="MainBox Media">
9		{isSpot && <box className="info">{artist}{title}</box>}
0		<button onClicked={() => player.play_pause()}>
/			{bind(player, "playbackStatus").as(status =>
+				status === Mpris.PlaybackStatus.PLAYING
+					? <icon icon="media-playback-pause" />
+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[e
import { bind } from "astal";
$import Mpris from "gi://AstalMpris";
const MAX_TITLE: Number = 20;
P//------------------------------------------------------------------------------
7// Media Widget -> shows playbackstate for each player.
+// Also shows artist and title for Spotify.
M// TODO: Only show active player (e.g. youtube playes and spotify is paused).
6function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
7	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
@		artist = bind(player, "artist").as(a => a && a + " - " || "");
)		title = bind(player, "title").as(t => {
&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
%			return t.substring(0, 20) + "...";
		});
;	return <box id={player.busName} className="MainBox Media">
9		{isSpot && <box className="info">{artist}{title}</box>}
0		<button onClicked={() => player.play_pause()}>
/			{bind(player, "playbackStatus").as(status =>
+				status === Mpris.PlaybackStatus.PLAYING
+					? <icon icon="media-playback-pause" />
+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
	// Media Widget -> shows playbackstate for each player.// Also shows artist and title for Spotify.
M// TODO: Only show active player (e.g. youtube playes and spotify is paused).
6function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
7	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
@		artist = bind(player, "artist").as(a => a && a + " - " || "");
)		title = bind(player, "title").as(t => {
&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
%			return t.substring(0, 20) + "...";
		});
;	return <box id={player.busName} className="MainBox Media">
9		{isSpot && <box className="info">{artist}{title}</box>}
0		<button onClicked={() => player.play_pause()}>
/			{bind(player, "playbackStatus").as(status =>
+				status === Mpris.PlaybackStatus.PLAYING
+					? <icon icon="media-playback-pause" />
+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[e
import { bind } from "astal";
$import Mpris from "gi://AstalMpris";
const MAX_TITLE: Number = 20;
P//------------------------------------------------------------------------------
7// Media Widget -> shows playbackstate for each player.
+// Also shows artist and title for Spotify.
M// TODO: Only show active player (e.g. youtube playes and spotify is paused).
6function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
7	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
@		artist = bind(player, "artist").as(a => a && a + " - " || "");
)		title = bind(player, "title").as(t => {
&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
%			return t.substring(0, 20) + "...";
		});
;	return <box id={player.busName} className="MainBox Media">
9		{isSpot && <box className="info">{artist}{title}</box>}
0		<button onClicked={() => player.play_pause()}>
/			{bind(player, "playbackStatus").as(status =>
+				status === Mpris.PlaybackStatus.PLAYING
+					? <icon icon="media-playback-pause" />
+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
// Also shows artist and title for Spotify.
M// TODO: Only show active player (e.g. youtube playes and spotify is paused).
6function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
7	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
@		artist = bind(player, "artist").as(a => a && a + " - " || "");
)		title = bind(player, "title").as(t => {
&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
%			return t.substring(0, 20) + "...";
		});
;	return <box id={player.busName} className="MainBox Media">
9		{isSpot && <box className="info">{artist}{title}</box>}
0		<button onClicked={() => player.play_pause()}>
/			{bind(player, "playbackStatus").as(status =>
+				status === Mpris.PlaybackStatus.PLAYING
+					? <icon icon="media-playback-pause" />
+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[e
import { bind } from "astal";
$import Mpris from "gi://AstalMpris";
const MAX_TITLE: Number = 20;
P//------------------------------------------------------------------------------
7// Media Widget -> shows playbackstate for each player.
+// Also shows artist and title for Spotify.
M// TODO: Only show active player (e.g. youtube playes and spotify is paused).
6function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
7	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
@		artist = bind(player, "artist").as(a => a && a + " - " || "");
)		title = bind(player, "title").as(t => {
&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
%			return t.substring(0, 20) + "...";
		});
;	return <box id={player.busName} className="MainBox Media">
9		{isSpot && <box className="info">{artist}{title}</box>}
0		<button onClicked={() => player.play_pause()}>
/			{bind(player, "playbackStatus").as(status =>
+				status === Mpris.PlaybackStatus.PLAYING
+					? <icon icon="media-playback-pause" />
+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
// Also shows artist and title for Spotify.// TODO: Only show active player (e.g. youtube playes and spotify is paused).
6function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
7	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
@		artist = bind(player, "artist").as(a => a && a + " - " || "");
)		title = bind(player, "title").as(t => {
&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
%			return t.substring(0, 20) + "...";
		});
;	return <box id={player.busName} className="MainBox Media">
9		{isSpot && <box className="info">{artist}{title}</box>}
0		<button onClicked={() => player.play_pause()}>
/			{bind(player, "playbackStatus").as(status =>
+				status === Mpris.PlaybackStatus.PLAYING
+					? <icon icon="media-playback-pause" />
+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[e
import { bind } from "astal";
$import Mpris from "gi://AstalMpris";
const MAX_TITLE: Number = 20;
P//------------------------------------------------------------------------------
7// Media Widget -> shows playbackstate for each player.
+// Also shows artist and title for Spotify.
M// TODO: Only show active player (e.g. youtube playes and spotify is paused).
6function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
7	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
@		artist = bind(player, "artist").as(a => a && a + " - " || "");
)		title = bind(player, "title").as(t => {
&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
%			return t.substring(0, 20) + "...";
		});
;	return <box id={player.busName} className="MainBox Media">
9		{isSpot && <box className="info">{artist}{title}</box>}
0		<button onClicked={() => player.play_pause()}>
/			{bind(player, "playbackStatus").as(status =>
+				status === Mpris.PlaybackStatus.PLAYING
+					? <icon icon="media-playback-pause" />
+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
// TODO: Only show active player (e.g. youtube playes and spotify is paused).
6function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
7	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
@		artist = bind(player, "artist").as(a => a && a + " - " || "");
)		title = bind(player, "title").as(t => {
&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
%			return t.substring(0, 20) + "...";
		});
;	return <box id={player.busName} className="MainBox Media">
9		{isSpot && <box className="info">{artist}{title}</box>}
0		<button onClicked={() => player.play_pause()}>
/			{bind(player, "playbackStatus").as(status =>
+				status === Mpris.PlaybackStatus.PLAYING
+					? <icon icon="media-playback-pause" />
+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[e
import { bind } from "astal";
$import Mpris from "gi://AstalMpris";
const MAX_TITLE: Number = 20;
P//------------------------------------------------------------------------------
7// Media Widget -> shows playbackstate for each player.
+// Also shows artist and title for Spotify.
M// TODO: Only show active player (e.g. youtube playes and spotify is paused).
6function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
7	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
@		artist = bind(player, "artist").as(a => a && a + " - " || "");
)		title = bind(player, "title").as(t => {
&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
%			return t.substring(0, 20) + "...";
		});
;	return <box id={player.busName} className="MainBox Media">
9		{isSpot && <box className="info">{artist}{title}</box>}
0		<button onClicked={() => player.play_pause()}>
/			{bind(player, "playbackStatus").as(status =>
+				status === Mpris.PlaybackStatus.PLAYING
+					? <icon icon="media-playback-pause" />
+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
// TODO: Only show active player (e.g. youtube playes and spotify is paused).function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
7	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
@		artist = bind(player, "artist").as(a => a && a + " - " || "");
)		title = bind(player, "title").as(t => {
&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
%			return t.substring(0, 20) + "...";
		});
;	return <box id={player.busName} className="MainBox Media">
9		{isSpot && <box className="info">{artist}{title}</box>}
0		<button onClicked={() => player.play_pause()}>
/			{bind(player, "playbackStatus").as(status =>
+				status === Mpris.PlaybackStatus.PLAYING
+					? <icon icon="media-playback-pause" />
+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[e
import { bind } from "astal";
$import Mpris from "gi://AstalMpris";
const MAX_TITLE: Number = 20;
P//------------------------------------------------------------------------------
7// Media Widget -> shows playbackstate for each player.
+// Also shows artist and title for Spotify.
M// TODO: Only show active player (e.g. youtube playes and spotify is paused).
6function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
7	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
@		artist = bind(player, "artist").as(a => a && a + " - " || "");
)		title = bind(player, "title").as(t => {
&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
%			return t.substring(0, 20) + "...";
		});
;	return <box id={player.busName} className="MainBox Media">
9		{isSpot && <box className="info">{artist}{title}</box>}
0		<button onClicked={() => player.play_pause()}>
/			{bind(player, "playbackStatus").as(status =>
+				status === Mpris.PlaybackStatus.PLAYING
+					? <icon icon="media-playback-pause" />
+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
Lfunction Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
7	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
@		artist = bind(player, "artist").as(a => a && a + " - " || "");
)		title = bind(player, "title").as(t => {
&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
%			return t.substring(0, 20) + "...";
		});
;	return <box id={player.busName} className="MainBox Media">
9		{isSpot && <box className="info">{artist}{title}</box>}
0		<button onClicked={() => player.play_pause()}>
/			{bind(player, "playbackStatus").as(status =>
+				status === Mpris.PlaybackStatus.PLAYING
+					? <icon icon="media-playback-pause" />
+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[e
import { bind } from "astal";
$import Mpris from "gi://AstalMpris";
const MAX_TITLE: Number = 20;
P//------------------------------------------------------------------------------
7// Media Widget -> shows playbackstate for each player.
+// Also shows artist and title for Spotify.
M// TODO: Only show active player (e.g. youtube playes and spotify is paused).
6function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
7	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
@		artist = bind(player, "artist").as(a => a && a + " - " || "");
)		title = bind(player, "title").as(t => {
&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
%			return t.substring(0, 20) + "...";
		});
;	return <box id={player.busName} className="MainBox Media">
9		{isSpot && <box className="info">{artist}{title}</box>}
0		<button onClicked={() => player.play_pause()}>
/			{bind(player, "playbackStatus").as(status =>
+				status === Mpris.PlaybackStatus.PLAYING
+					? <icon icon="media-playback-pause" />
+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
Gfunction Media({ player }: { player: Mpris.Player }) {let artist, title: any = "";
7	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
@		artist = bind(player, "artist").as(a => a && a + " - " || "");
)		title = bind(player, "title").as(t => {
&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
%			return t.substring(0, 20) + "...";
		});
;	return <box id={player.busName} className="MainBox Media">
9		{isSpot && <box className="info">{artist}{title}</box>}
0		<button onClicked={() => player.play_pause()}>
/			{bind(player, "playbackStatus").as(status =>
+				status === Mpris.PlaybackStatus.PLAYING
+					? <icon icon="media-playback-pause" />
+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[e
import { bind } from "astal";
$import Mpris from "gi://AstalMpris";
const MAX_TITLE: Number = 20;
P//------------------------------------------------------------------------------
7// Media Widget -> shows playbackstate for each player.
+// Also shows artist and title for Spotify.
M// TODO: Only show active player (e.g. youtube playes and spotify is paused).
6function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
7	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
@		artist = bind(player, "artist").as(a => a && a + " - " || "");
)		title = bind(player, "title").as(t => {
&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
%			return t.substring(0, 20) + "...";
		});
;	return <box id={player.busName} className="MainBox Media">
9		{isSpot && <box className="info">{artist}{title}</box>}
0		<button onClicked={() => player.play_pause()}>
/			{bind(player, "playbackStatus").as(status =>
+				status === Mpris.PlaybackStatus.PLAYING
+					? <icon icon="media-playback-pause" />
+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
let artist, title: any = "";
7	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
@		artist = bind(player, "artist").as(a => a && a + " - " || "");
)		title = bind(player, "title").as(t => {
&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
%			return t.substring(0, 20) + "...";
		});
;	return <box id={player.busName} className="MainBox Media">
9		{isSpot && <box className="info">{artist}{title}</box>}
0		<button onClicked={() => player.play_pause()}>
/			{bind(player, "playbackStatus").as(status =>
+				status === Mpris.PlaybackStatus.PLAYING
+					? <icon icon="media-playback-pause" />
+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[e
import { bind } from "astal";
$import Mpris from "gi://AstalMpris";
const MAX_TITLE: Number = 20;
P//------------------------------------------------------------------------------
7// Media Widget -> shows playbackstate for each player.
+// Also shows artist and title for Spotify.
M// TODO: Only show active player (e.g. youtube playes and spotify is paused).
6function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
7	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
@		artist = bind(player, "artist").as(a => a && a + " - " || "");
)		title = bind(player, "title").as(t => {
&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
%			return t.substring(0, 20) + "...";
		});
;	return <box id={player.busName} className="MainBox Media">
9		{isSpot && <box className="info">{artist}{title}</box>}
0		<button onClicked={() => player.play_pause()}>
/			{bind(player, "playbackStatus").as(status =>
+				status === Mpris.PlaybackStatus.PLAYING
+					? <icon icon="media-playback-pause" />
+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
let artist, title: any = "";7	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
@		artist = bind(player, "artist").as(a => a && a + " - " || "");
)		title = bind(player, "title").as(t => {
&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
%			return t.substring(0, 20) + "...";
		});
;	return <box id={player.busName} className="MainBox Media">
9		{isSpot && <box className="info">{artist}{title}</box>}
0		<button onClicked={() => player.play_pause()}>
/			{bind(player, "playbackStatus").as(status =>
+				status === Mpris.PlaybackStatus.PLAYING
+					? <icon icon="media-playback-pause" />
+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[e
import { bind } from "astal";
$import Mpris from "gi://AstalMpris";
const MAX_TITLE: Number = 20;
P//------------------------------------------------------------------------------
7// Media Widget -> shows playbackstate for each player.
+// Also shows artist and title for Spotify.
M// TODO: Only show active player (e.g. youtube playes and spotify is paused).
6function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
7	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
@		artist = bind(player, "artist").as(a => a && a + " - " || "");
)		title = bind(player, "title").as(t => {
&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
%			return t.substring(0, 20) + "...";
		});
;	return <box id={player.busName} className="MainBox Media">
9		{isSpot && <box className="info">{artist}{title}</box>}
0		<button onClicked={() => player.play_pause()}>
/			{bind(player, "playbackStatus").as(status =>
+				status === Mpris.PlaybackStatus.PLAYING
+					? <icon icon="media-playback-pause" />
+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
let artist, title: any = "";const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
@		artist = bind(player, "artist").as(a => a && a + " - " || "");
)		title = bind(player, "title").as(t => {
&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
%			return t.substring(0, 20) + "...";
		});
;	return <box id={player.busName} className="MainBox Media">
9		{isSpot && <box className="info">{artist}{title}</box>}
0		<button onClicked={() => player.play_pause()}>
/			{bind(player, "playbackStatus").as(status =>
+				status === Mpris.PlaybackStatus.PLAYING
+					? <icon icon="media-playback-pause" />
+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[e
import { bind } from "astal";
$import Mpris from "gi://AstalMpris";
const MAX_TITLE: Number = 20;
P//------------------------------------------------------------------------------
7// Media Widget -> shows playbackstate for each player.
+// Also shows artist and title for Spotify.
M// TODO: Only show active player (e.g. youtube playes and spotify is paused).
6function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
7	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
@		artist = bind(player, "artist").as(a => a && a + " - " || "");
)		title = bind(player, "title").as(t => {
&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
%			return t.substring(0, 20) + "...";
		});
;	return <box id={player.busName} className="MainBox Media">
9		{isSpot && <box className="info">{artist}{title}</box>}
0		<button onClicked={() => player.play_pause()}>
/			{bind(player, "playbackStatus").as(status =>
+				status === Mpris.PlaybackStatus.PLAYING
+					? <icon icon="media-playback-pause" />
+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
@		artist = bind(player, "artist").as(a => a && a + " - " || "");
)		title = bind(player, "title").as(t => {
&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
%			return t.substring(0, 20) + "...";
		});
;	return <box id={player.busName} className="MainBox Media">
9		{isSpot && <box className="info">{artist}{title}</box>}
0		<button onClicked={() => player.play_pause()}>
/			{bind(player, "playbackStatus").as(status =>
+				status === Mpris.PlaybackStatus.PLAYING
+					? <icon icon="media-playback-pause" />
+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[e
import { bind } from "astal";
$import Mpris from "gi://AstalMpris";
const MAX_TITLE: Number = 20;
P//------------------------------------------------------------------------------
7// Media Widget -> shows playbackstate for each player.
+// Also shows artist and title for Spotify.
M// TODO: Only show active player (e.g. youtube playes and spotify is paused).
6function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
7	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
@		artist = bind(player, "artist").as(a => a && a + " - " || "");
)		title = bind(player, "title").as(t => {
&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
%			return t.substring(0, 20) + "...";
		});
;	return <box id={player.busName} className="MainBox Media">
9		{isSpot && <box className="info">{artist}{title}</box>}
0		<button onClicked={() => player.play_pause()}>
/			{bind(player, "playbackStatus").as(status =>
+				status === Mpris.PlaybackStatus.PLAYING
+					? <icon icon="media-playback-pause" />
+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
const isSpot: Boolean = player.identity === "Spotify";if (isSpot) {
@		artist = bind(player, "artist").as(a => a && a + " - " || "");
)		title = bind(player, "title").as(t => {
&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
%			return t.substring(0, 20) + "...";
		});
;	return <box id={player.busName} className="MainBox Media">
9		{isSpot && <box className="info">{artist}{title}</box>}
0		<button onClicked={() => player.play_pause()}>
/			{bind(player, "playbackStatus").as(status =>
+				status === Mpris.PlaybackStatus.PLAYING
+					? <icon icon="media-playback-pause" />
+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[e
import { bind } from "astal";
$import Mpris from "gi://AstalMpris";
const MAX_TITLE: Number = 20;
P//------------------------------------------------------------------------------
7// Media Widget -> shows playbackstate for each player.
+// Also shows artist and title for Spotify.
M// TODO: Only show active player (e.g. youtube playes and spotify is paused).
6function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
7	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
@		artist = bind(player, "artist").as(a => a && a + " - " || "");
)		title = bind(player, "title").as(t => {
&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
%			return t.substring(0, 20) + "...";
		});
;	return <box id={player.busName} className="MainBox Media">
9		{isSpot && <box className="info">{artist}{title}</box>}
0		<button onClicked={() => player.play_pause()}>
/			{bind(player, "playbackStatus").as(status =>
+				status === Mpris.PlaybackStatus.PLAYING
+					? <icon icon="media-playback-pause" />
+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
if (isSpot) {
@		artist = bind(player, "artist").as(a => a && a + " - " || "");
)		title = bind(player, "title").as(t => {
&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
%			return t.substring(0, 20) + "...";
		});
;	return <box id={player.busName} className="MainBox Media">
9		{isSpot && <box className="info">{artist}{title}</box>}
0		<button onClicked={() => player.play_pause()}>
/			{bind(player, "playbackStatus").as(status =>
+				status === Mpris.PlaybackStatus.PLAYING
+					? <icon icon="media-playback-pause" />
+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[e
import { bind } from "astal";
$import Mpris from "gi://AstalMpris";
const MAX_TITLE: Number = 20;
P//------------------------------------------------------------------------------
7// Media Widget -> shows playbackstate for each player.
+// Also shows artist and title for Spotify.
M// TODO: Only show active player (e.g. youtube playes and spotify is paused).
6function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
7	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
@		artist = bind(player, "artist").as(a => a && a + " - " || "");
)		title = bind(player, "title").as(t => {
&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
%			return t.substring(0, 20) + "...";
		});
;	return <box id={player.busName} className="MainBox Media">
9		{isSpot && <box className="info">{artist}{title}</box>}
0		<button onClicked={() => player.play_pause()}>
/			{bind(player, "playbackStatus").as(status =>
+				status === Mpris.PlaybackStatus.PLAYING
+					? <icon icon="media-playback-pause" />
+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
if (isSpot) {artist = bind(player, "artist").as(a => a && a + " - " || "");
)		title = bind(player, "title").as(t => {
&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
%			return t.substring(0, 20) + "...";
		});
;	return <box id={player.busName} className="MainBox Media">
9		{isSpot && <box className="info">{artist}{title}</box>}
0		<button onClicked={() => player.play_pause()}>
/			{bind(player, "playbackStatus").as(status =>
+				status === Mpris.PlaybackStatus.PLAYING
+					? <icon icon="media-playback-pause" />
+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[e
import { bind } from "astal";
$import Mpris from "gi://AstalMpris";
const MAX_TITLE: Number = 20;
P//------------------------------------------------------------------------------
7// Media Widget -> shows playbackstate for each player.
+// Also shows artist and title for Spotify.
M// TODO: Only show active player (e.g. youtube playes and spotify is paused).
6function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
7	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
@		artist = bind(player, "artist").as(a => a && a + " - " || "");
)		title = bind(player, "title").as(t => {
&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
%			return t.substring(0, 20) + "...";
		});
;	return <box id={player.busName} className="MainBox Media">
9		{isSpot && <box className="info">{artist}{title}</box>}
0		<button onClicked={() => player.play_pause()}>
/			{bind(player, "playbackStatus").as(status =>
+				status === Mpris.PlaybackStatus.PLAYING
+					? <icon icon="media-playback-pause" />
+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
artist = bind(player, "artist").as(a => a && a + " - " || "");
)		title = bind(player, "title").as(t => {
&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
%			return t.substring(0, 20) + "...";
		});
;	return <box id={player.busName} className="MainBox Media">
9		{isSpot && <box className="info">{artist}{title}</box>}
0		<button onClicked={() => player.play_pause()}>
/			{bind(player, "playbackStatus").as(status =>
+				status === Mpris.PlaybackStatus.PLAYING
+					? <icon icon="media-playback-pause" />
+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[e
import { bind } from "astal";
$import Mpris from "gi://AstalMpris";
const MAX_TITLE: Number = 20;
P//------------------------------------------------------------------------------
7// Media Widget -> shows playbackstate for each player.
+// Also shows artist and title for Spotify.
M// TODO: Only show active player (e.g. youtube playes and spotify is paused).
6function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
7	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
@		artist = bind(player, "artist").as(a => a && a + " - " || "");
)		title = bind(player, "title").as(t => {
&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
%			return t.substring(0, 20) + "...";
		});
;	return <box id={player.busName} className="MainBox Media">
9		{isSpot && <box className="info">{artist}{title}</box>}
0		<button onClicked={() => player.play_pause()}>
/			{bind(player, "playbackStatus").as(status =>
+				status === Mpris.PlaybackStatus.PLAYING
+					? <icon icon="media-playback-pause" />
+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
artist = bind(player, "artist").as(a => a && a + " - " || "");)		title = bind(player, "title").as(t => {
&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
%			return t.substring(0, 20) + "...";
		});
;	return <box id={player.busName} className="MainBox Media">
9		{isSpot && <box className="info">{artist}{title}</box>}
0		<button onClicked={() => player.play_pause()}>
/			{bind(player, "playbackStatus").as(status =>
+				status === Mpris.PlaybackStatus.PLAYING
+					? <icon icon="media-playback-pause" />
+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[e
import { bind } from "astal";
$import Mpris from "gi://AstalMpris";
const MAX_TITLE: Number = 20;
P//------------------------------------------------------------------------------
7// Media Widget -> shows playbackstate for each player.
+// Also shows artist and title for Spotify.
M// TODO: Only show active player (e.g. youtube playes and spotify is paused).
6function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
7	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
@		artist = bind(player, "artist").as(a => a && a + " - " || "");
)		title = bind(player, "title").as(t => {
&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
%			return t.substring(0, 20) + "...";
		});
;	return <box id={player.busName} className="MainBox Media">
9		{isSpot && <box className="info">{artist}{title}</box>}
0		<button onClicked={() => player.play_pause()}>
/			{bind(player, "playbackStatus").as(status =>
+				status === Mpris.PlaybackStatus.PLAYING
+					? <icon icon="media-playback-pause" />
+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
a)		title = bind(player, "title").as(t => {
&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
%			return t.substring(0, 20) + "...";
		});
;	return <box id={player.busName} className="MainBox Media">
9		{isSpot && <box className="info">{artist}{title}</box>}
0		<button onClicked={() => player.play_pause()}>
/			{bind(player, "playbackStatus").as(status =>
+				status === Mpris.PlaybackStatus.PLAYING
+					? <icon icon="media-playback-pause" />
+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[e
import { bind } from "astal";
$import Mpris from "gi://AstalMpris";
const MAX_TITLE: Number = 20;
P//------------------------------------------------------------------------------
7// Media Widget -> shows playbackstate for each player.
+// Also shows artist and title for Spotify.
M// TODO: Only show active player (e.g. youtube playes and spotify is paused).
6function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
7	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
@		artist = bind(player, "artist").as(a => a && a + " - " || "");
)		title = bind(player, "title").as(t => {
&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
%			return t.substring(0, 20) + "...";
		});
;	return <box id={player.busName} className="MainBox Media">
9		{isSpot && <box className="info">{artist}{title}</box>}
0		<button onClicked={() => player.play_pause()}>
/			{bind(player, "playbackStatus").as(status =>
+				status === Mpris.PlaybackStatus.PLAYING
+					? <icon icon="media-playback-pause" />
+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
>artist = bind(player, "artist").as(a => a && a + " - " || "");
_)title = bind(player, "title").as(t => {
&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
%			return t.substring(0, 20) + "...";
		});
;	return <box id={player.busName} className="MainBox Media">
9		{isSpot && <box className="info">{artist}{title}</box>}
0		<button onClicked={() => player.play_pause()}>
/			{bind(player, "playbackStatus").as(status =>
+				status === Mpris.PlaybackStatus.PLAYING
+					? <icon icon="media-playback-pause" />
+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[e
import { bind } from "astal";
$import Mpris from "gi://AstalMpris";
const MAX_TITLE: Number = 20;
P//------------------------------------------------------------------------------
7// Media Widget -> shows playbackstate for each player.
+// Also shows artist and title for Spotify.
M// TODO: Only show active player (e.g. youtube playes and spotify is paused).
6function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
7	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
@		artist = bind(player, "artist").as(a => a && a + " - " || "");
)		title = bind(player, "title").as(t => {
&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
%			return t.substring(0, 20) + "...";
		});
;	return <box id={player.busName} className="MainBox Media">
9		{isSpot && <box className="info">{artist}{title}</box>}
0		<button onClicked={() => player.play_pause()}>
/			{bind(player, "playbackStatus").as(status =>
+				status === Mpris.PlaybackStatus.PLAYING
+					? <icon icon="media-playback-pause" />
+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
artist = bind(player, "artist").as(a => a && a + " - " || "");)title = bind(player, "title").as(t => {
&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
%			return t.substring(0, 20) + "...";
		});
;	return <box id={player.busName} className="MainBox Media">
9		{isSpot && <box className="info">{artist}{title}</box>}
0		<button onClicked={() => player.play_pause()}>
/			{bind(player, "playbackStatus").as(status =>
+				status === Mpris.PlaybackStatus.PLAYING
+					? <icon icon="media-playback-pause" />
+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[e
import { bind } from "astal";
$import Mpris from "gi://AstalMpris";
const MAX_TITLE: Number = 20;
P//------------------------------------------------------------------------------
7// Media Widget -> shows playbackstate for each player.
+// Also shows artist and title for Spotify.
M// TODO: Only show active player (e.g. youtube playes and spotify is paused).
6function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
7	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
@		artist = bind(player, "artist").as(a => a && a + " - " || "");
)		title = bind(player, "title").as(t => {
&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
%			return t.substring(0, 20) + "...";
		});
;	return <box id={player.busName} className="MainBox Media">
9		{isSpot && <box className="info">{artist}{title}</box>}
0		<button onClicked={() => player.play_pause()}>
/			{bind(player, "playbackStatus").as(status =>
+				status === Mpris.PlaybackStatus.PLAYING
+					? <icon icon="media-playback-pause" />
+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
^title = bind(player, "title").as(t => {
&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
%			return t.substring(0, 20) + "...";
		});
;	return <box id={player.busName} className="MainBox Media">
9		{isSpot && <box className="info">{artist}{title}</box>}
0		<button onClicked={() => player.play_pause()}>
/			{bind(player, "playbackStatus").as(status =>
+				status === Mpris.PlaybackStatus.PLAYING
+					? <icon icon="media-playback-pause" />
+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[e
import { bind } from "astal";
$import Mpris from "gi://AstalMpris";
const MAX_TITLE: Number = 20;
P//------------------------------------------------------------------------------
7// Media Widget -> shows playbackstate for each player.
+// Also shows artist and title for Spotify.
M// TODO: Only show active player (e.g. youtube playes and spotify is paused).
6function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
7	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
@		artist = bind(player, "artist").as(a => a && a + " - " || "");
)		title = bind(player, "title").as(t => {
&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
%			return t.substring(0, 20) + "...";
		});
;	return <box id={player.busName} className="MainBox Media">
9		{isSpot && <box className="info">{artist}{title}</box>}
0		<button onClicked={() => player.play_pause()}>
/			{bind(player, "playbackStatus").as(status =>
+				status === Mpris.PlaybackStatus.PLAYING
+					? <icon icon="media-playback-pause" />
+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
[title = bind(player, "title").as(t => {&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
%			return t.substring(0, 20) + "...";
		});
;	return <box id={player.busName} className="MainBox Media">
9		{isSpot && <box className="info">{artist}{title}</box>}
0		<button onClicked={() => player.play_pause()}>
/			{bind(player, "playbackStatus").as(status =>
+				status === Mpris.PlaybackStatus.PLAYING
+					? <icon icon="media-playback-pause" />
+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[e
import { bind } from "astal";
$import Mpris from "gi://AstalMpris";
const MAX_TITLE: Number = 20;
P//------------------------------------------------------------------------------
7// Media Widget -> shows playbackstate for each player.
+// Also shows artist and title for Spotify.
M// TODO: Only show active player (e.g. youtube playes and spotify is paused).
6function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
7	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
@		artist = bind(player, "artist").as(a => a && a + " - " || "");
)		title = bind(player, "title").as(t => {
&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
%			return t.substring(0, 20) + "...";
		});
;	return <box id={player.busName} className="MainBox Media">
9		{isSpot && <box className="info">{artist}{title}</box>}
0		<button onClicked={() => player.play_pause()}>
/			{bind(player, "playbackStatus").as(status =>
+				status === Mpris.PlaybackStatus.PLAYING
+					? <icon icon="media-playback-pause" />
+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
Wtitle = bind(player, "title").as(t => {if (t.length < MAX_TITLE) return t;
			if (!t) return "";
%			return t.substring(0, 20) + "...";
		});
;	return <box id={player.busName} className="MainBox Media">
9		{isSpot && <box className="info">{artist}{title}</box>}
0		<button onClicked={() => player.play_pause()}>
/			{bind(player, "playbackStatus").as(status =>
+				status === Mpris.PlaybackStatus.PLAYING
+					? <icon icon="media-playback-pause" />
+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[e
import { bind } from "astal";
$import Mpris from "gi://AstalMpris";
const MAX_TITLE: Number = 20;
P//------------------------------------------------------------------------------
7// Media Widget -> shows playbackstate for each player.
+// Also shows artist and title for Spotify.
M// TODO: Only show active player (e.g. youtube playes and spotify is paused).
6function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
7	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
@		artist = bind(player, "artist").as(a => a && a + " - " || "");
)		title = bind(player, "title").as(t => {
&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
%			return t.substring(0, 20) + "...";
		});
;	return <box id={player.busName} className="MainBox Media">
9		{isSpot && <box className="info">{artist}{title}</box>}
0		<button onClicked={() => player.play_pause()}>
/			{bind(player, "playbackStatus").as(status =>
+				status === Mpris.PlaybackStatus.PLAYING
+					? <icon icon="media-playback-pause" />
+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
0if (t.length < MAX_TITLE) return t;
			if (!t) return "";
%			return t.substring(0, 20) + "...";
		});
;	return <box id={player.busName} className="MainBox Media">
9		{isSpot && <box className="info">{artist}{title}</box>}
0		<button onClicked={() => player.play_pause()}>
/			{bind(player, "playbackStatus").as(status =>
+				status === Mpris.PlaybackStatus.PLAYING
+					? <icon icon="media-playback-pause" />
+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[e
import { bind } from "astal";
$import Mpris from "gi://AstalMpris";
const MAX_TITLE: Number = 20;
P//------------------------------------------------------------------------------
7// Media Widget -> shows playbackstate for each player.
+// Also shows artist and title for Spotify.
M// TODO: Only show active player (e.g. youtube playes and spotify is paused).
6function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
7	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
@		artist = bind(player, "artist").as(a => a && a + " - " || "");
)		title = bind(player, "title").as(t => {
&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
%			return t.substring(0, 20) + "...";
		});
;	return <box id={player.busName} className="MainBox Media">
9		{isSpot && <box className="info">{artist}{title}</box>}
0		<button onClicked={() => player.play_pause()}>
/			{bind(player, "playbackStatus").as(status =>
+				status === Mpris.PlaybackStatus.PLAYING
+					? <icon icon="media-playback-pause" />
+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
)if (t.length < MAX_TITLE) return t;if (!t) return "";
%			return t.substring(0, 20) + "...";
		});
;	return <box id={player.busName} className="MainBox Media">
9		{isSpot && <box className="info">{artist}{title}</box>}
0		<button onClicked={() => player.play_pause()}>
/			{bind(player, "playbackStatus").as(status =>
+				status === Mpris.PlaybackStatus.PLAYING
+					? <icon icon="media-playback-pause" />
+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[e
import { bind } from "astal";
$import Mpris from "gi://AstalMpris";
const MAX_TITLE: Number = 20;
P//------------------------------------------------------------------------------
7// Media Widget -> shows playbackstate for each player.
+// Also shows artist and title for Spotify.
M// TODO: Only show active player (e.g. youtube playes and spotify is paused).
6function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
7	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
@		artist = bind(player, "artist").as(a => a && a + " - " || "");
)		title = bind(player, "title").as(t => {
&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
%			return t.substring(0, 20) + "...";
		});
;	return <box id={player.busName} className="MainBox Media">
9		{isSpot && <box className="info">{artist}{title}</box>}
0		<button onClicked={() => player.play_pause()}>
/			{bind(player, "playbackStatus").as(status =>
+				status === Mpris.PlaybackStatus.PLAYING
+					? <icon icon="media-playback-pause" />
+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
if (!t) return "";
%			return t.substring(0, 20) + "...";
		});
;	return <box id={player.busName} className="MainBox Media">
9		{isSpot && <box className="info">{artist}{title}</box>}
0		<button onClicked={() => player.play_pause()}>
/			{bind(player, "playbackStatus").as(status =>
+				status === Mpris.PlaybackStatus.PLAYING
+					? <icon icon="media-playback-pause" />
+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[e
import { bind } from "astal";
$import Mpris from "gi://AstalMpris";
const MAX_TITLE: Number = 20;
P//------------------------------------------------------------------------------
7// Media Widget -> shows playbackstate for each player.
+// Also shows artist and title for Spotify.
M// TODO: Only show active player (e.g. youtube playes and spotify is paused).
6function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
7	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
@		artist = bind(player, "artist").as(a => a && a + " - " || "");
)		title = bind(player, "title").as(t => {
&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
%			return t.substring(0, 20) + "...";
		});
;	return <box id={player.busName} className="MainBox Media">
9		{isSpot && <box className="info">{artist}{title}</box>}
0		<button onClicked={() => player.play_pause()}>
/			{bind(player, "playbackStatus").as(status =>
+				status === Mpris.PlaybackStatus.PLAYING
+					? <icon icon="media-playback-pause" />
+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
if (!t) return "";return t.substring(0, 20) + "...";
		});
;	return <box id={player.busName} className="MainBox Media">
9		{isSpot && <box className="info">{artist}{title}</box>}
0		<button onClicked={() => player.play_pause()}>
/			{bind(player, "playbackStatus").as(status =>
+				status === Mpris.PlaybackStatus.PLAYING
+					? <icon icon="media-playback-pause" />
+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[e
import { bind } from "astal";
$import Mpris from "gi://AstalMpris";
const MAX_TITLE: Number = 20;
P//------------------------------------------------------------------------------
7// Media Widget -> shows playbackstate for each player.
+// Also shows artist and title for Spotify.
M// TODO: Only show active player (e.g. youtube playes and spotify is paused).
6function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
7	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
@		artist = bind(player, "artist").as(a => a && a + " - " || "");
)		title = bind(player, "title").as(t => {
&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
%			return t.substring(0, 20) + "...";
		});
;	return <box id={player.busName} className="MainBox Media">
9		{isSpot && <box className="info">{artist}{title}</box>}
0		<button onClicked={() => player.play_pause()}>
/			{bind(player, "playbackStatus").as(status =>
+				status === Mpris.PlaybackStatus.PLAYING
+					? <icon icon="media-playback-pause" />
+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
return t.substring(0, 20) + "...";
		});
;	return <box id={player.busName} className="MainBox Media">
9		{isSpot && <box className="info">{artist}{title}</box>}
0		<button onClicked={() => player.play_pause()}>
/			{bind(player, "playbackStatus").as(status =>
+				status === Mpris.PlaybackStatus.PLAYING
+					? <icon icon="media-playback-pause" />
+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[e
import { bind } from "astal";
$import Mpris from "gi://AstalMpris";
const MAX_TITLE: Number = 20;
P//------------------------------------------------------------------------------
7// Media Widget -> shows playbackstate for each player.
+// Also shows artist and title for Spotify.
M// TODO: Only show active player (e.g. youtube playes and spotify is paused).
6function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
7	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
@		artist = bind(player, "artist").as(a => a && a + " - " || "");
)		title = bind(player, "title").as(t => {
&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
%			return t.substring(0, 20) + "...";
		});
;	return <box id={player.busName} className="MainBox Media">
9		{isSpot && <box className="info">{artist}{title}</box>}
0		<button onClicked={() => player.play_pause()}>
/			{bind(player, "playbackStatus").as(status =>
+				status === Mpris.PlaybackStatus.PLAYING
+					? <icon icon="media-playback-pause" />
+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
return t.substring(0, 20) + "...";});
;	return <box id={player.busName} className="MainBox Media">
9		{isSpot && <box className="info">{artist}{title}</box>}
0		<button onClicked={() => player.play_pause()}>
/			{bind(player, "playbackStatus").as(status =>
+				status === Mpris.PlaybackStatus.PLAYING
+					? <icon icon="media-playback-pause" />
+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[e
import { bind } from "astal";
$import Mpris from "gi://AstalMpris";
const MAX_TITLE: Number = 20;
P//------------------------------------------------------------------------------
7// Media Widget -> shows playbackstate for each player.
+// Also shows artist and title for Spotify.
M// TODO: Only show active player (e.g. youtube playes and spotify is paused).
6function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
7	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
@		artist = bind(player, "artist").as(a => a && a + " - " || "");
)		title = bind(player, "title").as(t => {
&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
%			return t.substring(0, 20) + "...";
		});
;	return <box id={player.busName} className="MainBox Media">
9		{isSpot && <box className="info">{artist}{title}</box>}
0		<button onClicked={() => player.play_pause()}>
/			{bind(player, "playbackStatus").as(status =>
+				status === Mpris.PlaybackStatus.PLAYING
+					? <icon icon="media-playback-pause" />
+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
;	return <box id={player.busName} className="MainBox Media">
9		{isSpot && <box className="info">{artist}{title}</box>}
0		<button onClicked={() => player.play_pause()}>
/			{bind(player, "playbackStatus").as(status =>
+				status === Mpris.PlaybackStatus.PLAYING
+					? <icon icon="media-playback-pause" />
+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[e
import { bind } from "astal";
$import Mpris from "gi://AstalMpris";
const MAX_TITLE: Number = 20;
P//------------------------------------------------------------------------------
7// Media Widget -> shows playbackstate for each player.
+// Also shows artist and title for Spotify.
M// TODO: Only show active player (e.g. youtube playes and spotify is paused).
6function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
7	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
@		artist = bind(player, "artist").as(a => a && a + " - " || "");
)		title = bind(player, "title").as(t => {
&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
%			return t.substring(0, 20) + "...";
		});
;	return <box id={player.busName} className="MainBox Media">
9		{isSpot && <box className="info">{artist}{title}</box>}
0		<button onClicked={() => player.play_pause()}>
/			{bind(player, "playbackStatus").as(status =>
+				status === Mpris.PlaybackStatus.PLAYING
+					? <icon icon="media-playback-pause" />
+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
});}
;	return <box id={player.busName} className="MainBox Media">
9		{isSpot && <box className="info">{artist}{title}</box>}
0		<button onClicked={() => player.play_pause()}>
/			{bind(player, "playbackStatus").as(status =>
+				status === Mpris.PlaybackStatus.PLAYING
+					? <icon icon="media-playback-pause" />
+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[e
import { bind } from "astal";
$import Mpris from "gi://AstalMpris";
const MAX_TITLE: Number = 20;
P//------------------------------------------------------------------------------
7// Media Widget -> shows playbackstate for each player.
+// Also shows artist and title for Spotify.
M// TODO: Only show active player (e.g. youtube playes and spotify is paused).
6function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
7	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
@		artist = bind(player, "artist").as(a => a && a + " - " || "");
)		title = bind(player, "title").as(t => {
&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
%			return t.substring(0, 20) + "...";
		});
;	return <box id={player.busName} className="MainBox Media">
9		{isSpot && <box className="info">{artist}{title}</box>}
0		<button onClicked={() => player.play_pause()}>
/			{bind(player, "playbackStatus").as(status =>
+				status === Mpris.PlaybackStatus.PLAYING
+					? <icon icon="media-playback-pause" />
+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
});};	return <box id={player.busName} className="MainBox Media">
9		{isSpot && <box className="info">{artist}{title}</box>}
0		<button onClicked={() => player.play_pause()}>
/			{bind(player, "playbackStatus").as(status =>
+				status === Mpris.PlaybackStatus.PLAYING
+					? <icon icon="media-playback-pause" />
+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[e
import { bind } from "astal";
$import Mpris from "gi://AstalMpris";
const MAX_TITLE: Number = 20;
P//------------------------------------------------------------------------------
7// Media Widget -> shows playbackstate for each player.
+// Also shows artist and title for Spotify.
M// TODO: Only show active player (e.g. youtube playes and spotify is paused).
6function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
7	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
@		artist = bind(player, "artist").as(a => a && a + " - " || "");
)		title = bind(player, "title").as(t => {
&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
%			return t.substring(0, 20) + "...";
		});
;	return <box id={player.busName} className="MainBox Media">
9		{isSpot && <box className="info">{artist}{title}</box>}
0		<button onClicked={() => player.play_pause()}>
/			{bind(player, "playbackStatus").as(status =>
+				status === Mpris.PlaybackStatus.PLAYING
+					? <icon icon="media-playback-pause" />
+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
return <box id={player.busName} className="MainBox Media">
9		{isSpot && <box className="info">{artist}{title}</box>}
0		<button onClicked={() => player.play_pause()}>
/			{bind(player, "playbackStatus").as(status =>
+				status === Mpris.PlaybackStatus.PLAYING
+					? <icon icon="media-playback-pause" />
+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[e
import { bind } from "astal";
$import Mpris from "gi://AstalMpris";
const MAX_TITLE: Number = 20;
P//------------------------------------------------------------------------------
7// Media Widget -> shows playbackstate for each player.
+// Also shows artist and title for Spotify.
M// TODO: Only show active player (e.g. youtube playes and spotify is paused).
6function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
7	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
@		artist = bind(player, "artist").as(a => a && a + " - " || "");
)		title = bind(player, "title").as(t => {
&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
%			return t.substring(0, 20) + "...";
		});
;	return <box id={player.busName} className="MainBox Media">
9		{isSpot && <box className="info">{artist}{title}</box>}
0		<button onClicked={() => player.play_pause()}>
/			{bind(player, "playbackStatus").as(status =>
+				status === Mpris.PlaybackStatus.PLAYING
+					? <icon icon="media-playback-pause" />
+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
return <box id={player.busName} className="MainBox Media">9		{isSpot && <box className="info">{artist}{title}</box>}
0		<button onClicked={() => player.play_pause()}>
/			{bind(player, "playbackStatus").as(status =>
+				status === Mpris.PlaybackStatus.PLAYING
+					? <icon icon="media-playback-pause" />
+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[e
import { bind } from "astal";
$import Mpris from "gi://AstalMpris";
const MAX_TITLE: Number = 20;
P//------------------------------------------------------------------------------
7// Media Widget -> shows playbackstate for each player.
+// Also shows artist and title for Spotify.
M// TODO: Only show active player (e.g. youtube playes and spotify is paused).
6function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
7	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
@		artist = bind(player, "artist").as(a => a && a + " - " || "");
)		title = bind(player, "title").as(t => {
&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
%			return t.substring(0, 20) + "...";
		});
;	return <box id={player.busName} className="MainBox Media">
9		{isSpot && <box className="info">{artist}{title}</box>}
0		<button onClicked={() => player.play_pause()}>
/			{bind(player, "playbackStatus").as(status =>
+				status === Mpris.PlaybackStatus.PLAYING
+					? <icon icon="media-playback-pause" />
+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
return <box id={player.busName} className="MainBox Media">{isSpot && <box className="info">{artist}{title}</box>}
0		<button onClicked={() => player.play_pause()}>
/			{bind(player, "playbackStatus").as(status =>
+				status === Mpris.PlaybackStatus.PLAYING
+					? <icon icon="media-playback-pause" />
+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[e
import { bind } from "astal";
$import Mpris from "gi://AstalMpris";
const MAX_TITLE: Number = 20;
P//------------------------------------------------------------------------------
7// Media Widget -> shows playbackstate for each player.
+// Also shows artist and title for Spotify.
M// TODO: Only show active player (e.g. youtube playes and spotify is paused).
6function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
7	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
@		artist = bind(player, "artist").as(a => a && a + " - " || "");
)		title = bind(player, "title").as(t => {
&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
%			return t.substring(0, 20) + "...";
		});
;	return <box id={player.busName} className="MainBox Media">
9		{isSpot && <box className="info">{artist}{title}</box>}
0		<button onClicked={() => player.play_pause()}>
/			{bind(player, "playbackStatus").as(status =>
+				status === Mpris.PlaybackStatus.PLAYING
+					? <icon icon="media-playback-pause" />
+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
	s{isSpot && <box className="info">{artist}{title}</box>}
0		<button onClicked={() => player.play_pause()}>
/			{bind(player, "playbackStatus").as(status =>
+				status === Mpris.PlaybackStatus.PLAYING
+					? <icon icon="media-playback-pause" />
+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[e
import { bind } from "astal";
$import Mpris from "gi://AstalMpris";
const MAX_TITLE: Number = 20;
P//------------------------------------------------------------------------------
7// Media Widget -> shows playbackstate for each player.
+// Also shows artist and title for Spotify.
M// TODO: Only show active player (e.g. youtube playes and spotify is paused).
6function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
7	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
@		artist = bind(player, "artist").as(a => a && a + " - " || "");
)		title = bind(player, "title").as(t => {
&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
%			return t.substring(0, 20) + "...";
		});
;	return <box id={player.busName} className="MainBox Media">
9		{isSpot && <box className="info">{artist}{title}</box>}
0		<button onClicked={() => player.play_pause()}>
/			{bind(player, "playbackStatus").as(status =>
+				status === Mpris.PlaybackStatus.PLAYING
+					? <icon icon="media-playback-pause" />
+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
	m{isSpot && <box className="info">{artist}{title}</box>}<button onClicked={() => player.play_pause()}>
/			{bind(player, "playbackStatus").as(status =>
+				status === Mpris.PlaybackStatus.PLAYING
+					? <icon icon="media-playback-pause" />
+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[e
import { bind } from "astal";
$import Mpris from "gi://AstalMpris";
const MAX_TITLE: Number = 20;
P//------------------------------------------------------------------------------
7// Media Widget -> shows playbackstate for each player.
+// Also shows artist and title for Spotify.
M// TODO: Only show active player (e.g. youtube playes and spotify is paused).
6function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
7	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
@		artist = bind(player, "artist").as(a => a && a + " - " || "");
)		title = bind(player, "title").as(t => {
&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
%			return t.substring(0, 20) + "...";
		});
;	return <box id={player.busName} className="MainBox Media">
9		{isSpot && <box className="info">{artist}{title}</box>}
0		<button onClicked={() => player.play_pause()}>
/			{bind(player, "playbackStatus").as(status =>
+				status === Mpris.PlaybackStatus.PLAYING
+					? <icon icon="media-playback-pause" />
+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
	6<button onClicked={() => player.play_pause()}>
/			{bind(player, "playbackStatus").as(status =>
+				status === Mpris.PlaybackStatus.PLAYING
+					? <icon icon="media-playback-pause" />
+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[e
import { bind } from "astal";
$import Mpris from "gi://AstalMpris";
const MAX_TITLE: Number = 20;
P//------------------------------------------------------------------------------
7// Media Widget -> shows playbackstate for each player.
+// Also shows artist and title for Spotify.
M// TODO: Only show active player (e.g. youtube playes and spotify is paused).
6function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
7	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
@		artist = bind(player, "artist").as(a => a && a + " - " || "");
)		title = bind(player, "title").as(t => {
&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
%			return t.substring(0, 20) + "...";
		});
;	return <box id={player.busName} className="MainBox Media">
9		{isSpot && <box className="info">{artist}{title}</box>}
0		<button onClicked={() => player.play_pause()}>
/			{bind(player, "playbackStatus").as(status =>
+				status === Mpris.PlaybackStatus.PLAYING
+					? <icon icon="media-playback-pause" />
+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
	/<button onClicked={() => player.play_pause()}>{bind(player, "playbackStatus").as(status =>
+				status === Mpris.PlaybackStatus.PLAYING
+					? <icon icon="media-playback-pause" />
+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[e
import { bind } from "astal";
$import Mpris from "gi://AstalMpris";
const MAX_TITLE: Number = 20;
P//------------------------------------------------------------------------------
7// Media Widget -> shows playbackstate for each player.
+// Also shows artist and title for Spotify.
M// TODO: Only show active player (e.g. youtube playes and spotify is paused).
6function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
7	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
@		artist = bind(player, "artist").as(a => a && a + " - " || "");
)		title = bind(player, "title").as(t => {
&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
%			return t.substring(0, 20) + "...";
		});
;	return <box id={player.busName} className="MainBox Media">
9		{isSpot && <box className="info">{artist}{title}</box>}
0		<button onClicked={() => player.play_pause()}>
/			{bind(player, "playbackStatus").as(status =>
+				status === Mpris.PlaybackStatus.PLAYING
+					? <icon icon="media-playback-pause" />
+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
{bind(player, "playbackStatus").as(status =>
+				status === Mpris.PlaybackStatus.PLAYING
+					? <icon icon="media-playback-pause" />
+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[e
import { bind } from "astal";
$import Mpris from "gi://AstalMpris";
const MAX_TITLE: Number = 20;
P//------------------------------------------------------------------------------
7// Media Widget -> shows playbackstate for each player.
+// Also shows artist and title for Spotify.
M// TODO: Only show active player (e.g. youtube playes and spotify is paused).
6function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
7	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
@		artist = bind(player, "artist").as(a => a && a + " - " || "");
)		title = bind(player, "title").as(t => {
&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
%			return t.substring(0, 20) + "...";
		});
;	return <box id={player.busName} className="MainBox Media">
9		{isSpot && <box className="info">{artist}{title}</box>}
0		<button onClicked={() => player.play_pause()}>
/			{bind(player, "playbackStatus").as(status =>
+				status === Mpris.PlaybackStatus.PLAYING
+					? <icon icon="media-playback-pause" />
+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
{bind(player, "playbackStatus").as(status =>status === Mpris.PlaybackStatus.PLAYING
+					? <icon icon="media-playback-pause" />
+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[e
import { bind } from "astal";
$import Mpris from "gi://AstalMpris";
const MAX_TITLE: Number = 20;
P//------------------------------------------------------------------------------
7// Media Widget -> shows playbackstate for each player.
+// Also shows artist and title for Spotify.
M// TODO: Only show active player (e.g. youtube playes and spotify is paused).
6function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
7	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
@		artist = bind(player, "artist").as(a => a && a + " - " || "");
)		title = bind(player, "title").as(t => {
&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
%			return t.substring(0, 20) + "...";
		});
;	return <box id={player.busName} className="MainBox Media">
9		{isSpot && <box className="info">{artist}{title}</box>}
0		<button onClicked={() => player.play_pause()}>
/			{bind(player, "playbackStatus").as(status =>
+				status === Mpris.PlaybackStatus.PLAYING
+					? <icon icon="media-playback-pause" />
+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
status === Mpris.PlaybackStatus.PLAYING
+					? <icon icon="media-playback-pause" />
+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[e
import { bind } from "astal";
$import Mpris from "gi://AstalMpris";
const MAX_TITLE: Number = 20;
P//------------------------------------------------------------------------------
7// Media Widget -> shows playbackstate for each player.
+// Also shows artist and title for Spotify.
M// TODO: Only show active player (e.g. youtube playes and spotify is paused).
6function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
7	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
@		artist = bind(player, "artist").as(a => a && a + " - " || "");
)		title = bind(player, "title").as(t => {
&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
%			return t.substring(0, 20) + "...";
		});
;	return <box id={player.busName} className="MainBox Media">
9		{isSpot && <box className="info">{artist}{title}</box>}
0		<button onClicked={() => player.play_pause()}>
/			{bind(player, "playbackStatus").as(status =>
+				status === Mpris.PlaybackStatus.PLAYING
+					? <icon icon="media-playback-pause" />
+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
status === Mpris.PlaybackStatus.PLAYING? <icon icon="media-playback-pause" />
+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[e
import { bind } from "astal";
$import Mpris from "gi://AstalMpris";
const MAX_TITLE: Number = 20;
P//------------------------------------------------------------------------------
7// Media Widget -> shows playbackstate for each player.
+// Also shows artist and title for Spotify.
M// TODO: Only show active player (e.g. youtube playes and spotify is paused).
6function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
7	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
@		artist = bind(player, "artist").as(a => a && a + " - " || "");
)		title = bind(player, "title").as(t => {
&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
%			return t.substring(0, 20) + "...";
		});
;	return <box id={player.busName} className="MainBox Media">
9		{isSpot && <box className="info">{artist}{title}</box>}
0		<button onClicked={() => player.play_pause()}>
/			{bind(player, "playbackStatus").as(status =>
+				status === Mpris.PlaybackStatus.PLAYING
+					? <icon icon="media-playback-pause" />
+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
? <icon icon="media-playback-pause" />
+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[e
import { bind } from "astal";
$import Mpris from "gi://AstalMpris";
const MAX_TITLE: Number = 20;
P//------------------------------------------------------------------------------
7// Media Widget -> shows playbackstate for each player.
+// Also shows artist and title for Spotify.
M// TODO: Only show active player (e.g. youtube playes and spotify is paused).
6function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
7	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
@		artist = bind(player, "artist").as(a => a && a + " - " || "");
)		title = bind(player, "title").as(t => {
&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
%			return t.substring(0, 20) + "...";
		});
;	return <box id={player.busName} className="MainBox Media">
9		{isSpot && <box className="info">{artist}{title}</box>}
0		<button onClicked={() => player.play_pause()}>
/			{bind(player, "playbackStatus").as(status =>
+				status === Mpris.PlaybackStatus.PLAYING
+					? <icon icon="media-playback-pause" />
+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
? <icon icon="media-playback-pause" />: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[e
import { bind } from "astal";
$import Mpris from "gi://AstalMpris";
const MAX_TITLE: Number = 20;
P//------------------------------------------------------------------------------
7// Media Widget -> shows playbackstate for each player.
+// Also shows artist and title for Spotify.
M// TODO: Only show active player (e.g. youtube playes and spotify is paused).
6function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
7	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
@		artist = bind(player, "artist").as(a => a && a + " - " || "");
)		title = bind(player, "title").as(t => {
&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
%			return t.substring(0, 20) + "...";
		});
;	return <box id={player.busName} className="MainBox Media">
9		{isSpot && <box className="info">{artist}{title}</box>}
0		<button onClicked={() => player.play_pause()}>
/			{bind(player, "playbackStatus").as(status =>
+				status === Mpris.PlaybackStatus.PLAYING
+					? <icon icon="media-playback-pause" />
+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
n: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[e
import { bind } from "astal";
$import Mpris from "gi://AstalMpris";
const MAX_TITLE: Number = 20;
P//------------------------------------------------------------------------------
7// Media Widget -> shows playbackstate for each player.
+// Also shows artist and title for Spotify.
M// TODO: Only show active player (e.g. youtube playes and spotify is paused).
6function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
7	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
@		artist = bind(player, "artist").as(a => a && a + " - " || "");
)		title = bind(player, "title").as(t => {
&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
%			return t.substring(0, 20) + "...";
		});
;	return <box id={player.busName} className="MainBox Media">
9		{isSpot && <box className="info">{artist}{title}</box>}
0		<button onClicked={() => player.play_pause()}>
/			{bind(player, "playbackStatus").as(status =>
+				status === Mpris.PlaybackStatus.PLAYING
+					? <icon icon="media-playback-pause" />
+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
g: <icon icon="media-playback-start" />)}
		</button>
	</box>
g@[e
import { bind } from "astal";
$import Mpris from "gi://AstalMpris";
const MAX_TITLE: Number = 20;
P//------------------------------------------------------------------------------
7// Media Widget -> shows playbackstate for each player.
+// Also shows artist and title for Spotify.
M// TODO: Only show active player (e.g. youtube playes and spotify is paused).
6function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
7	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
@		artist = bind(player, "artist").as(a => a && a + " - " || "");
)		title = bind(player, "title").as(t => {
&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
%			return t.substring(0, 20) + "...";
		});
;	return <box id={player.busName} className="MainBox Media">
9		{isSpot && <box className="info">{artist}{title}</box>}
0		<button onClicked={() => player.play_pause()}>
/			{bind(player, "playbackStatus").as(status =>
+				status === Mpris.PlaybackStatus.PLAYING
+					? <icon icon="media-playback-pause" />
+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
		</button>
	</box>
g@[e
import { bind } from "astal";
$import Mpris from "gi://AstalMpris";
const MAX_TITLE: Number = 20;
P//------------------------------------------------------------------------------
7// Media Widget -> shows playbackstate for each player.
+// Also shows artist and title for Spotify.
M// TODO: Only show active player (e.g. youtube playes and spotify is paused).
6function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
7	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
@		artist = bind(player, "artist").as(a => a && a + " - " || "");
)		title = bind(player, "title").as(t => {
&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
%			return t.substring(0, 20) + "...";
		});
;	return <box id={player.busName} className="MainBox Media">
9		{isSpot && <box className="info">{artist}{title}</box>}
0		<button onClicked={() => player.play_pause()}>
/			{bind(player, "playbackStatus").as(status =>
+				status === Mpris.PlaybackStatus.PLAYING
+					? <icon icon="media-playback-pause" />
+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
9</button>
	</box>
g@[e
import { bind } from "astal";
$import Mpris from "gi://AstalMpris";
const MAX_TITLE: Number = 20;
P//------------------------------------------------------------------------------
7// Media Widget -> shows playbackstate for each player.
+// Also shows artist and title for Spotify.
M// TODO: Only show active player (e.g. youtube playes and spotify is paused).
6function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
7	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
@		artist = bind(player, "artist").as(a => a && a + " - " || "");
)		title = bind(player, "title").as(t => {
&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
%			return t.substring(0, 20) + "...";
		});
;	return <box id={player.busName} className="MainBox Media">
9		{isSpot && <box className="info">{artist}{title}</box>}
0		<button onClicked={() => player.play_pause()}>
/			{bind(player, "playbackStatus").as(status =>
+				status === Mpris.PlaybackStatus.PLAYING
+					? <icon icon="media-playback-pause" />
+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
	</button>
+</box>
g@[e
import { bind } from "astal";
$import Mpris from "gi://AstalMpris";
const MAX_TITLE: Number = 20;
P//------------------------------------------------------------------------------
7// Media Widget -> shows playbackstate for each player.
+// Also shows artist and title for Spotify.
M// TODO: Only show active player (e.g. youtube playes and spotify is paused).
6function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
7	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
@		artist = bind(player, "artist").as(a => a && a + " - " || "");
)		title = bind(player, "title").as(t => {
&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
%			return t.substring(0, 20) + "...";
		});
;	return <box id={player.busName} className="MainBox Media">
9		{isSpot && <box className="info">{artist}{title}</box>}
0		<button onClicked={() => player.play_pause()}>
/			{bind(player, "playbackStatus").as(status =>
+				status === Mpris.PlaybackStatus.PLAYING
+					? <icon icon="media-playback-pause" />
+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
4</button></box>
g@[e
import { bind } from "astal";
$import Mpris from "gi://AstalMpris";
const MAX_TITLE: Number = 20;
P//------------------------------------------------------------------------------
7// Media Widget -> shows playbackstate for each player.
+// Also shows artist and title for Spotify.
M// TODO: Only show active player (e.g. youtube playes and spotify is paused).
6function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
7	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
@		artist = bind(player, "artist").as(a => a && a + " - " || "");
)		title = bind(player, "title").as(t => {
&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
%			return t.substring(0, 20) + "...";
		});
;	return <box id={player.busName} className="MainBox Media">
9		{isSpot && <box className="info">{artist}{title}</box>}
0		<button onClicked={() => player.play_pause()}>
/			{bind(player, "playbackStatus").as(status =>
+				status === Mpris.PlaybackStatus.PLAYING
+					? <icon icon="media-playback-pause" />
+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
+</box>
g@[e
import { bind } from "astal";
$import Mpris from "gi://AstalMpris";
const MAX_TITLE: Number = 20;
P//------------------------------------------------------------------------------
7// Media Widget -> shows playbackstate for each player.
+// Also shows artist and title for Spotify.
M// TODO: Only show active player (e.g. youtube playes and spotify is paused).
6function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
7	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
@		artist = bind(player, "artist").as(a => a && a + " - " || "");
)		title = bind(player, "title").as(t => {
&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
%			return t.substring(0, 20) + "...";
		});
;	return <box id={player.busName} className="MainBox Media">
9		{isSpot && <box className="info">{artist}{title}</box>}
0		<button onClicked={() => player.play_pause()}>
/			{bind(player, "playbackStatus").as(status =>
+				status === Mpris.PlaybackStatus.PLAYING
+					? <icon icon="media-playback-pause" />
+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
6function Media({ player }: { player: Mpris.Player }) {5
|</box>
g@[e
import { bind } from "astal";
$import Mpris from "gi://AstalMpris";
const MAX_TITLE: Number = 20;
P//------------------------------------------------------------------------------
7// Media Widget -> shows playbackstate for each player.
+// Also shows artist and title for Spotify.
M// TODO: Only show active player (e.g. youtube playes and spotify is paused).
6function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
7	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
@		artist = bind(player, "artist").as(a => a && a + " - " || "");
)		title = bind(player, "title").as(t => {
&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
%			return t.substring(0, 20) + "...";
		});
;	return <box id={player.busName} className="MainBox Media">
9		{isSpot && <box className="info">{artist}{title}</box>}
0		<button onClicked={() => player.play_pause()}>
/			{bind(player, "playbackStatus").as(status =>
+				status === Mpris.PlaybackStatus.PLAYING
+					? <icon icon="media-playback-pause" />
+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
6function Media({ player }: { player: Mpris.Player }) {5
</box>mport { bind } from "astal";
$import Mpris from "gi://AstalMpris";
const MAX_TITLE: Number = 20;
P//------------------------------------------------------------------------------
7// Media Widget -> shows playbackstate for each player.
+// Also shows artist and title for Spotify.
M// TODO: Only show active player (e.g. youtube playes and spotify is paused).
6function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
7	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
@		artist = bind(player, "artist").as(a => a && a + " - " || "");
)		title = bind(player, "title").as(t => {
&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
%			return t.substring(0, 20) + "...";
		});
;	return <box id={player.busName} className="MainBox Media">
9		{isSpot && <box className="info">{artist}{title}</box>}
0		<button onClicked={() => player.play_pause()}>
/			{bind(player, "playbackStatus").as(status =>
+				status === Mpris.PlaybackStatus.PLAYING
+					? <icon icon="media-playback-pause" />
+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
6function Media({ player }: { player: Mpris.Player }) {5
</box>import { bind } from "astal";
$import Mpris from "gi://AstalMpris";
const MAX_TITLE: Number = 20;
P//------------------------------------------------------------------------------
7// Media Widget -> shows playbackstate for each player.
+// Also shows artist and title for Spotify.
M// TODO: Only show active player (e.g. youtube playes and spotify is paused).
6function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
7	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
@		artist = bind(player, "artist").as(a => a && a + " - " || "");
)		title = bind(player, "title").as(t => {
&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
%			return t.substring(0, 20) + "...";
		});
;	return <box id={player.busName} className="MainBox Media">
9		{isSpot && <box className="info">{artist}{title}</box>}
0		<button onClicked={() => player.play_pause()}>
/			{bind(player, "playbackStatus").as(status =>
+				status === Mpris.PlaybackStatus.PLAYING
+					? <icon icon="media-playback-pause" />
+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
6function Media({ player }: { player: Mpris.Player }) {5
import { bind } from "astal";
$import Mpris from "gi://AstalMpris";
const MAX_TITLE: Number = 20;
P//------------------------------------------------------------------------------
7// Media Widget -> shows playbackstate for each player.
+// Also shows artist and title for Spotify.
M// TODO: Only show active player (e.g. youtube playes and spotify is paused).
6function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
7	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
@		artist = bind(player, "artist").as(a => a && a + " - " || "");
)		title = bind(player, "title").as(t => {
&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
%			return t.substring(0, 20) + "...";
		});
;	return <box id={player.busName} className="MainBox Media">
9		{isSpot && <box className="info">{artist}{title}</box>}
0		<button onClicked={() => player.play_pause()}>
/			{bind(player, "playbackStatus").as(status =>
+				status === Mpris.PlaybackStatus.PLAYING
+					? <icon icon="media-playback-pause" />
+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
6function Media({ player }: { player: Mpris.Player }) {5
import { bind } from "astal";$import Mpris from "gi://AstalMpris";
const MAX_TITLE: Number = 20;
P//------------------------------------------------------------------------------
7// Media Widget -> shows playbackstate for each player.
+// Also shows artist and title for Spotify.
M// TODO: Only show active player (e.g. youtube playes and spotify is paused).
6function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
7	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
@		artist = bind(player, "artist").as(a => a && a + " - " || "");
)		title = bind(player, "title").as(t => {
&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
%			return t.substring(0, 20) + "...";
		});
;	return <box id={player.busName} className="MainBox Media">
9		{isSpot && <box className="info">{artist}{title}</box>}
0		<button onClicked={() => player.play_pause()}>
/			{bind(player, "playbackStatus").as(status =>
+				status === Mpris.PlaybackStatus.PLAYING
+					? <icon icon="media-playback-pause" />
+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
6function Media({ player }: { player: Mpris.Player }) {5
$import Mpris from "gi://AstalMpris";
const MAX_TITLE: Number = 20;
P//------------------------------------------------------------------------------
7// Media Widget -> shows playbackstate for each player.
+// Also shows artist and title for Spotify.
M// TODO: Only show active player (e.g. youtube playes and spotify is paused).
6function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
7	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
@		artist = bind(player, "artist").as(a => a && a + " - " || "");
)		title = bind(player, "title").as(t => {
&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
%			return t.substring(0, 20) + "...";
		});
;	return <box id={player.busName} className="MainBox Media">
9		{isSpot && <box className="info">{artist}{title}</box>}
0		<button onClicked={() => player.play_pause()}>
/			{bind(player, "playbackStatus").as(status =>
+				status === Mpris.PlaybackStatus.PLAYING
+					? <icon icon="media-playback-pause" />
+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
6function Media({ player }: { player: Mpris.Player }) {5
import Mpris from "gi://AstalMpris";
const MAX_TITLE: Number = 20;
P//------------------------------------------------------------------------------
7// Media Widget -> shows playbackstate for each player.
+// Also shows artist and title for Spotify.
M// TODO: Only show active player (e.g. youtube playes and spotify is paused).
6function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
7	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
@		artist = bind(player, "artist").as(a => a && a + " - " || "");
)		title = bind(player, "title").as(t => {
&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
%			return t.substring(0, 20) + "...";
		});
;	return <box id={player.busName} className="MainBox Media">
9		{isSpot && <box className="info">{artist}{title}</box>}
0		<button onClicked={() => player.play_pause()}>
/			{bind(player, "playbackStatus").as(status =>
+				status === Mpris.PlaybackStatus.PLAYING
+					? <icon icon="media-playback-pause" />
+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
6function Media({ player }: { player: Mpris.Player }) {5
import Mpris from "gi://AstalMpris";const MAX_TITLE: Number = 20;
P//------------------------------------------------------------------------------
7// Media Widget -> shows playbackstate for each player.
+// Also shows artist and title for Spotify.
M// TODO: Only show active player (e.g. youtube playes and spotify is paused).
6function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
7	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
@		artist = bind(player, "artist").as(a => a && a + " - " || "");
)		title = bind(player, "title").as(t => {
&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
%			return t.substring(0, 20) + "...";
		});
;	return <box id={player.busName} className="MainBox Media">
9		{isSpot && <box className="info">{artist}{title}</box>}
0		<button onClicked={() => player.play_pause()}>
/			{bind(player, "playbackStatus").as(status =>
+				status === Mpris.PlaybackStatus.PLAYING
+					? <icon icon="media-playback-pause" />
+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
6function Media({ player }: { player: Mpris.Player }) {5
cconst MAX_TITLE: Number = 20;
P//------------------------------------------------------------------------------
7// Media Widget -> shows playbackstate for each player.
+// Also shows artist and title for Spotify.
M// TODO: Only show active player (e.g. youtube playes and spotify is paused).
6function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
7	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
@		artist = bind(player, "artist").as(a => a && a + " - " || "");
)		title = bind(player, "title").as(t => {
&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
%			return t.substring(0, 20) + "...";
		});
;	return <box id={player.busName} className="MainBox Media">
9		{isSpot && <box className="info">{artist}{title}</box>}
0		<button onClicked={() => player.play_pause()}>
/			{bind(player, "playbackStatus").as(status =>
+				status === Mpris.PlaybackStatus.PLAYING
+					? <icon icon="media-playback-pause" />
+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
6function Media({ player }: { player: Mpris.Player }) {5
Wconst MAX_TITLE: Number = 20;//------------------------------------------------------------------------------
7// Media Widget -> shows playbackstate for each player.
+// Also shows artist and title for Spotify.
M// TODO: Only show active player (e.g. youtube playes and spotify is paused).
6function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
7	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
@		artist = bind(player, "artist").as(a => a && a + " - " || "");
)		title = bind(player, "title").as(t => {
&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
%			return t.substring(0, 20) + "...";
		});
;	return <box id={player.busName} className="MainBox Media">
9		{isSpot && <box className="info">{artist}{title}</box>}
0		<button onClicked={() => player.play_pause()}>
/			{bind(player, "playbackStatus").as(status =>
+				status === Mpris.PlaybackStatus.PLAYING
+					? <icon icon="media-playback-pause" />
+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
6function Media({ player }: { player: Mpris.Player }) {5
://------------------------------------------------------------------------------
7// Media Widget -> shows playbackstate for each player.
+// Also shows artist and title for Spotify.
M// TODO: Only show active player (e.g. youtube playes and spotify is paused).
6function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
7	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
@		artist = bind(player, "artist").as(a => a && a + " - " || "");
)		title = bind(player, "title").as(t => {
&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
%			return t.substring(0, 20) + "...";
		});
;	return <box id={player.busName} className="MainBox Media">
9		{isSpot && <box className="info">{artist}{title}</box>}
0		<button onClicked={() => player.play_pause()}>
/			{bind(player, "playbackStatus").as(status =>
+				status === Mpris.PlaybackStatus.PLAYING
+					? <icon icon="media-playback-pause" />
+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
6function Media({ player }: { player: Mpris.Player }) {5
6//------------------------------------------------------------------------------// Media Widget -> shows playbackstate for each player.
+// Also shows artist and title for Spotify.
M// TODO: Only show active player (e.g. youtube playes and spotify is paused).
6function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
7	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
@		artist = bind(player, "artist").as(a => a && a + " - " || "");
)		title = bind(player, "title").as(t => {
&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
%			return t.substring(0, 20) + "...";
		});
;	return <box id={player.busName} className="MainBox Media">
9		{isSpot && <box className="info">{artist}{title}</box>}
0		<button onClicked={() => player.play_pause()}>
/			{bind(player, "playbackStatus").as(status =>
+				status === Mpris.PlaybackStatus.PLAYING
+					? <icon icon="media-playback-pause" />
+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
6function Media({ player }: { player: Mpris.Player }) {5
// Media Widget -> shows playbackstate for each player.
+// Also shows artist and title for Spotify.
M// TODO: Only show active player (e.g. youtube playes and spotify is paused).
6function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
7	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
@		artist = bind(player, "artist").as(a => a && a + " - " || "");
)		title = bind(player, "title").as(t => {
&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
%			return t.substring(0, 20) + "...";
		});
;	return <box id={player.busName} className="MainBox Media">
9		{isSpot && <box className="info">{artist}{title}</box>}
0		<button onClicked={() => player.play_pause()}>
/			{bind(player, "playbackStatus").as(status =>
+				status === Mpris.PlaybackStatus.PLAYING
+					? <icon icon="media-playback-pause" />
+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
6function Media({ player }: { player: Mpris.Player }) {5
// Also shows artist and title for Spotify.
M// TODO: Only show active player (e.g. youtube playes and spotify is paused).
6function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
7	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
@		artist = bind(player, "artist").as(a => a && a + " - " || "");
)		title = bind(player, "title").as(t => {
&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
%			return t.substring(0, 20) + "...";
		});
;	return <box id={player.busName} className="MainBox Media">
9		{isSpot && <box className="info">{artist}{title}</box>}
0		<button onClicked={() => player.play_pause()}>
/			{bind(player, "playbackStatus").as(status =>
+				status === Mpris.PlaybackStatus.PLAYING
+					? <icon icon="media-playback-pause" />
+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
6function Media({ player }: { player: Mpris.Player }) {5
|// TODO: Only show active player (e.g. youtube playes and spotify is paused).
6function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
7	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
@		artist = bind(player, "artist").as(a => a && a + " - " || "");
)		title = bind(player, "title").as(t => {
&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
%			return t.substring(0, 20) + "...";
		});
;	return <box id={player.busName} className="MainBox Media">
9		{isSpot && <box className="info">{artist}{title}</box>}
0		<button onClicked={() => player.play_pause()}>
/			{bind(player, "playbackStatus").as(status =>
+				status === Mpris.PlaybackStatus.PLAYING
+					? <icon icon="media-playback-pause" />
+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
6function Media({ player }: { player: Mpris.Player }) {5
6function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
7	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
@		artist = bind(player, "artist").as(a => a && a + " - " || "");
)		title = bind(player, "title").as(t => {
&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
%			return t.substring(0, 20) + "...";
		});
;	return <box id={player.busName} className="MainBox Media">
9		{isSpot && <box className="info">{artist}{title}</box>}
0		<button onClicked={() => player.play_pause()}>
/			{bind(player, "playbackStatus").as(status =>
+				status === Mpris.PlaybackStatus.PLAYING
+					? <icon icon="media-playback-pause" />
+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
6function Media({ player }: { player: Mpris.Player }) {5
'//function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
7	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
@		artist = bind(player, "artist").as(a => a && a + " - " || "");
)		title = bind(player, "title").as(t => {
&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
%			return t.substring(0, 20) + "...";
		});
;	return <box id={player.busName} className="MainBox Media">
9		{isSpot && <box className="info">{artist}{title}</box>}
0		<button onClicked={() => player.play_pause()}>
/			{bind(player, "playbackStatus").as(status =>
+				status === Mpris.PlaybackStatus.PLAYING
+					? <icon icon="media-playback-pause" />
+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
6function Media({ player }: { player: Mpris.Player }) {5
%function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
7	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
@		artist = bind(player, "artist").as(a => a && a + " - " || "");
)		title = bind(player, "title").as(t => {
&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
%			return t.substring(0, 20) + "...";
		});
;	return <box id={player.busName} className="MainBox Media">
9		{isSpot && <box className="info">{artist}{title}</box>}
0		<button onClicked={() => player.play_pause()}>
/			{bind(player, "playbackStatus").as(status =>
+				status === Mpris.PlaybackStatus.PLAYING
+					? <icon icon="media-playback-pause" />
+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
6function Media({ player }: { player: Mpris.Player }) {5
let artist, title: any = "";
7	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
@		artist = bind(player, "artist").as(a => a && a + " - " || "");
)		title = bind(player, "title").as(t => {
&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
%			return t.substring(0, 20) + "...";
		});
;	return <box id={player.busName} className="MainBox Media">
9		{isSpot && <box className="info">{artist}{title}</box>}
0		<button onClicked={() => player.play_pause()}>
/			{bind(player, "playbackStatus").as(status =>
+				status === Mpris.PlaybackStatus.PLAYING
+					? <icon icon="media-playback-pause" />
+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
6function Media({ player }: { player: Mpris.Player }) {5
const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
@		artist = bind(player, "artist").as(a => a && a + " - " || "");
)		title = bind(player, "title").as(t => {
&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
%			return t.substring(0, 20) + "...";
		});
;	return <box id={player.busName} className="MainBox Media">
9		{isSpot && <box className="info">{artist}{title}</box>}
0		<button onClicked={() => player.play_pause()}>
/			{bind(player, "playbackStatus").as(status =>
+				status === Mpris.PlaybackStatus.PLAYING
+					? <icon icon="media-playback-pause" />
+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
6function Media({ player }: { player: Mpris.Player }) {5
if (isSpot) {
@		artist = bind(player, "artist").as(a => a && a + " - " || "");
)		title = bind(player, "title").as(t => {
&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
%			return t.substring(0, 20) + "...";
		});
;	return <box id={player.busName} className="MainBox Media">
9		{isSpot && <box className="info">{artist}{title}</box>}
0		<button onClicked={() => player.play_pause()}>
/			{bind(player, "playbackStatus").as(status =>
+				status === Mpris.PlaybackStatus.PLAYING
+					? <icon icon="media-playback-pause" />
+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
6function Media({ player }: { player: Mpris.Player }) {5
if (isSpot) {artist = bind(player, "artist").as(a => a && a + " - " || "");
)		title = bind(player, "title").as(t => {
&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
%			return t.substring(0, 20) + "...";
		});
;	return <box id={player.busName} className="MainBox Media">
9		{isSpot && <box className="info">{artist}{title}</box>}
0		<button onClicked={() => player.play_pause()}>
/			{bind(player, "playbackStatus").as(status =>
+				status === Mpris.PlaybackStatus.PLAYING
+					? <icon icon="media-playback-pause" />
+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
6function Media({ player }: { player: Mpris.Player }) {5
{artist = bind(player, "artist").as(a => a && a + " - " || "");
)		title = bind(player, "title").as(t => {
&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
%			return t.substring(0, 20) + "...";
		});
;	return <box id={player.busName} className="MainBox Media">
9		{isSpot && <box className="info">{artist}{title}</box>}
0		<button onClicked={() => player.play_pause()}>
/			{bind(player, "playbackStatus").as(status =>
+				status === Mpris.PlaybackStatus.PLAYING
+					? <icon icon="media-playback-pause" />
+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
6function Media({ player }: { player: Mpris.Player }) {5
:)		title = bind(player, "title").as(t => {
&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
%			return t.substring(0, 20) + "...";
		});
;	return <box id={player.busName} className="MainBox Media">
9		{isSpot && <box className="info">{artist}{title}</box>}
0		<button onClicked={() => player.play_pause()}>
/			{bind(player, "playbackStatus").as(status =>
+				status === Mpris.PlaybackStatus.PLAYING
+					? <icon icon="media-playback-pause" />
+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
6function Media({ player }: { player: Mpris.Player }) {5
7title = bind(player, "title").as(t => {
&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
%			return t.substring(0, 20) + "...";
		});
;	return <box id={player.busName} className="MainBox Media">
9		{isSpot && <box className="info">{artist}{title}</box>}
0		<button onClicked={() => player.play_pause()}>
/			{bind(player, "playbackStatus").as(status =>
+				status === Mpris.PlaybackStatus.PLAYING
+					? <icon icon="media-playback-pause" />
+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
6function Media({ player }: { player: Mpris.Player }) {5
	if (t.length < MAX_TITLE) return t;
			if (!t) return "";
%			return t.substring(0, 20) + "...";
		});
;	return <box id={player.busName} className="MainBox Media">
9		{isSpot && <box className="info">{artist}{title}</box>}
0		<button onClicked={() => player.play_pause()}>
/			{bind(player, "playbackStatus").as(status =>
+				status === Mpris.PlaybackStatus.PLAYING
+					? <icon icon="media-playback-pause" />
+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
6function Media({ player }: { player: Mpris.Player }) {5
if (!t) return "";
%			return t.substring(0, 20) + "...";
		});
;	return <box id={player.busName} className="MainBox Media">
9		{isSpot && <box className="info">{artist}{title}</box>}
0		<button onClicked={() => player.play_pause()}>
/			{bind(player, "playbackStatus").as(status =>
+				status === Mpris.PlaybackStatus.PLAYING
+					? <icon icon="media-playback-pause" />
+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
6function Media({ player }: { player: Mpris.Player }) {5
return t.substring(0, 20) + "...";
		});
;	return <box id={player.busName} className="MainBox Media">
9		{isSpot && <box className="info">{artist}{title}</box>}
0		<button onClicked={() => player.play_pause()}>
/			{bind(player, "playbackStatus").as(status =>
+				status === Mpris.PlaybackStatus.PLAYING
+					? <icon icon="media-playback-pause" />
+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
6function Media({ player }: { player: Mpris.Player }) {5
;	return <box id={player.busName} className="MainBox Media">
9		{isSpot && <box className="info">{artist}{title}</box>}
0		<button onClicked={() => player.play_pause()}>
/			{bind(player, "playbackStatus").as(status =>
+				status === Mpris.PlaybackStatus.PLAYING
+					? <icon icon="media-playback-pause" />
+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
6function Media({ player }: { player: Mpris.Player }) {5
;	return <box id={player.busName} className="MainBox Media">
9		{isSpot && <box className="info">{artist}{title}</box>}
0		<button onClicked={() => player.play_pause()}>
/			{bind(player, "playbackStatus").as(status =>
+				status === Mpris.PlaybackStatus.PLAYING
+					? <icon icon="media-playback-pause" />
+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
6function Media({ player }: { player: Mpris.Player }) {5
};	return <box id={player.busName} className="MainBox Media">
9		{isSpot && <box className="info">{artist}{title}</box>}
0		<button onClicked={() => player.play_pause()}>
/			{bind(player, "playbackStatus").as(status =>
+				status === Mpris.PlaybackStatus.PLAYING
+					? <icon icon="media-playback-pause" />
+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
6function Media({ player }: { player: Mpris.Player }) {5
return <box id={player.busName} className="MainBox Media">
9		{isSpot && <box className="info">{artist}{title}</box>}
0		<button onClicked={() => player.play_pause()}>
/			{bind(player, "playbackStatus").as(status =>
+				status === Mpris.PlaybackStatus.PLAYING
+					? <icon icon="media-playback-pause" />
+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
6function Media({ player }: { player: Mpris.Player }) {5
L{isSpot && <box className="info">{artist}{title}</box>}
0		<button onClicked={() => player.play_pause()}>
/			{bind(player, "playbackStatus").as(status =>
+				status === Mpris.PlaybackStatus.PLAYING
+					? <icon icon="media-playback-pause" />
+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
6function Media({ player }: { player: Mpris.Player }) {5
<button onClicked={() => player.play_pause()}>
/			{bind(player, "playbackStatus").as(status =>
+				status === Mpris.PlaybackStatus.PLAYING
+					? <icon icon="media-playback-pause" />
+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
6function Media({ player }: { player: Mpris.Player }) {5
{bind(player, "playbackStatus").as(status =>
+				status === Mpris.PlaybackStatus.PLAYING
+					? <icon icon="media-playback-pause" />
+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
6function Media({ player }: { player: Mpris.Player }) {5
status === Mpris.PlaybackStatus.PLAYING
+					? <icon icon="media-playback-pause" />
+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
6function Media({ player }: { player: Mpris.Player }) {5
v? <icon icon="media-playback-pause" />
+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
6function Media({ player }: { player: Mpris.Player }) {5
G: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
6function Media({ player }: { player: Mpris.Player }) {5
		</button>
	</box>
g@[i
6function Media({ player }: { player: Mpris.Player }) {5
)}</button>
	</box>
g@[i
6function Media({ player }: { player: Mpris.Player }) {5
</button>
	</box>
g@[i
6function Media({ player }: { player: Mpris.Player }) {5
	</button>
</box>
g@[i
6function Media({ player }: { player: Mpris.Player }) {5
</button></box>
g@[i
6function Media({ player }: { player: Mpris.Player }) {5
</box>
g@[i
6function Media({ player }: { player: Mpris.Player }) {5
;</box>
g@[i
6function Media({ player }: { player: Mpris.Player }) {5
;</box>
g@[i
6function Media({ player }: { player: Mpris.Player }) {5
7</box>}
g@[i
6function Media({ player }: { player: Mpris.Player }) {5
<function MediaStatus({ player }: { player: Mpris.Player }) {5
	return <label label=5
	return <label label={}5
&	return <label label={player.identity}5
	return fasle5
	return false5
	return false;
)	return <label label={player.identity} />5
	// return false;
,	// return <label label={player.identity} />
;	return <box id={player.busName} className="MainBox Media">5
0		<button onClicked={() => player.play_pause()}>5
const MAX_TITLE: Number = 20;5
<	return <box id={player.identity} className="MainBox Media">5
+				status === Mpris.PlaybackStatus.PLAYING
+					? <icon icon="media-playback-pause" />
+					: <icon icon="media-playback-start" />5
				
				<icon icon=5
				<icon icon=""5
				<icon icon=""5
				<icon icon="vidcutter"5
				<icon icon="vidcutter" />5
.				// status === Mpris.PlaybackStatus.PLAYING
.				// 	? <icon icon="media-playback-pause" />
.				// 	: <icon icon="media-playback-start" />5
'	return <box className="MainBox Media">5
const MAX_TITLE: number = 20;5
const MAX_TITLE: number = 20;5
+					? <icon icon="media-playback-pause" />5
+					? <icon icon="media-playback-pause" />5
+					: <icon icon="media-playback-start" />5
			<box>5
				</box>5
 					? "media-playback-pause" />5
 					: "media-playback-start" />5
					: "media-playback-start"5
					? "media-playback-pause"5
g@[$
import  bind } from "astal";5
let artist, title: any = "";
6const isSpot: Boolean = player.identity === "Spotify";
if (isSpot) {
?artist = bind(player, "artist").as(a => a && a + " - " || "");)
'title = bind(player, "title").as(t => {
#if (t.length < MAX_TITLE) return t;
if (!t) return "";
"return t.substring(0, 20) + "...";
});};
:return <box id={player.busName} className="MainBox Media">
7{isSpot && <box className="info">{artist}{title}</box>}
.<button onClicked={() => player.play_pause()}>
,{bind(player, "playbackStatus").as(status =>
'status === Mpris.PlaybackStatus.PLAYING
&? <icon icon="media-playback-pause" />
&: <icon icon="media-playback-start" />
	</button>
</box>
import { bind } from "astal";
$import Mpris from "gi://AstalMpris";
const MAX_TITLE: Number = 20;
P//------------------------------------------------------------------------------
7// Media Widget -> shows playbackstate for each player.
+// Also shows artist and title for Spotify.
M// TODO: Only show active player (e.g. youtube playes and spotify is paused).
6function Media({ player }: { player: Mpris.Player }) {
let artist, title: any = "";
6const isSpot: Boolean = player.identity === "Spotify";
if (isSpot) {
>artist = bind(player, "artist").as(a => a && a + " - " || "");
'title = bind(player, "title").as(t => {
#if (t.length < MAX_TITLE) return t;
if (!t) return "";
"return t.substring(0, 20) + "...";
:return <box id={player.busName} className="MainBox Media">
7{isSpot && <box className="info">{artist}{title}</box>}
.<button onClicked={() => player.play_pause()}>
,{bind(player, "playbackStatus").as(status =>
'status === Mpris.PlaybackStatus.PLAYING
&? <icon icon="media-playback-pause" />
&: <icon icon="media-playback-start" />
	</button>
</box>
</box>}5
A		artist = bind(player, "artist").as(a => a && a + " - " || "");)5
@		artist = bind(player, "artist").as(a => a && a + " - " || ""))5
?		artist = bind(player, "artist").as(a => a && a + " - " || "")5
	let artist, title: any = "";5
 	let artist, title: string = "";5
	import { bind } from "astal";
%	import Mpris from "gi://AstalMpris";5
	const MAX_TITLE: Number = 20;5
7	function Media({ player }: { player: Mpris.Player }) {
		let artist, title: any = "";
8		const isSpot: Boolean = player.identity === "Spotify";
		if (isSpot) {
A			artist = bind(player, "artist").as(a => a && a + " - " || "");
*			title = bind(player, "title").as(t => {
'				if (t.length < MAX_TITLE) return t;
				if (!t) return "";
&				return t.substring(0, 20) + "...";
			});
		};
<		return <box id={player.busName} className="MainBox Media">
:			{isSpot && <box className="info">{artist}{title}</box>}
1			<button onClicked={() => player.play_pause()}>
0				{bind(player, "playbackStatus").as(status =>
,					status === Mpris.PlaybackStatus.PLAYING
,						? <icon icon="media-playback-pause" />
,						: <icon icon="media-playback-start" />
				)}
			</button>
		</box>
 	let artist, title: string = "";5
	import { bind } from "astal";
%	import Mpris from "gi://AstalMpris";5
	const MAX_TITLE: Number = 20;5
Fif (isSpot) {
?artist = bind(player, "artist").as(a => a && a + " - " || "");)
'title = bind(player, "title").as(t => {
#if (t.length < MAX_TITLE) return t;
if (!t) return "";
"return t.substring(0, 20) + "...";
});};
:return <box id={player.busName} className="MainBox Media">
7{isSpot && <box className="info">{artist}{title}</box>}
.<button onClicked={() => player.play_pause()}>
,{bind(player, "playbackStatus").as(status =>
'status === Mpris.PlaybackStatus.PLAYING
&? <icon icon="media-playback-pause" />
&: <icon icon="media-playback-start" />
	</button>
</box>
import { bind } from "astal";
$import Mpris from "gi://AstalMpris";
const MAX_TITLE: Number = 20;
P//------------------------------------------------------------------------------
7// Media Widget -> shows playbackstate for each player.
+// Also shows artist and title for Spotify.
				<i
<	re
76function Media({ player }: { player: Mpris.Player }) {
	0		<butto
7	const isSpo
M// TODO: Onl
0		<button on
P//-------------
#+					: <icon icon="media-playback-
IP//----------------------------------------------------------------------
%			return t.
#@		artist = bind(player, "artist").
	let artist, title: a
+					: <i
2@		artist = bind(player, "artist").as(a => a && a 
	+					? <
+// Also shows artist and tit
+				status === 
const MAX_TITLE: Nu
/			{bind(pla
+					: <icon icon="media-playb
6function Media({ pla
			i
4;	return <box id={player.busName} className="MainBox
7M// TODO: Only show active player (e.g. youtube playes 
+					: <icon ico
/;	return <box id={player.busName} className="Ma
	let artist, title: an
./			{bind(player, "playbackStatus").as(status 
$%			return t.substring(0, 20) + "...
!	// import { bind } from "astal";
(	// import Mpris from "gi://AstalMpris";
!	// const MAX_TITLE: Number = 20;
Q	//------------------------------------------------------------------------------
8	// Media Widget -> shows playbackstate for each player.
,	// Also shows artist and title for Spotify.
N	// TODO: Only show active player (e.g. youtube playes and spotify is paused).
:// 	function Media({ player }: { player: Mpris.Player }) {
!// 		let artist, title: any = "";
;// 		const isSpot: Boolean = player.identity === "Spotify";
// 		if (isSpot) {
D// 			artist = bind(player, "artist").as(a => a && a + " - " || "");
// )
-// 			title = bind(player, "title").as(t => {
*// 				if (t.length < MAX_TITLE) return t;
// 				if (!t) return "";
)// 				return t.substring(0, 20) + "...";
	// 			});
// 		};
?// 		return <box id={player.busName} className="MainBox Media">
=// 			{isSpot && <box className="info">{artist}{title}</box>}
4// 			<button onClicked={() => player.play_pause()}>
3// 				{bind(player, "playbackStatus").as(status =>
/// 					status === Mpris.PlaybackStatus.PLAYING
/// 						? <icon icon="media-playback-pause" />
/// 						: <icon icon="media-playback-start" />
	// 				)}
// 			</button>
// 		</box>
// 	}5
 	let artist, title: string = "";5
	import { bind } from "astal";
%	import Mpris from "gi://AstalMpris";5
	const MAX_TITLE: Number = 20;5
7	function Media({ player }: { player: Mpris.Player }) {
		let artist, title: any = "";
8		const isSpot: Boolean = player.identity === "Spotify";
		if (isSpot) {
A			artist = bind(player, "artist").as(a => a && a + " - " || "");
*			title = bind(player, "title").as(t => {
'				if (t.length < MAX_TITLE) return t;
				if (!t) return "";
&				return t.substring(0, 20) + "...";
			});
		};
<		return <box id={player.busName} className="MainBox Media">
:			{isSpot && <box className="info">{artist}{title}</box>}
1			<button onClicked={() => player.play_pause()}>
0				{bind(player, "playbackStatus").as(status =>
,					status === Mpris.PlaybackStatus.PLAYING
,						? <icon icon="media-playback-pause" />
,						: <icon icon="media-playback-start" />
				)}
			</button>
		</box>
 	let artist, title: string = "";5
	import { bind } from "astal";
%	import Mpris from "gi://AstalMpris";5
	const MAX_TITLE: Number = 20;5
7	function Media({ player }: { player: Mpris.Player }) {
		let artist, title: any = "";
8		const isSpot: Boolean = player.identity === "Spotify";
		if (isSpot) {
A			artist = bind(player, "artist").as(a => a && a + " - " || "");
*			title = bind(player, "title").as(t => {
'				if (t.length < MAX_TITLE) return t;
				if (!t) return "";
&				return t.substring(0, 20) + "...";
			});
		};
<		return <box id={player.busName} className="MainBox Media">
:			{isSpot && <box className="info">{artist}{title}</box>}
1			<button onClicked={() => player.play_pause()}>
0				{bind(player, "playbackStatus").as(status =>
,					status === Mpris.PlaybackStatus.PLAYING
,						? <icon icon="media-playback-pause" />
,						: <icon icon="media-playback-start" />
				)}
			</button>
		</box>
 	let artist, title: string = "";5
	import { bind } from "astal";
%	import Mpris from "gi://AstalMpris";5
	const MAX_TITLE: Number = 20;5
7	function Media({ player }: { player: Mpris.Player }) {
		let artist, title: any = "";
8		const isSpot: Boolean = player.identity === "Spotify";
		if (isSpot) {
A			artist = bind(player, "artist").as(a => a && a + " - " || "");
*			title = bind(player, "title").as(t => {
'				if (t.length < MAX_TITLE) return t;
				if (!t) return "";
&				return t.substring(0, 20) + "...";
			});
		};
<		return <box id={player.busName} className="MainBox Media">
:			{isSpot && <box className="info">{artist}{title}</box>}
1			<button onClicked={() => player.play_pause()}>
0				{bind(player, "playbackStatus").as(status =>
,					status === Mpris.PlaybackStatus.PLAYING
,						? <icon icon="media-playback-pause" />
,						: <icon icon="media-playback-start" />
				)}
			</button>
		</box>}5
 	let artist, title: string = "";5
	import { bind } from "astal";
%	import Mpris from "gi://AstalMpris";5
	const MAX_TITLE: Number = 20;5
7	function Media({ player }: { player: Mpris.Player }) {
		let artist, title: any = "";
8		const isSpot: Boolean = player.identity === "Spotify";
		if (isSpot) {
A			artist = bind(player, "artist").as(a => a && a + " - " || "");
*			title = bind(player, "title").as(t => {
'				if (t.length < MAX_TITLE) return t;
				if (!t) return "";
&				return t.substring(0, 20) + "...";
			});
		};
<		return <box id={player.busName} className="MainBox Media">
:			{isSpot && <box className="info">{artist}{title}</box>}
1			<button onClicked={() => player.play_pause()}>
0				{bind(player, "playbackStatus").as(status =>
,					status === Mpris.PlaybackStatus.PLAYING
,						? <icon icon="media-playback-pause" />
,						: <icon icon="media-playback-start" />
				)}
			</button>
		</box>5
 	let artist, title: string = "";5
	import { bind } from "astal";
%	import Mpris from "gi://AstalMpris";5
	const MAX_TITLE: Number = 20;5
7	function Media({ player }: { player: Mpris.Player }) {
		let artist, title: any = "";
8		const isSpot: Boolean = player.identity === "Spotify";
		if (isSpot) {
A			artist = bind(player, "artist").as(a => a && a + " - " || "");
*			title = bind(player, "title").as(t => {
'				if (t.length < MAX_TITLE) return t;
				if (!t) return "";
&				return t.substring(0, 20) + "...";
			});
		};
<		return <box id={player.busName} className="MainBox Media">
:			{isSpot && <box className="info">{artist}{title}</box>}
1			<button onClicked={() => player.play_pause()}>
0				{bind(player, "playbackStatus").as(status =>
,					status === Mpris.PlaybackStatus.PLAYING
,						? <icon icon="media-playback-pause" />
,						: <icon icon="media-playback-start" />
				)}
			</button></box>5
 	let artist, title: string = "";5
	import { bind } from "astal";
%	import Mpris from "gi://AstalMpris";5
	const MAX_TITLE: Number = 20;5
7	function Media({ player }: { player: Mpris.Player }) {
		let artist, title: any = "";
8		const isSpot: Boolean = player.identity === "Spotify";
		if (isSpot) {
A			artist = bind(player, "artist").as(a => a && a + " - " || "");
*			title = bind(player, "title").as(t => {
'				if (t.length < MAX_TITLE) return t;
				if (!t) return "";
&				return t.substring(0, 20) + "...";
			});
		};
<		return <box id={player.busName} className="MainBox Media">
:			{isSpot && <box className="info">{artist}{title}</box>}
1			<button onClicked={() => player.play_pause()}>
0				{bind(player, "playbackStatus").as(status =>
,					status === Mpris.PlaybackStatus.PLAYING
,						? <icon icon="media-playback-pause" />
,						: <icon icon="media-playback-start" />
				)}</button></box>5
 	let artist, title: string = "";5
	import { bind } from "astal";
%	import Mpris from "gi://AstalMpris";5
	const MAX_TITLE: Number = 20;5
7	function Media({ player }: { player: Mpris.Player }) {
		let artist, title: any = "";
8		const isSpot: Boolean = player.identity === "Spotify";
		if (isSpot) {
A			artist = bind(player, "artist").as(a => a && a + " - " || "");
*			title = bind(player, "title").as(t => {
'				if (t.length < MAX_TITLE) return t;
				if (!t) return "";
&				return t.substring(0, 20) + "...";
			});
		};
<		return <box id={player.busName} className="MainBox Media">
:			{isSpot && <box className="info">{artist}{title}</box>}
1			<button onClicked={() => player.play_pause()}>
0				{bind(player, "playbackStatus").as(status =>
,					status === Mpris.PlaybackStatus.PLAYING
,						? <icon icon="media-playback-pause" />
,						: <icon icon="media-playback-start" />)}</button></box>5
 	let artist, title: string = "";5
	import { bind } from "astal";
%	import Mpris from "gi://AstalMpris";5
	const MAX_TITLE: Number = 20;5
7	function Media({ player }: { player: Mpris.Player }) {
		let artist, title: any = "";
8		const isSpot: Boolean = player.identity === "Spotify";
		if (isSpot) {
A			artist = bind(player, "artist").as(a => a && a + " - " || "");
*			title = bind(player, "title").as(t => {
'				if (t.length < MAX_TITLE) return t;
				if (!t) return "";
&				return t.substring(0, 20) + "...";
			});
		};
<		return <box id={player.busName} className="MainBox Media">
:			{isSpot && <box className="info">{artist}{title}</box>}
1			<button onClicked={() => player.play_pause()}>
0				{bind(player, "playbackStatus").as(status =>
,					status === Mpris.PlaybackStatus.PLAYING
,						? <icon icon="media-playback-pause" />: <icon icon="media-playback-start" />)}</button></box>5
 	let artist, title: string = "";5
	import { bind } from "astal";
%	import Mpris from "gi://AstalMpris";5
	const MAX_TITLE: Number = 20;5
7	function Media({ player }: { player: Mpris.Player }) {
		let artist, title: any = "";
8		const isSpot: Boolean = player.identity === "Spotify";
		if (isSpot) {
A			artist = bind(player, "artist").as(a => a && a + " - " || "");
*			title = bind(player, "title").as(t => {
'				if (t.length < MAX_TITLE) return t;
				if (!t) return "";
&				return t.substring(0, 20) + "...";
			});
		};
<		return <box id={player.busName} className="MainBox Media">
:			{isSpot && <box className="info">{artist}{title}</box>}
1			<button onClicked={() => player.play_pause()}>
0				{bind(player, "playbackStatus").as(status =>
,					status === Mpris.PlaybackStatus.PLAYING
,						? <icon icon="media-playback-pause" /> : <icon icon="media-playback-start" />)}</button></box>5
 	let artist, title: string = "";5
	import { bind } from "astal";
%	import Mpris from "gi://AstalMpris";5
	const MAX_TITLE: Number = 20;5
UnDo
	const MAX_TITLE: Number = 20;
O%home%iculture%Repos%dotties%config%ags%widgets%bar%mediastatus%MediaStatus.tsx5
6+					? <icon icon="media-playback-pause" />5
,+				status === Mpris.PlaybackStatus.PLAYING
,+					? <icon icon="media-playback-pause" />
6+					: <icon icon="media-playback-start" />5
g@[=
g@[=
g@[a
import { bind } from "astal";
%$import Mpris from "gi://AstalMpris";
const MAX_TITLE: Number = 20;
QP//------------------------------------------------------------------------------
87// Media Widget -> shows playbackstate for each player.
,+// Also shows artist and title for Spotify.
NM// TODO: Only show active player (e.g. youtube playes and spotify is paused).
76function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
87	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
@		artist = bin
	g@Z
	g@Z
	g@Z
	g@Z
Q%home%iculture%Repos%dotties%config%ags%widgets%bar%mediastatus%MediaStatus.tsccx
UnDo
	g@Z
	g@Z
	g@Z
	g@Z
8-import { Variable, GLib, bind } from "astal";5
ximport { Variable, GLib, bind } from "astal";5
g@[:
import { bind } from "astal";5
import { Variable, GLib, bind } from "astal";import { bind } from "astal";5
dimport { bind } from "astal";5
g@[;
g@[;
g@[=
g@[=
g@[a
import { bind } from "astal";
%$import Mpris from "gi://AstalMpris";
const MAX_TITLE: Number = 20;
QP//------------------------------------------------------------------------------
87// Media Widget -> shows playbackstate for each player.
,+// Also shows artist and title for Spotify.
NM// TODO: Only show active player (e.g. youtube playes and spotify is paused).
76function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
87	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
A@		artist = bind(player, "artist").as(a => a && a + " - " || "");
*)		title = bind(player, "title").as(t => {
'&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
&%			return t.substring(0, 20) + "...";
		});
<;	return <box id={player.busName} className="MainBox Media">
:9		{isSpot && <box className="info">{artist}{title}</box>}
10		<button onClicked={() => player.play_pause()}>
0/			{bind(player, "playbackStatus").as(status =>
,+				status === Mpris.PlaybackStatus.PLAYING
,+					? <icon icon="media-playback-pause" />
,+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[e
import { bind } from "astal";
%$import Mpris from "gi://AstalMpris";
const MAX_TITLE: Number = 20;
QP//------------------------------------------------------------------------------
87// Media Widget -> shows playbackstate for each player.
,+// Also shows artist and title for Spotify.
NM// TODO: Only show active player (e.g. youtube playes and spotify is paused).
76function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
87	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
A@		artist = bind(player, "artist").as(a => a && a + " - " || "");
*)		title = bind(player, "title").as(t => {
'&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
&%			return t.substring(0, 20) + "...";
		});
<;	return <box id={player.busName} className="MainBox Media">
:9		{isSpot && <box className="info">{artist}{title}</box>}
10		<button onClicked={() => player.play_pause()}>
0/			{bind(player, "playbackStatus").as(status =>
,+				status === Mpris.PlaybackStatus.PLAYING
,+					? <icon icon="media-playback-pause" />
,+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
import { bind } from "astal";import { bind } from "astal";
%$import Mpris from "gi://AstalMpris";
const MAX_TITLE: Number = 20;
QP//------------------------------------------------------------------------------
87// Media Widget -> shows playbackstate for each player.
,+// Also shows artist and title for Spotify.
NM// TODO: Only show active player (e.g. youtube playes and spotify is paused).
76function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
87	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
A@		artist = bind(player, "artist").as(a => a && a + " - " || "");
*)		title = bind(player, "title").as(t => {
'&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
&%			return t.substring(0, 20) + "...";
		});
<;	return <box id={player.busName} className="MainBox Media">
:9		{isSpot && <box className="info">{artist}{title}</box>}
10		<button onClicked={() => player.play_pause()}>
0/			{bind(player, "playbackStatus").as(status =>
,+				status === Mpris.PlaybackStatus.PLAYING
,+					? <icon icon="media-playback-pause" />
,+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[e
import { bind } from "astal";
%$import Mpris from "gi://AstalMpris";
const MAX_TITLE: Number = 20;
QP//------------------------------------------------------------------------------
87// Media Widget -> shows playbackstate for each player.
,+// Also shows artist and title for Spotify.
NM// TODO: Only show active player (e.g. youtube playes and spotify is paused).
76function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
87	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
A@		artist = bind(player, "artist").as(a => a && a + " - " || "");
*)		title = bind(player, "title").as(t => {
'&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
&%			return t.substring(0, 20) + "...";
		});
<;	return <box id={player.busName} className="MainBox Media">
:9		{isSpot && <box className="info">{artist}{title}</box>}
10		<button onClicked={() => player.play_pause()}>
0/			{bind(player, "playbackStatus").as(status =>
,+				status === Mpris.PlaybackStatus.PLAYING
,+					? <icon icon="media-playback-pause" />
,+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
import { bind } from "astal";
%$import Mpris from "gi://AstalMpris";
const MAX_TITLE: Number = 20;
QP//------------------------------------------------------------------------------
87// Media Widget -> shows playbackstate for each player.
,+// Also shows artist and title for Spotify.
NM// TODO: Only show active player (e.g. youtube playes and spotify is paused).
76function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
87	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
A@		artist = bind(player, "artist").as(a => a && a + " - " || "");
*)		title = bind(player, "title").as(t => {
'&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
&%			return t.substring(0, 20) + "...";
		});
<;	return <box id={player.busName} className="MainBox Media">
:9		{isSpot && <box className="info">{artist}{title}</box>}
10		<button onClicked={() => player.play_pause()}>
0/			{bind(player, "playbackStatus").as(status =>
,+				status === Mpris.PlaybackStatus.PLAYING
,+					? <icon icon="media-playback-pause" />
,+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[e
import { bind } from "astal";
%$import Mpris from "gi://AstalMpris";
const MAX_TITLE: Number = 20;
QP//------------------------------------------------------------------------------
87// Media Widget -> shows playbackstate for each player.
,+// Also shows artist and title for Spotify.
NM// TODO: Only show active player (e.g. youtube playes and spotify is paused).
76function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
87	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
A@		artist = bind(player, "artist").as(a => a && a + " - " || "");
*)		title = bind(player, "title").as(t => {
'&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
&%			return t.substring(0, 20) + "...";
		});
<;	return <box id={player.busName} className="MainBox Media">
:9		{isSpot && <box className="info">{artist}{title}</box>}
10		<button onClicked={() => player.play_pause()}>
0/			{bind(player, "playbackStatus").as(status =>
,+				status === Mpris.PlaybackStatus.PLAYING
,+					? <icon icon="media-playback-pause" />
,+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
import { bind } from "astal";$import Mpris from "gi://AstalMpris";
const MAX_TITLE: Number = 20;
QP//------------------------------------------------------------------------------
87// Media Widget -> shows playbackstate for each player.
,+// Also shows artist and title for Spotify.
NM// TODO: Only show active player (e.g. youtube playes and spotify is paused).
76function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
87	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
A@		artist = bind(player, "artist").as(a => a && a + " - " || "");
*)		title = bind(player, "title").as(t => {
'&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
&%			return t.substring(0, 20) + "...";
		});
<;	return <box id={player.busName} className="MainBox Media">
:9		{isSpot && <box className="info">{artist}{title}</box>}
10		<button onClicked={() => player.play_pause()}>
0/			{bind(player, "playbackStatus").as(status =>
,+				status === Mpris.PlaybackStatus.PLAYING
,+					? <icon icon="media-playback-pause" />
,+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[e
import { bind } from "astal";
%$import Mpris from "gi://AstalMpris";
const MAX_TITLE: Number = 20;
QP//------------------------------------------------------------------------------
87// Media Widget -> shows playbackstate for each player.
,+// Also shows artist and title for Spotify.
NM// TODO: Only show active player (e.g. youtube playes and spotify is paused).
76function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
87	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
A@		artist = bind(player, "artist").as(a => a && a + " - " || "");
*)		title = bind(player, "title").as(t => {
'&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
&%			return t.substring(0, 20) + "...";
		});
<;	return <box id={player.busName} className="MainBox Media">
:9		{isSpot && <box className="info">{artist}{title}</box>}
10		<button onClicked={() => player.play_pause()}>
0/			{bind(player, "playbackStatus").as(status =>
,+				status === Mpris.PlaybackStatus.PLAYING
,+					? <icon icon="media-playback-pause" />
,+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
$import Mpris from "gi://AstalMpris";
const MAX_TITLE: Number = 20;
QP//------------------------------------------------------------------------------
87// Media Widget -> shows playbackstate for each player.
,+// Also shows artist and title for Spotify.
NM// TODO: Only show active player (e.g. youtube playes and spotify is paused).
76function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
87	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
A@		artist = bind(player, "artist").as(a => a && a + " - " || "");
*)		title = bind(player, "title").as(t => {
'&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
&%			return t.substring(0, 20) + "...";
		});
<;	return <box id={player.busName} className="MainBox Media">
:9		{isSpot && <box className="info">{artist}{title}</box>}
10		<button onClicked={() => player.play_pause()}>
0/			{bind(player, "playbackStatus").as(status =>
,+				status === Mpris.PlaybackStatus.PLAYING
,+					? <icon icon="media-playback-pause" />
,+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[e
import { bind } from "astal";
%$import Mpris from "gi://AstalMpris";
const MAX_TITLE: Number = 20;
QP//------------------------------------------------------------------------------
87// Media Widget -> shows playbackstate for each player.
,+// Also shows artist and title for Spotify.
NM// TODO: Only show active player (e.g. youtube playes and spotify is paused).
76function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
87	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
A@		artist = bind(player, "artist").as(a => a && a + " - " || "");
*)		title = bind(player, "title").as(t => {
'&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
&%			return t.substring(0, 20) + "...";
		});
<;	return <box id={player.busName} className="MainBox Media">
:9		{isSpot && <box className="info">{artist}{title}</box>}
10		<button onClicked={() => player.play_pause()}>
0/			{bind(player, "playbackStatus").as(status =>
,+				status === Mpris.PlaybackStatus.PLAYING
,+					? <icon icon="media-playback-pause" />
,+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
import Mpris from "gi://AstalMpris";
const MAX_TITLE: Number = 20;
QP//------------------------------------------------------------------------------
87// Media Widget -> shows playbackstate for each player.
,+// Also shows artist and title for Spotify.
NM// TODO: Only show active player (e.g. youtube playes and spotify is paused).
76function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
87	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
A@		artist = bind(player, "artist").as(a => a && a + " - " || "");
*)		title = bind(player, "title").as(t => {
'&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
&%			return t.substring(0, 20) + "...";
		});
<;	return <box id={player.busName} className="MainBox Media">
:9		{isSpot && <box className="info">{artist}{title}</box>}
10		<button onClicked={() => player.play_pause()}>
0/			{bind(player, "playbackStatus").as(status =>
,+				status === Mpris.PlaybackStatus.PLAYING
,+					? <icon icon="media-playback-pause" />
,+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[e
import { bind } from "astal";
%$import Mpris from "gi://AstalMpris";
const MAX_TITLE: Number = 20;
QP//------------------------------------------------------------------------------
87// Media Widget -> shows playbackstate for each player.
,+// Also shows artist and title for Spotify.
NM// TODO: Only show active player (e.g. youtube playes and spotify is paused).
76function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
87	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
A@		artist = bind(player, "artist").as(a => a && a + " - " || "");
*)		title = bind(player, "title").as(t => {
'&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
&%			return t.substring(0, 20) + "...";
		});
<;	return <box id={player.busName} className="MainBox Media">
:9		{isSpot && <box className="info">{artist}{title}</box>}
10		<button onClicked={() => player.play_pause()}>
0/			{bind(player, "playbackStatus").as(status =>
,+				status === Mpris.PlaybackStatus.PLAYING
,+					? <icon icon="media-playback-pause" />
,+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
import Mpris from "gi://AstalMpris";const MAX_TITLE: Number = 20;
QP//------------------------------------------------------------------------------
87// Media Widget -> shows playbackstate for each player.
,+// Also shows artist and title for Spotify.
NM// TODO: Only show active player (e.g. youtube playes and spotify is paused).
76function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
87	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
A@		artist = bind(player, "artist").as(a => a && a + " - " || "");
*)		title = bind(player, "title").as(t => {
'&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
&%			return t.substring(0, 20) + "...";
		});
<;	return <box id={player.busName} className="MainBox Media">
:9		{isSpot && <box className="info">{artist}{title}</box>}
10		<button onClicked={() => player.play_pause()}>
0/			{bind(player, "playbackStatus").as(status =>
,+				status === Mpris.PlaybackStatus.PLAYING
,+					? <icon icon="media-playback-pause" />
,+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[e
import { bind } from "astal";
%$import Mpris from "gi://AstalMpris";
const MAX_TITLE: Number = 20;
QP//------------------------------------------------------------------------------
87// Media Widget -> shows playbackstate for each player.
,+// Also shows artist and title for Spotify.
NM// TODO: Only show active player (e.g. youtube playes and spotify is paused).
76function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
87	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
A@		artist = bind(player, "artist").as(a => a && a + " - " || "");
*)		title = bind(player, "title").as(t => {
'&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
&%			return t.substring(0, 20) + "...";
		});
<;	return <box id={player.busName} className="MainBox Media">
:9		{isSpot && <box className="info">{artist}{title}</box>}
10		<button onClicked={() => player.play_pause()}>
0/			{bind(player, "playbackStatus").as(status =>
,+				status === Mpris.PlaybackStatus.PLAYING
,+					? <icon icon="media-playback-pause" />
,+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
const MAX_TITLE: Number = 20;
QP//------------------------------------------------------------------------------
87// Media Widget -> shows playbackstate for each player.
,+// Also shows artist and title for Spotify.
NM// TODO: Only show active player (e.g. youtube playes and spotify is paused).
76function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
87	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
A@		artist = bind(player, "artist").as(a => a && a + " - " || "");
*)		title = bind(player, "title").as(t => {
'&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
&%			return t.substring(0, 20) + "...";
		});
<;	return <box id={player.busName} className="MainBox Media">
:9		{isSpot && <box className="info">{artist}{title}</box>}
10		<button onClicked={() => player.play_pause()}>
0/			{bind(player, "playbackStatus").as(status =>
,+				status === Mpris.PlaybackStatus.PLAYING
,+					? <icon icon="media-playback-pause" />
,+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[e
import { bind } from "astal";
%$import Mpris from "gi://AstalMpris";
const MAX_TITLE: Number = 20;
QP//------------------------------------------------------------------------------
87// Media Widget -> shows playbackstate for each player.
,+// Also shows artist and title for Spotify.
NM// TODO: Only show active player (e.g. youtube playes and spotify is paused).
76function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
87	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
A@		artist = bind(player, "artist").as(a => a && a + " - " || "");
*)		title = bind(player, "title").as(t => {
'&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
&%			return t.substring(0, 20) + "...";
		});
<;	return <box id={player.busName} className="MainBox Media">
:9		{isSpot && <box className="info">{artist}{title}</box>}
10		<button onClicked={() => player.play_pause()}>
0/			{bind(player, "playbackStatus").as(status =>
,+				status === Mpris.PlaybackStatus.PLAYING
,+					? <icon icon="media-playback-pause" />
,+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
~const MAX_TITLE: Number = 20;//------------------------------------------------------------------------------
87// Media Widget -> shows playbackstate for each player.
,+// Also shows artist and title for Spotify.
NM// TODO: Only show active player (e.g. youtube playes and spotify is paused).
76function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
87	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
A@		artist = bind(player, "artist").as(a => a && a + " - " || "");
*)		title = bind(player, "title").as(t => {
'&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
&%			return t.substring(0, 20) + "...";
		});
<;	return <box id={player.busName} className="MainBox Media">
:9		{isSpot && <box className="info">{artist}{title}</box>}
10		<button onClicked={() => player.play_pause()}>
0/			{bind(player, "playbackStatus").as(status =>
,+				status === Mpris.PlaybackStatus.PLAYING
,+					? <icon icon="media-playback-pause" />
,+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[e
import { bind } from "astal";
%$import Mpris from "gi://AstalMpris";
const MAX_TITLE: Number = 20;
QP//------------------------------------------------------------------------------
87// Media Widget -> shows playbackstate for each player.
,+// Also shows artist and title for Spotify.
NM// TODO: Only show active player (e.g. youtube playes and spotify is paused).
76function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
87	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
A@		artist = bind(player, "artist").as(a => a && a + " - " || "");
*)		title = bind(player, "title").as(t => {
'&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
&%			return t.substring(0, 20) + "...";
		});
<;	return <box id={player.busName} className="MainBox Media">
:9		{isSpot && <box className="info">{artist}{title}</box>}
10		<button onClicked={() => player.play_pause()}>
0/			{bind(player, "playbackStatus").as(status =>
,+				status === Mpris.PlaybackStatus.PLAYING
,+					? <icon icon="media-playback-pause" />
,+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
a//------------------------------------------------------------------------------
87// Media Widget -> shows playbackstate for each player.
,+// Also shows artist and title for Spotify.
NM// TODO: Only show active player (e.g. youtube playes and spotify is paused).
76function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
87	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
A@		artist = bind(player, "artist").as(a => a && a + " - " || "");
*)		title = bind(player, "title").as(t => {
'&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
&%			return t.substring(0, 20) + "...";
		});
<;	return <box id={player.busName} className="MainBox Media">
:9		{isSpot && <box className="info">{artist}{title}</box>}
10		<button onClicked={() => player.play_pause()}>
0/			{bind(player, "playbackStatus").as(status =>
,+				status === Mpris.PlaybackStatus.PLAYING
,+					? <icon icon="media-playback-pause" />
,+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[e
import { bind } from "astal";
%$import Mpris from "gi://AstalMpris";
const MAX_TITLE: Number = 20;
QP//------------------------------------------------------------------------------
87// Media Widget -> shows playbackstate for each player.
,+// Also shows artist and title for Spotify.
NM// TODO: Only show active player (e.g. youtube playes and spotify is paused).
76function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
87	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
A@		artist = bind(player, "artist").as(a => a && a + " - " || "");
*)		title = bind(player, "title").as(t => {
'&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
&%			return t.substring(0, 20) + "...";
		});
<;	return <box id={player.busName} className="MainBox Media">
:9		{isSpot && <box className="info">{artist}{title}</box>}
10		<button onClicked={() => player.play_pause()}>
0/			{bind(player, "playbackStatus").as(status =>
,+				status === Mpris.PlaybackStatus.PLAYING
,+					? <icon icon="media-playback-pause" />
,+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
]//------------------------------------------------------------------------------// Media Widget -> shows playbackstate for each player.
,+// Also shows artist and title for Spotify.
NM// TODO: Only show active player (e.g. youtube playes and spotify is paused).
76function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
87	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
A@		artist = bind(player, "artist").as(a => a && a + " - " || "");
*)		title = bind(player, "title").as(t => {
'&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
&%			return t.substring(0, 20) + "...";
		});
<;	return <box id={player.busName} className="MainBox Media">
:9		{isSpot && <box className="info">{artist}{title}</box>}
10		<button onClicked={() => player.play_pause()}>
0/			{bind(player, "playbackStatus").as(status =>
,+				status === Mpris.PlaybackStatus.PLAYING
,+					? <icon icon="media-playback-pause" />
,+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[e
import { bind } from "astal";
%$import Mpris from "gi://AstalMpris";
const MAX_TITLE: Number = 20;
QP//------------------------------------------------------------------------------
87// Media Widget -> shows playbackstate for each player.
,+// Also shows artist and title for Spotify.
NM// TODO: Only show active player (e.g. youtube playes and spotify is paused).
76function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
87	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
A@		artist = bind(player, "artist").as(a => a && a + " - " || "");
*)		title = bind(player, "title").as(t => {
'&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
&%			return t.substring(0, 20) + "...";
		});
<;	return <box id={player.busName} className="MainBox Media">
:9		{isSpot && <box className="info">{artist}{title}</box>}
10		<button onClicked={() => player.play_pause()}>
0/			{bind(player, "playbackStatus").as(status =>
,+				status === Mpris.PlaybackStatus.PLAYING
,+					? <icon icon="media-playback-pause" />
,+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
7// Media Widget -> shows playbackstate for each player.
,+// Also shows artist and title for Spotify.
NM// TODO: Only show active player (e.g. youtube playes and spotify is paused).
76function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
87	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
A@		artist = bind(player, "artist").as(a => a && a + " - " || "");
*)		title = bind(player, "title").as(t => {
'&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
&%			return t.substring(0, 20) + "...";
		});
<;	return <box id={player.busName} className="MainBox Media">
:9		{isSpot && <box className="info">{artist}{title}</box>}
10		<button onClicked={() => player.play_pause()}>
0/			{bind(player, "playbackStatus").as(status =>
,+				status === Mpris.PlaybackStatus.PLAYING
,+					? <icon icon="media-playback-pause" />
,+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[e
import { bind } from "astal";
%$import Mpris from "gi://AstalMpris";
const MAX_TITLE: Number = 20;
QP//------------------------------------------------------------------------------
87// Media Widget -> shows playbackstate for each player.
,+// Also shows artist and title for Spotify.
NM// TODO: Only show active player (e.g. youtube playes and spotify is paused).
76function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
87	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
A@		artist = bind(player, "artist").as(a => a && a + " - " || "");
*)		title = bind(player, "title").as(t => {
'&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
&%			return t.substring(0, 20) + "...";
		});
<;	return <box id={player.busName} className="MainBox Media">
:9		{isSpot && <box className="info">{artist}{title}</box>}
10		<button onClicked={() => player.play_pause()}>
0/			{bind(player, "playbackStatus").as(status =>
,+				status === Mpris.PlaybackStatus.PLAYING
,+					? <icon icon="media-playback-pause" />
,+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
	// Media Widget -> shows playbackstate for each player.// Also shows artist and title for Spotify.
NM// TODO: Only show active player (e.g. youtube playes and spotify is paused).
76function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
87	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
A@		artist = bind(player, "artist").as(a => a && a + " - " || "");
*)		title = bind(player, "title").as(t => {
'&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
&%			return t.substring(0, 20) + "...";
		});
<;	return <box id={player.busName} className="MainBox Media">
:9		{isSpot && <box className="info">{artist}{title}</box>}
10		<button onClicked={() => player.play_pause()}>
0/			{bind(player, "playbackStatus").as(status =>
,+				status === Mpris.PlaybackStatus.PLAYING
,+					? <icon icon="media-playback-pause" />
,+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[e
import { bind } from "astal";
%$import Mpris from "gi://AstalMpris";
const MAX_TITLE: Number = 20;
QP//------------------------------------------------------------------------------
87// Media Widget -> shows playbackstate for each player.
,+// Also shows artist and title for Spotify.
NM// TODO: Only show active player (e.g. youtube playes and spotify is paused).
76function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
87	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
A@		artist = bind(player, "artist").as(a => a && a + " - " || "");
*)		title = bind(player, "title").as(t => {
'&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
&%			return t.substring(0, 20) + "...";
		});
<;	return <box id={player.busName} className="MainBox Media">
:9		{isSpot && <box className="info">{artist}{title}</box>}
10		<button onClicked={() => player.play_pause()}>
0/			{bind(player, "playbackStatus").as(status =>
,+				status === Mpris.PlaybackStatus.PLAYING
,+					? <icon icon="media-playback-pause" />
,+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
// Also shows artist and title for Spotify.
NM// TODO: Only show active player (e.g. youtube playes and spotify is paused).
76function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
87	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
A@		artist = bind(player, "artist").as(a => a && a + " - " || "");
*)		title = bind(player, "title").as(t => {
'&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
&%			return t.substring(0, 20) + "...";
		});
<;	return <box id={player.busName} className="MainBox Media">
:9		{isSpot && <box className="info">{artist}{title}</box>}
10		<button onClicked={() => player.play_pause()}>
0/			{bind(player, "playbackStatus").as(status =>
,+				status === Mpris.PlaybackStatus.PLAYING
,+					? <icon icon="media-playback-pause" />
,+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[e
import { bind } from "astal";
%$import Mpris from "gi://AstalMpris";
const MAX_TITLE: Number = 20;
QP//------------------------------------------------------------------------------
87// Media Widget -> shows playbackstate for each player.
,+// Also shows artist and title for Spotify.
NM// TODO: Only show active player (e.g. youtube playes and spotify is paused).
76function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
87	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
A@		artist = bind(player, "artist").as(a => a && a + " - " || "");
*)		title = bind(player, "title").as(t => {
'&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
&%			return t.substring(0, 20) + "...";
		});
<;	return <box id={player.busName} className="MainBox Media">
:9		{isSpot && <box className="info">{artist}{title}</box>}
10		<button onClicked={() => player.play_pause()}>
0/			{bind(player, "playbackStatus").as(status =>
,+				status === Mpris.PlaybackStatus.PLAYING
,+					? <icon icon="media-playback-pause" />
,+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
// Also shows artist and title for Spotify.// TODO: Only show active player (e.g. youtube playes and spotify is paused).
76function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
87	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
A@		artist = bind(player, "artist").as(a => a && a + " - " || "");
*)		title = bind(player, "title").as(t => {
'&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
&%			return t.substring(0, 20) + "...";
		});
<;	return <box id={player.busName} className="MainBox Media">
:9		{isSpot && <box className="info">{artist}{title}</box>}
10		<button onClicked={() => player.play_pause()}>
0/			{bind(player, "playbackStatus").as(status =>
,+				status === Mpris.PlaybackStatus.PLAYING
,+					? <icon icon="media-playback-pause" />
,+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[e
import { bind } from "astal";
%$import Mpris from "gi://AstalMpris";
const MAX_TITLE: Number = 20;
QP//------------------------------------------------------------------------------
87// Media Widget -> shows playbackstate for each player.
,+// Also shows artist and title for Spotify.
NM// TODO: Only show active player (e.g. youtube playes and spotify is paused).
76function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
87	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
A@		artist = bind(player, "artist").as(a => a && a + " - " || "");
*)		title = bind(player, "title").as(t => {
'&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
&%			return t.substring(0, 20) + "...";
		});
<;	return <box id={player.busName} className="MainBox Media">
:9		{isSpot && <box className="info">{artist}{title}</box>}
10		<button onClicked={() => player.play_pause()}>
0/			{bind(player, "playbackStatus").as(status =>
,+				status === Mpris.PlaybackStatus.PLAYING
,+					? <icon icon="media-playback-pause" />
,+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
// TODO: Only show active player (e.g. youtube playes and spotify is paused).
76function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
87	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
A@		artist = bind(player, "artist").as(a => a && a + " - " || "");
*)		title = bind(player, "title").as(t => {
'&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
&%			return t.substring(0, 20) + "...";
		});
<;	return <box id={player.busName} className="MainBox Media">
:9		{isSpot && <box className="info">{artist}{title}</box>}
10		<button onClicked={() => player.play_pause()}>
0/			{bind(player, "playbackStatus").as(status =>
,+				status === Mpris.PlaybackStatus.PLAYING
,+					? <icon icon="media-playback-pause" />
,+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[e
import { bind } from "astal";
%$import Mpris from "gi://AstalMpris";
const MAX_TITLE: Number = 20;
QP//------------------------------------------------------------------------------
87// Media Widget -> shows playbackstate for each player.
,+// Also shows artist and title for Spotify.
NM// TODO: Only show active player (e.g. youtube playes and spotify is paused).
76function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
87	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
A@		artist = bind(player, "artist").as(a => a && a + " - " || "");
*)		title = bind(player, "title").as(t => {
'&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
&%			return t.substring(0, 20) + "...";
		});
<;	return <box id={player.busName} className="MainBox Media">
:9		{isSpot && <box className="info">{artist}{title}</box>}
10		<button onClicked={() => player.play_pause()}>
0/			{bind(player, "playbackStatus").as(status =>
,+				status === Mpris.PlaybackStatus.PLAYING
,+					? <icon icon="media-playback-pause" />
,+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
// TODO: Only show active player (e.g. youtube playes and spotify is paused).function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
87	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
A@		artist = bind(player, "artist").as(a => a && a + " - " || "");
*)		title = bind(player, "title").as(t => {
'&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
&%			return t.substring(0, 20) + "...";
		});
<;	return <box id={player.busName} className="MainBox Media">
:9		{isSpot && <box className="info">{artist}{title}</box>}
10		<button onClicked={() => player.play_pause()}>
0/			{bind(player, "playbackStatus").as(status =>
,+				status === Mpris.PlaybackStatus.PLAYING
,+					? <icon icon="media-playback-pause" />
,+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[e
import { bind } from "astal";
%$import Mpris from "gi://AstalMpris";
const MAX_TITLE: Number = 20;
QP//------------------------------------------------------------------------------
87// Media Widget -> shows playbackstate for each player.
,+// Also shows artist and title for Spotify.
NM// TODO: Only show active player (e.g. youtube playes and spotify is paused).
76function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
87	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
A@		artist = bind(player, "artist").as(a => a && a + " - " || "");
*)		title = bind(player, "title").as(t => {
'&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
&%			return t.substring(0, 20) + "...";
		});
<;	return <box id={player.busName} className="MainBox Media">
:9		{isSpot && <box className="info">{artist}{title}</box>}
10		<button onClicked={() => player.play_pause()}>
0/			{bind(player, "playbackStatus").as(status =>
,+				status === Mpris.PlaybackStatus.PLAYING
,+					? <icon icon="media-playback-pause" />
,+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
Lfunction Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
87	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
A@		artist = bind(player, "artist").as(a => a && a + " - " || "");
*)		title = bind(player, "title").as(t => {
'&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
&%			return t.substring(0, 20) + "...";
		});
<;	return <box id={player.busName} className="MainBox Media">
:9		{isSpot && <box className="info">{artist}{title}</box>}
10		<button onClicked={() => player.play_pause()}>
0/			{bind(player, "playbackStatus").as(status =>
,+				status === Mpris.PlaybackStatus.PLAYING
,+					? <icon icon="media-playback-pause" />
,+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[e
import { bind } from "astal";
%$import Mpris from "gi://AstalMpris";
const MAX_TITLE: Number = 20;
QP//------------------------------------------------------------------------------
87// Media Widget -> shows playbackstate for each player.
,+// Also shows artist and title for Spotify.
NM// TODO: Only show active player (e.g. youtube playes and spotify is paused).
76function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
87	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
A@		artist = bind(player, "artist").as(a => a && a + " - " || "");
*)		title = bind(player, "title").as(t => {
'&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
&%			return t.substring(0, 20) + "...";
		});
<;	return <box id={player.busName} className="MainBox Media">
:9		{isSpot && <box className="info">{artist}{title}</box>}
10		<button onClicked={() => player.play_pause()}>
0/			{bind(player, "playbackStatus").as(status =>
,+				status === Mpris.PlaybackStatus.PLAYING
,+					? <icon icon="media-playback-pause" />
,+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
Gfunction Media({ player }: { player: Mpris.Player }) {let artist, title: any = "";
87	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
A@		artist = bind(player, "artist").as(a => a && a + " - " || "");
*)		title = bind(player, "title").as(t => {
'&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
&%			return t.substring(0, 20) + "...";
		});
<;	return <box id={player.busName} className="MainBox Media">
:9		{isSpot && <box className="info">{artist}{title}</box>}
10		<button onClicked={() => player.play_pause()}>
0/			{bind(player, "playbackStatus").as(status =>
,+				status === Mpris.PlaybackStatus.PLAYING
,+					? <icon icon="media-playback-pause" />
,+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[e
import { bind } from "astal";
%$import Mpris from "gi://AstalMpris";
const MAX_TITLE: Number = 20;
QP//------------------------------------------------------------------------------
87// Media Widget -> shows playbackstate for each player.
,+// Also shows artist and title for Spotify.
NM// TODO: Only show active player (e.g. youtube playes and spotify is paused).
76function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
87	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
A@		artist = bind(player, "artist").as(a => a && a + " - " || "");
*)		title = bind(player, "title").as(t => {
'&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
&%			return t.substring(0, 20) + "...";
		});
<;	return <box id={player.busName} className="MainBox Media">
:9		{isSpot && <box className="info">{artist}{title}</box>}
10		<button onClicked={() => player.play_pause()}>
0/			{bind(player, "playbackStatus").as(status =>
,+				status === Mpris.PlaybackStatus.PLAYING
,+					? <icon icon="media-playback-pause" />
,+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
let artist, title: any = "";
87	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
A@		artist = bind(player, "artist").as(a => a && a + " - " || "");
*)		title = bind(player, "title").as(t => {
'&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
&%			return t.substring(0, 20) + "...";
		});
<;	return <box id={player.busName} className="MainBox Media">
:9		{isSpot && <box className="info">{artist}{title}</box>}
10		<button onClicked={() => player.play_pause()}>
0/			{bind(player, "playbackStatus").as(status =>
,+				status === Mpris.PlaybackStatus.PLAYING
,+					? <icon icon="media-playback-pause" />
,+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[e
import { bind } from "astal";
%$import Mpris from "gi://AstalMpris";
const MAX_TITLE: Number = 20;
QP//------------------------------------------------------------------------------
87// Media Widget -> shows playbackstate for each player.
,+// Also shows artist and title for Spotify.
NM// TODO: Only show active player (e.g. youtube playes and spotify is paused).
76function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
87	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
A@		artist = bind(player, "artist").as(a => a && a + " - " || "");
*)		title = bind(player, "title").as(t => {
'&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
&%			return t.substring(0, 20) + "...";
		});
<;	return <box id={player.busName} className="MainBox Media">
:9		{isSpot && <box className="info">{artist}{title}</box>}
10		<button onClicked={() => player.play_pause()}>
0/			{bind(player, "playbackStatus").as(status =>
,+				status === Mpris.PlaybackStatus.PLAYING
,+					? <icon icon="media-playback-pause" />
,+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
let artist, title: any = "";7	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
A@		artist = bind(player, "artist").as(a => a && a + " - " || "");
*)		title = bind(player, "title").as(t => {
'&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
&%			return t.substring(0, 20) + "...";
		});
<;	return <box id={player.busName} className="MainBox Media">
:9		{isSpot && <box className="info">{artist}{title}</box>}
10		<button onClicked={() => player.play_pause()}>
0/			{bind(player, "playbackStatus").as(status =>
,+				status === Mpris.PlaybackStatus.PLAYING
,+					? <icon icon="media-playback-pause" />
,+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[e
import { bind } from "astal";
%$import Mpris from "gi://AstalMpris";
const MAX_TITLE: Number = 20;
QP//------------------------------------------------------------------------------
87// Media Widget -> shows playbackstate for each player.
,+// Also shows artist and title for Spotify.
NM// TODO: Only show active player (e.g. youtube playes and spotify is paused).
76function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
87	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
A@		artist = bind(player, "artist").as(a => a && a + " - " || "");
*)		title = bind(player, "title").as(t => {
'&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
&%			return t.substring(0, 20) + "...";
		});
<;	return <box id={player.busName} className="MainBox Media">
:9		{isSpot && <box className="info">{artist}{title}</box>}
10		<button onClicked={() => player.play_pause()}>
0/			{bind(player, "playbackStatus").as(status =>
,+				status === Mpris.PlaybackStatus.PLAYING
,+					? <icon icon="media-playback-pause" />
,+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
let artist, title: any = "";const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
A@		artist = bind(player, "artist").as(a => a && a + " - " || "");
*)		title = bind(player, "title").as(t => {
'&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
&%			return t.substring(0, 20) + "...";
		});
<;	return <box id={player.busName} className="MainBox Media">
:9		{isSpot && <box className="info">{artist}{title}</box>}
10		<button onClicked={() => player.play_pause()}>
0/			{bind(player, "playbackStatus").as(status =>
,+				status === Mpris.PlaybackStatus.PLAYING
,+					? <icon icon="media-playback-pause" />
,+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[e
import { bind } from "astal";
%$import Mpris from "gi://AstalMpris";
const MAX_TITLE: Number = 20;
QP//------------------------------------------------------------------------------
87// Media Widget -> shows playbackstate for each player.
,+// Also shows artist and title for Spotify.
NM// TODO: Only show active player (e.g. youtube playes and spotify is paused).
76function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
87	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
A@		artist = bind(player, "artist").as(a => a && a + " - " || "");
*)		title = bind(player, "title").as(t => {
'&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
&%			return t.substring(0, 20) + "...";
		});
<;	return <box id={player.busName} className="MainBox Media">
:9		{isSpot && <box className="info">{artist}{title}</box>}
10		<button onClicked={() => player.play_pause()}>
0/			{bind(player, "playbackStatus").as(status =>
,+				status === Mpris.PlaybackStatus.PLAYING
,+					? <icon icon="media-playback-pause" />
,+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
A@		artist = bind(player, "artist").as(a => a && a + " - " || "");
*)		title = bind(player, "title").as(t => {
'&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
&%			return t.substring(0, 20) + "...";
		});
<;	return <box id={player.busName} className="MainBox Media">
:9		{isSpot && <box className="info">{artist}{title}</box>}
10		<button onClicked={() => player.play_pause()}>
0/			{bind(player, "playbackStatus").as(status =>
,+				status === Mpris.PlaybackStatus.PLAYING
,+					? <icon icon="media-playback-pause" />
,+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[e
import { bind } from "astal";
%$import Mpris from "gi://AstalMpris";
const MAX_TITLE: Number = 20;
QP//------------------------------------------------------------------------------
87// Media Widget -> shows playbackstate for each player.
,+// Also shows artist and title for Spotify.
NM// TODO: Only show active player (e.g. youtube playes and spotify is paused).
76function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
87	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
A@		artist = bind(player, "artist").as(a => a && a + " - " || "");
*)		title = bind(player, "title").as(t => {
'&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
&%			return t.substring(0, 20) + "...";
		});
<;	return <box id={player.busName} className="MainBox Media">
:9		{isSpot && <box className="info">{artist}{title}</box>}
10		<button onClicked={() => player.play_pause()}>
0/			{bind(player, "playbackStatus").as(status =>
,+				status === Mpris.PlaybackStatus.PLAYING
,+					? <icon icon="media-playback-pause" />
,+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
const isSpot: Boolean = player.identity === "Spotify";if (isSpot) {
A@		artist = bind(player, "artist").as(a => a && a + " - " || "");
*)		title = bind(player, "title").as(t => {
'&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
&%			return t.substring(0, 20) + "...";
		});
<;	return <box id={player.busName} className="MainBox Media">
:9		{isSpot && <box className="info">{artist}{title}</box>}
10		<button onClicked={() => player.play_pause()}>
0/			{bind(player, "playbackStatus").as(status =>
,+				status === Mpris.PlaybackStatus.PLAYING
,+					? <icon icon="media-playback-pause" />
,+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[e
import { bind } from "astal";
%$import Mpris from "gi://AstalMpris";
const MAX_TITLE: Number = 20;
QP//------------------------------------------------------------------------------
87// Media Widget -> shows playbackstate for each player.
,+// Also shows artist and title for Spotify.
NM// TODO: Only show active player (e.g. youtube playes and spotify is paused).
76function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
87	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
A@		artist = bind(player, "artist").as(a => a && a + " - " || "");
*)		title = bind(player, "title").as(t => {
'&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
&%			return t.substring(0, 20) + "...";
		});
<;	return <box id={player.busName} className="MainBox Media">
:9		{isSpot && <box className="info">{artist}{title}</box>}
10		<button onClicked={() => player.play_pause()}>
0/			{bind(player, "playbackStatus").as(status =>
,+				status === Mpris.PlaybackStatus.PLAYING
,+					? <icon icon="media-playback-pause" />
,+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
if (isSpot) {
A@		artist = bind(player, "artist").as(a => a && a + " - " || "");
*)		title = bind(player, "title").as(t => {
'&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
&%			return t.substring(0, 20) + "...";
		});
<;	return <box id={player.busName} className="MainBox Media">
:9		{isSpot && <box className="info">{artist}{title}</box>}
10		<button onClicked={() => player.play_pause()}>
0/			{bind(player, "playbackStatus").as(status =>
,+				status === Mpris.PlaybackStatus.PLAYING
,+					? <icon icon="media-playback-pause" />
,+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[e
import { bind } from "astal";
%$import Mpris from "gi://AstalMpris";
const MAX_TITLE: Number = 20;
QP//------------------------------------------------------------------------------
87// Media Widget -> shows playbackstate for each player.
,+// Also shows artist and title for Spotify.
NM// TODO: Only show active player (e.g. youtube playes and spotify is paused).
76function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
87	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
A@		artist = bind(player, "artist").as(a => a && a + " - " || "");
*)		title = bind(player, "title").as(t => {
'&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
&%			return t.substring(0, 20) + "...";
		});
<;	return <box id={player.busName} className="MainBox Media">
:9		{isSpot && <box className="info">{artist}{title}</box>}
10		<button onClicked={() => player.play_pause()}>
0/			{bind(player, "playbackStatus").as(status =>
,+				status === Mpris.PlaybackStatus.PLAYING
,+					? <icon icon="media-playback-pause" />
,+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
if (isSpot) {artist = bind(player, "artist").as(a => a && a + " - " || "");
*)		title = bind(player, "title").as(t => {
'&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
&%			return t.substring(0, 20) + "...";
		});
<;	return <box id={player.busName} className="MainBox Media">
:9		{isSpot && <box className="info">{artist}{title}</box>}
10		<button onClicked={() => player.play_pause()}>
0/			{bind(player, "playbackStatus").as(status =>
,+				status === Mpris.PlaybackStatus.PLAYING
,+					? <icon icon="media-playback-pause" />
,+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[e
import { bind } from "astal";
%$import Mpris from "gi://AstalMpris";
const MAX_TITLE: Number = 20;
QP//------------------------------------------------------------------------------
87// Media Widget -> shows playbackstate for each player.
,+// Also shows artist and title for Spotify.
NM// TODO: Only show active player (e.g. youtube playes and spotify is paused).
76function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
87	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
A@		artist = bind(player, "artist").as(a => a && a + " - " || "");
*)		title = bind(player, "title").as(t => {
'&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
&%			return t.substring(0, 20) + "...";
		});
<;	return <box id={player.busName} className="MainBox Media">
:9		{isSpot && <box className="info">{artist}{title}</box>}
10		<button onClicked={() => player.play_pause()}>
0/			{bind(player, "playbackStatus").as(status =>
,+				status === Mpris.PlaybackStatus.PLAYING
,+					? <icon icon="media-playback-pause" />
,+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
artist = bind(player, "artist").as(a => a && a + " - " || "");
*)		title = bind(player, "title").as(t => {
'&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
&%			return t.substring(0, 20) + "...";
		});
<;	return <box id={player.busName} className="MainBox Media">
:9		{isSpot && <box className="info">{artist}{title}</box>}
10		<button onClicked={() => player.play_pause()}>
0/			{bind(player, "playbackStatus").as(status =>
,+				status === Mpris.PlaybackStatus.PLAYING
,+					? <icon icon="media-playback-pause" />
,+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[e
import { bind } from "astal";
%$import Mpris from "gi://AstalMpris";
const MAX_TITLE: Number = 20;
QP//------------------------------------------------------------------------------
87// Media Widget -> shows playbackstate for each player.
,+// Also shows artist and title for Spotify.
NM// TODO: Only show active player (e.g. youtube playes and spotify is paused).
76function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
87	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
A@		artist = bind(player, "artist").as(a => a && a + " - " || "");
*)		title = bind(player, "title").as(t => {
'&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
&%			return t.substring(0, 20) + "...";
		});
<;	return <box id={player.busName} className="MainBox Media">
:9		{isSpot && <box className="info">{artist}{title}</box>}
10		<button onClicked={() => player.play_pause()}>
0/			{bind(player, "playbackStatus").as(status =>
,+				status === Mpris.PlaybackStatus.PLAYING
,+					? <icon icon="media-playback-pause" />
,+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
artist = bind(player, "artist").as(a => a && a + " - " || "");)		title = bind(player, "title").as(t => {
'&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
&%			return t.substring(0, 20) + "...";
		});
<;	return <box id={player.busName} className="MainBox Media">
:9		{isSpot && <box className="info">{artist}{title}</box>}
10		<button onClicked={() => player.play_pause()}>
0/			{bind(player, "playbackStatus").as(status =>
,+				status === Mpris.PlaybackStatus.PLAYING
,+					? <icon icon="media-playback-pause" />
,+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[e
import { bind } from "astal";
%$import Mpris from "gi://AstalMpris";
const MAX_TITLE: Number = 20;
QP//------------------------------------------------------------------------------
87// Media Widget -> shows playbackstate for each player.
,+// Also shows artist and title for Spotify.
NM// TODO: Only show active player (e.g. youtube playes and spotify is paused).
76function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
87	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
A@		artist = bind(player, "artist").as(a => a && a + " - " || "");
*)		title = bind(player, "title").as(t => {
'&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
&%			return t.substring(0, 20) + "...";
		});
<;	return <box id={player.busName} className="MainBox Media">
:9		{isSpot && <box className="info">{artist}{title}</box>}
10		<button onClicked={() => player.play_pause()}>
0/			{bind(player, "playbackStatus").as(status =>
,+				status === Mpris.PlaybackStatus.PLAYING
,+					? <icon icon="media-playback-pause" />
,+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
+a)		title = bind(player, "title").as(t => {
'&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
&%			return t.substring(0, 20) + "...";
		});
<;	return <box id={player.busName} className="MainBox Media">
:9		{isSpot && <box className="info">{artist}{title}</box>}
10		<button onClicked={() => player.play_pause()}>
0/			{bind(player, "playbackStatus").as(status =>
,+				status === Mpris.PlaybackStatus.PLAYING
,+					? <icon icon="media-playback-pause" />
,+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[e
import { bind } from "astal";
%$import Mpris from "gi://AstalMpris";
const MAX_TITLE: Number = 20;
QP//------------------------------------------------------------------------------
87// Media Widget -> shows playbackstate for each player.
,+// Also shows artist and title for Spotify.
NM// TODO: Only show active player (e.g. youtube playes and spotify is paused).
76function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
87	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
A@		artist = bind(player, "artist").as(a => a && a + " - " || "");
*)		title = bind(player, "title").as(t => {
'&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
&%			return t.substring(0, 20) + "...";
		});
<;	return <box id={player.busName} className="MainBox Media">
:9		{isSpot && <box className="info">{artist}{title}</box>}
10		<button onClicked={() => player.play_pause()}>
0/			{bind(player, "playbackStatus").as(status =>
,+				status === Mpris.PlaybackStatus.PLAYING
,+					? <icon icon="media-playback-pause" />
,+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
>artist = bind(player, "artist").as(a => a && a + " - " || "");
)_)title = bind(player, "title").as(t => {
'&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
&%			return t.substring(0, 20) + "...";
		});
<;	return <box id={player.busName} className="MainBox Media">
:9		{isSpot && <box className="info">{artist}{title}</box>}
10		<button onClicked={() => player.play_pause()}>
0/			{bind(player, "playbackStatus").as(status =>
,+				status === Mpris.PlaybackStatus.PLAYING
,+					? <icon icon="media-playback-pause" />
,+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[e
import { bind } from "astal";
%$import Mpris from "gi://AstalMpris";
const MAX_TITLE: Number = 20;
QP//------------------------------------------------------------------------------
87// Media Widget -> shows playbackstate for each player.
,+// Also shows artist and title for Spotify.
NM// TODO: Only show active player (e.g. youtube playes and spotify is paused).
76function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
87	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
A@		artist = bind(player, "artist").as(a => a && a + " - " || "");
*)		title = bind(player, "title").as(t => {
'&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
&%			return t.substring(0, 20) + "...";
		});
<;	return <box id={player.busName} className="MainBox Media">
:9		{isSpot && <box className="info">{artist}{title}</box>}
10		<button onClicked={() => player.play_pause()}>
0/			{bind(player, "playbackStatus").as(status =>
,+				status === Mpris.PlaybackStatus.PLAYING
,+					? <icon icon="media-playback-pause" />
,+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
artist = bind(player, "artist").as(a => a && a + " - " || "");)title = bind(player, "title").as(t => {
'&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
&%			return t.substring(0, 20) + "...";
		});
<;	return <box id={player.busName} className="MainBox Media">
:9		{isSpot && <box className="info">{artist}{title}</box>}
10		<button onClicked={() => player.play_pause()}>
0/			{bind(player, "playbackStatus").as(status =>
,+				status === Mpris.PlaybackStatus.PLAYING
,+					? <icon icon="media-playback-pause" />
,+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[e
import { bind } from "astal";
%$import Mpris from "gi://AstalMpris";
const MAX_TITLE: Number = 20;
QP//------------------------------------------------------------------------------
87// Media Widget -> shows playbackstate for each player.
,+// Also shows artist and title for Spotify.
NM// TODO: Only show active player (e.g. youtube playes and spotify is paused).
76function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
87	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
A@		artist = bind(player, "artist").as(a => a && a + " - " || "");
*)		title = bind(player, "title").as(t => {
'&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
&%			return t.substring(0, 20) + "...";
		});
<;	return <box id={player.busName} className="MainBox Media">
:9		{isSpot && <box className="info">{artist}{title}</box>}
10		<button onClicked={() => player.play_pause()}>
0/			{bind(player, "playbackStatus").as(status =>
,+				status === Mpris.PlaybackStatus.PLAYING
,+					? <icon icon="media-playback-pause" />
,+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
(^title = bind(player, "title").as(t => {
'&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
&%			return t.substring(0, 20) + "...";
		});
<;	return <box id={player.busName} className="MainBox Media">
:9		{isSpot && <box className="info">{artist}{title}</box>}
10		<button onClicked={() => player.play_pause()}>
0/			{bind(player, "playbackStatus").as(status =>
,+				status === Mpris.PlaybackStatus.PLAYING
,+					? <icon icon="media-playback-pause" />
,+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[e
import { bind } from "astal";
%$import Mpris from "gi://AstalMpris";
const MAX_TITLE: Number = 20;
QP//------------------------------------------------------------------------------
87// Media Widget -> shows playbackstate for each player.
,+// Also shows artist and title for Spotify.
NM// TODO: Only show active player (e.g. youtube playes and spotify is paused).
76function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
87	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
A@		artist = bind(player, "artist").as(a => a && a + " - " || "");
*)		title = bind(player, "title").as(t => {
'&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
&%			return t.substring(0, 20) + "...";
		});
<;	return <box id={player.busName} className="MainBox Media">
:9		{isSpot && <box className="info">{artist}{title}</box>}
10		<button onClicked={() => player.play_pause()}>
0/			{bind(player, "playbackStatus").as(status =>
,+				status === Mpris.PlaybackStatus.PLAYING
,+					? <icon icon="media-playback-pause" />
,+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
O[title = bind(player, "title").as(t => {&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
&%			return t.substring(0, 20) + "...";
		});
<;	return <box id={player.busName} className="MainBox Media">
:9		{isSpot && <box className="info">{artist}{title}</box>}
10		<button onClicked={() => player.play_pause()}>
0/			{bind(player, "playbackStatus").as(status =>
,+				status === Mpris.PlaybackStatus.PLAYING
,+					? <icon icon="media-playback-pause" />
,+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[e
import { bind } from "astal";
%$import Mpris from "gi://AstalMpris";
const MAX_TITLE: Number = 20;
QP//------------------------------------------------------------------------------
87// Media Widget -> shows playbackstate for each player.
,+// Also shows artist and title for Spotify.
NM// TODO: Only show active player (e.g. youtube playes and spotify is paused).
76function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
87	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
A@		artist = bind(player, "artist").as(a => a && a + " - " || "");
*)		title = bind(player, "title").as(t => {
'&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
&%			return t.substring(0, 20) + "...";
		});
<;	return <box id={player.busName} className="MainBox Media">
:9		{isSpot && <box className="info">{artist}{title}</box>}
10		<button onClicked={() => player.play_pause()}>
0/			{bind(player, "playbackStatus").as(status =>
,+				status === Mpris.PlaybackStatus.PLAYING
,+					? <icon icon="media-playback-pause" />
,+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
KWtitle = bind(player, "title").as(t => {if (t.length < MAX_TITLE) return t;
			if (!t) return "";
&%			return t.substring(0, 20) + "...";
		});
<;	return <box id={player.busName} className="MainBox Media">
:9		{isSpot && <box className="info">{artist}{title}</box>}
10		<button onClicked={() => player.play_pause()}>
0/			{bind(player, "playbackStatus").as(status =>
,+				status === Mpris.PlaybackStatus.PLAYING
,+					? <icon icon="media-playback-pause" />
,+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[e
import { bind } from "astal";
%$import Mpris from "gi://AstalMpris";
const MAX_TITLE: Number = 20;
QP//------------------------------------------------------------------------------
87// Media Widget -> shows playbackstate for each player.
,+// Also shows artist and title for Spotify.
NM// TODO: Only show active player (e.g. youtube playes and spotify is paused).
76function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
87	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
A@		artist = bind(player, "artist").as(a => a && a + " - " || "");
*)		title = bind(player, "title").as(t => {
'&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
&%			return t.substring(0, 20) + "...";
		});
<;	return <box id={player.busName} className="MainBox Media">
:9		{isSpot && <box className="info">{artist}{title}</box>}
10		<button onClicked={() => player.play_pause()}>
0/			{bind(player, "playbackStatus").as(status =>
,+				status === Mpris.PlaybackStatus.PLAYING
,+					? <icon icon="media-playback-pause" />
,+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
$0if (t.length < MAX_TITLE) return t;
			if (!t) return "";
&%			return t.substring(0, 20) + "...";
		});
<;	return <box id={player.busName} className="MainBox Media">
:9		{isSpot && <box className="info">{artist}{title}</box>}
10		<button onClicked={() => player.play_pause()}>
0/			{bind(player, "playbackStatus").as(status =>
,+				status === Mpris.PlaybackStatus.PLAYING
,+					? <icon icon="media-playback-pause" />
,+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[e
import { bind } from "astal";
%$import Mpris from "gi://AstalMpris";
const MAX_TITLE: Number = 20;
QP//------------------------------------------------------------------------------
87// Media Widget -> shows playbackstate for each player.
,+// Also shows artist and title for Spotify.
NM// TODO: Only show active player (e.g. youtube playes and spotify is paused).
76function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
87	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
A@		artist = bind(player, "artist").as(a => a && a + " - " || "");
*)		title = bind(player, "title").as(t => {
'&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
&%			return t.substring(0, 20) + "...";
		});
<;	return <box id={player.busName} className="MainBox Media">
:9		{isSpot && <box className="info">{artist}{title}</box>}
10		<button onClicked={() => player.play_pause()}>
0/			{bind(player, "playbackStatus").as(status =>
,+				status === Mpris.PlaybackStatus.PLAYING
,+					? <icon icon="media-playback-pause" />
,+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
6)if (t.length < MAX_TITLE) return t;if (!t) return "";
&%			return t.substring(0, 20) + "...";
		});
<;	return <box id={player.busName} className="MainBox Media">
:9		{isSpot && <box className="info">{artist}{title}</box>}
10		<button onClicked={() => player.play_pause()}>
0/			{bind(player, "playbackStatus").as(status =>
,+				status === Mpris.PlaybackStatus.PLAYING
,+					? <icon icon="media-playback-pause" />
,+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[e
import { bind } from "astal";
%$import Mpris from "gi://AstalMpris";
const MAX_TITLE: Number = 20;
QP//------------------------------------------------------------------------------
87// Media Widget -> shows playbackstate for each player.
,+// Also shows artist and title for Spotify.
NM// TODO: Only show active player (e.g. youtube playes and spotify is paused).
76function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
87	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
A@		artist = bind(player, "artist").as(a => a && a + " - " || "");
*)		title = bind(player, "title").as(t => {
'&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
&%			return t.substring(0, 20) + "...";
		});
<;	return <box id={player.busName} className="MainBox Media">
:9		{isSpot && <box className="info">{artist}{title}</box>}
10		<button onClicked={() => player.play_pause()}>
0/			{bind(player, "playbackStatus").as(status =>
,+				status === Mpris.PlaybackStatus.PLAYING
,+					? <icon icon="media-playback-pause" />
,+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
if (!t) return "";
&%			return t.substring(0, 20) + "...";
		});
<;	return <box id={player.busName} className="MainBox Media">
:9		{isSpot && <box className="info">{artist}{title}</box>}
10		<button onClicked={() => player.play_pause()}>
0/			{bind(player, "playbackStatus").as(status =>
,+				status === Mpris.PlaybackStatus.PLAYING
,+					? <icon icon="media-playback-pause" />
,+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[e
import { bind } from "astal";
%$import Mpris from "gi://AstalMpris";
const MAX_TITLE: Number = 20;
QP//------------------------------------------------------------------------------
87// Media Widget -> shows playbackstate for each player.
,+// Also shows artist and title for Spotify.
NM// TODO: Only show active player (e.g. youtube playes and spotify is paused).
76function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
87	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
A@		artist = bind(player, "artist").as(a => a && a + " - " || "");
*)		title = bind(player, "title").as(t => {
'&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
&%			return t.substring(0, 20) + "...";
		});
<;	return <box id={player.busName} className="MainBox Media">
:9		{isSpot && <box className="info">{artist}{title}</box>}
10		<button onClicked={() => player.play_pause()}>
0/			{bind(player, "playbackStatus").as(status =>
,+				status === Mpris.PlaybackStatus.PLAYING
,+					? <icon icon="media-playback-pause" />
,+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
if (!t) return "";return t.substring(0, 20) + "...";
		});
<;	return <box id={player.busName} className="MainBox Media">
:9		{isSpot && <box className="info">{artist}{title}</box>}
10		<button onClicked={() => player.play_pause()}>
0/			{bind(player, "playbackStatus").as(status =>
,+				status === Mpris.PlaybackStatus.PLAYING
,+					? <icon icon="media-playback-pause" />
,+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[e
import { bind } from "astal";
%$import Mpris from "gi://AstalMpris";
const MAX_TITLE: Number = 20;
QP//------------------------------------------------------------------------------
87// Media Widget -> shows playbackstate for each player.
,+// Also shows artist and title for Spotify.
NM// TODO: Only show active player (e.g. youtube playes and spotify is paused).
76function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
87	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
A@		artist = bind(player, "artist").as(a => a && a + " - " || "");
*)		title = bind(player, "title").as(t => {
'&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
&%			return t.substring(0, 20) + "...";
		});
<;	return <box id={player.busName} className="MainBox Media">
:9		{isSpot && <box className="info">{artist}{title}</box>}
10		<button onClicked={() => player.play_pause()}>
0/			{bind(player, "playbackStatus").as(status =>
,+				status === Mpris.PlaybackStatus.PLAYING
,+					? <icon icon="media-playback-pause" />
,+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
return t.substring(0, 20) + "...";
		});
<;	return <box id={player.busName} className="MainBox Media">
:9		{isSpot && <box className="info">{artist}{title}</box>}
10		<button onClicked={() => player.play_pause()}>
0/			{bind(player, "playbackStatus").as(status =>
,+				status === Mpris.PlaybackStatus.PLAYING
,+					? <icon icon="media-playback-pause" />
,+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[e
import { bind } from "astal";
%$import Mpris from "gi://AstalMpris";
const MAX_TITLE: Number = 20;
QP//------------------------------------------------------------------------------
87// Media Widget -> shows playbackstate for each player.
,+// Also shows artist and title for Spotify.
NM// TODO: Only show active player (e.g. youtube playes and spotify is paused).
76function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
87	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
A@		artist = bind(player, "artist").as(a => a && a + " - " || "");
*)		title = bind(player, "title").as(t => {
'&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
&%			return t.substring(0, 20) + "...";
		});
<;	return <box id={player.busName} className="MainBox Media">
:9		{isSpot && <box className="info">{artist}{title}</box>}
10		<button onClicked={() => player.play_pause()}>
0/			{bind(player, "playbackStatus").as(status =>
,+				status === Mpris.PlaybackStatus.PLAYING
,+					? <icon icon="media-playback-pause" />
,+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
return t.substring(0, 20) + "...";});
<;	return <box id={player.busName} className="MainBox Media">
:9		{isSpot && <box className="info">{artist}{title}</box>}
10		<button onClicked={() => player.play_pause()}>
0/			{bind(player, "playbackStatus").as(status =>
,+				status === Mpris.PlaybackStatus.PLAYING
,+					? <icon icon="media-playback-pause" />
,+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[e
import { bind } from "astal";
%$import Mpris from "gi://AstalMpris";
const MAX_TITLE: Number = 20;
QP//------------------------------------------------------------------------------
87// Media Widget -> shows playbackstate for each player.
,+// Also shows artist and title for Spotify.
NM// TODO: Only show active player (e.g. youtube playes and spotify is paused).
76function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
87	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
A@		artist = bind(player, "artist").as(a => a && a + " - " || "");
*)		title = bind(player, "title").as(t => {
'&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
&%			return t.substring(0, 20) + "...";
		});
<;	return <box id={player.busName} className="MainBox Media">
:9		{isSpot && <box className="info">{artist}{title}</box>}
10		<button onClicked={() => player.play_pause()}>
0/			{bind(player, "playbackStatus").as(status =>
,+				status === Mpris.PlaybackStatus.PLAYING
,+					? <icon icon="media-playback-pause" />
,+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
<;	return <box id={player.busName} className="MainBox Media">
:9		{isSpot && <box className="info">{artist}{title}</box>}
10		<button onClicked={() => player.play_pause()}>
0/			{bind(player, "playbackStatus").as(status =>
,+				status === Mpris.PlaybackStatus.PLAYING
,+					? <icon icon="media-playback-pause" />
,+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[e
import { bind } from "astal";
%$import Mpris from "gi://AstalMpris";
const MAX_TITLE: Number = 20;
QP//------------------------------------------------------------------------------
87// Media Widget -> shows playbackstate for each player.
,+// Also shows artist and title for Spotify.
NM// TODO: Only show active player (e.g. youtube playes and spotify is paused).
76function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
87	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
A@		artist = bind(player, "artist").as(a => a && a + " - " || "");
*)		title = bind(player, "title").as(t => {
'&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
&%			return t.substring(0, 20) + "...";
		});
<;	return <box id={player.busName} className="MainBox Media">
:9		{isSpot && <box className="info">{artist}{title}</box>}
10		<button onClicked={() => player.play_pause()}>
0/			{bind(player, "playbackStatus").as(status =>
,+				status === Mpris.PlaybackStatus.PLAYING
,+					? <icon icon="media-playback-pause" />
,+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
});}
<;	return <box id={player.busName} className="MainBox Media">
:9		{isSpot && <box className="info">{artist}{title}</box>}
10		<button onClicked={() => player.play_pause()}>
0/			{bind(player, "playbackStatus").as(status =>
,+				status === Mpris.PlaybackStatus.PLAYING
,+					? <icon icon="media-playback-pause" />
,+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[e
import { bind } from "astal";
%$import Mpris from "gi://AstalMpris";
const MAX_TITLE: Number = 20;
QP//------------------------------------------------------------------------------
87// Media Widget -> shows playbackstate for each player.
,+// Also shows artist and title for Spotify.
NM// TODO: Only show active player (e.g. youtube playes and spotify is paused).
76function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
87	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
A@		artist = bind(player, "artist").as(a => a && a + " - " || "");
*)		title = bind(player, "title").as(t => {
'&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
&%			return t.substring(0, 20) + "...";
		});
<;	return <box id={player.busName} className="MainBox Media">
:9		{isSpot && <box className="info">{artist}{title}</box>}
10		<button onClicked={() => player.play_pause()}>
0/			{bind(player, "playbackStatus").as(status =>
,+				status === Mpris.PlaybackStatus.PLAYING
,+					? <icon icon="media-playback-pause" />
,+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
});};	return <box id={player.busName} className="MainBox Media">
:9		{isSpot && <box className="info">{artist}{title}</box>}
10		<button onClicked={() => player.play_pause()}>
0/			{bind(player, "playbackStatus").as(status =>
,+				status === Mpris.PlaybackStatus.PLAYING
,+					? <icon icon="media-playback-pause" />
,+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[e
import { bind } from "astal";
%$import Mpris from "gi://AstalMpris";
const MAX_TITLE: Number = 20;
QP//------------------------------------------------------------------------------
87// Media Widget -> shows playbackstate for each player.
,+// Also shows artist and title for Spotify.
NM// TODO: Only show active player (e.g. youtube playes and spotify is paused).
76function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
87	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
A@		artist = bind(player, "artist").as(a => a && a + " - " || "");
*)		title = bind(player, "title").as(t => {
'&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
&%			return t.substring(0, 20) + "...";
		});
<;	return <box id={player.busName} className="MainBox Media">
:9		{isSpot && <box className="info">{artist}{title}</box>}
10		<button onClicked={() => player.play_pause()}>
0/			{bind(player, "playbackStatus").as(status =>
,+				status === Mpris.PlaybackStatus.PLAYING
,+					? <icon icon="media-playback-pause" />
,+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
return <box id={player.busName} className="MainBox Media">
:9		{isSpot && <box className="info">{artist}{title}</box>}
10		<button onClicked={() => player.play_pause()}>
0/			{bind(player, "playbackStatus").as(status =>
,+				status === Mpris.PlaybackStatus.PLAYING
,+					? <icon icon="media-playback-pause" />
,+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[e
import { bind } from "astal";
%$import Mpris from "gi://AstalMpris";
const MAX_TITLE: Number = 20;
QP//------------------------------------------------------------------------------
87// Media Widget -> shows playbackstate for each player.
,+// Also shows artist and title for Spotify.
NM// TODO: Only show active player (e.g. youtube playes and spotify is paused).
76function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
87	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
A@		artist = bind(player, "artist").as(a => a && a + " - " || "");
*)		title = bind(player, "title").as(t => {
'&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
&%			return t.substring(0, 20) + "...";
		});
<;	return <box id={player.busName} className="MainBox Media">
:9		{isSpot && <box className="info">{artist}{title}</box>}
10		<button onClicked={() => player.play_pause()}>
0/			{bind(player, "playbackStatus").as(status =>
,+				status === Mpris.PlaybackStatus.PLAYING
,+					? <icon icon="media-playback-pause" />
,+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
return <box id={player.busName} className="MainBox Media">9		{isSpot && <box className="info">{artist}{title}</box>}
10		<button onClicked={() => player.play_pause()}>
0/			{bind(player, "playbackStatus").as(status =>
,+				status === Mpris.PlaybackStatus.PLAYING
,+					? <icon icon="media-playback-pause" />
,+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[e
import { bind } from "astal";
%$import Mpris from "gi://AstalMpris";
const MAX_TITLE: Number = 20;
QP//------------------------------------------------------------------------------
87// Media Widget -> shows playbackstate for each player.
,+// Also shows artist and title for Spotify.
NM// TODO: Only show active player (e.g. youtube playes and spotify is paused).
76function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
87	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
A@		artist = bind(player, "artist").as(a => a && a + " - " || "");
*)		title = bind(player, "title").as(t => {
'&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
&%			return t.substring(0, 20) + "...";
		});
<;	return <box id={player.busName} className="MainBox Media">
:9		{isSpot && <box className="info">{artist}{title}</box>}
10		<button onClicked={() => player.play_pause()}>
0/			{bind(player, "playbackStatus").as(status =>
,+				status === Mpris.PlaybackStatus.PLAYING
,+					? <icon icon="media-playback-pause" />
,+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
return <box id={player.busName} className="MainBox Media">{isSpot && <box className="info">{artist}{title}</box>}
10		<button onClicked={() => player.play_pause()}>
0/			{bind(player, "playbackStatus").as(status =>
,+				status === Mpris.PlaybackStatus.PLAYING
,+					? <icon icon="media-playback-pause" />
,+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[e
import { bind } from "astal";
%$import Mpris from "gi://AstalMpris";
const MAX_TITLE: Number = 20;
QP//------------------------------------------------------------------------------
87// Media Widget -> shows playbackstate for each player.
,+// Also shows artist and title for Spotify.
NM// TODO: Only show active player (e.g. youtube playes and spotify is paused).
76function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
87	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
A@		artist = bind(player, "artist").as(a => a && a + " - " || "");
*)		title = bind(player, "title").as(t => {
'&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
&%			return t.substring(0, 20) + "...";
		});
<;	return <box id={player.busName} className="MainBox Media">
:9		{isSpot && <box className="info">{artist}{title}</box>}
10		<button onClicked={() => player.play_pause()}>
0/			{bind(player, "playbackStatus").as(status =>
,+				status === Mpris.PlaybackStatus.PLAYING
,+					? <icon icon="media-playback-pause" />
,+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
	s{isSpot && <box className="info">{artist}{title}</box>}
10		<button onClicked={() => player.play_pause()}>
0/			{bind(player, "playbackStatus").as(status =>
,+				status === Mpris.PlaybackStatus.PLAYING
,+					? <icon icon="media-playback-pause" />
,+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[e
import { bind } from "astal";
%$import Mpris from "gi://AstalMpris";
const MAX_TITLE: Number = 20;
QP//------------------------------------------------------------------------------
87// Media Widget -> shows playbackstate for each player.
,+// Also shows artist and title for Spotify.
NM// TODO: Only show active player (e.g. youtube playes and spotify is paused).
76function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
87	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
A@		artist = bind(player, "artist").as(a => a && a + " - " || "");
*)		title = bind(player, "title").as(t => {
'&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
&%			return t.substring(0, 20) + "...";
		});
<;	return <box id={player.busName} className="MainBox Media">
:9		{isSpot && <box className="info">{artist}{title}</box>}
10		<button onClicked={() => player.play_pause()}>
0/			{bind(player, "playbackStatus").as(status =>
,+				status === Mpris.PlaybackStatus.PLAYING
,+					? <icon icon="media-playback-pause" />
,+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
	m{isSpot && <box className="info">{artist}{title}</box>}<button onClicked={() => player.play_pause()}>
0/			{bind(player, "playbackStatus").as(status =>
,+				status === Mpris.PlaybackStatus.PLAYING
,+					? <icon icon="media-playback-pause" />
,+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[e
import { bind } from "astal";
%$import Mpris from "gi://AstalMpris";
const MAX_TITLE: Number = 20;
QP//------------------------------------------------------------------------------
87// Media Widget -> shows playbackstate for each player.
,+// Also shows artist and title for Spotify.
NM// TODO: Only show active player (e.g. youtube playes and spotify is paused).
76function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
87	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
A@		artist = bind(player, "artist").as(a => a && a + " - " || "");
*)		title = bind(player, "title").as(t => {
'&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
&%			return t.substring(0, 20) + "...";
		});
<;	return <box id={player.busName} className="MainBox Media">
:9		{isSpot && <box className="info">{artist}{title}</box>}
10		<button onClicked={() => player.play_pause()}>
0/			{bind(player, "playbackStatus").as(status =>
,+				status === Mpris.PlaybackStatus.PLAYING
,+					? <icon icon="media-playback-pause" />
,+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
	6<button onClicked={() => player.play_pause()}>
0/			{bind(player, "playbackStatus").as(status =>
,+				status === Mpris.PlaybackStatus.PLAYING
,+					? <icon icon="media-playback-pause" />
,+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[e
import { bind } from "astal";
%$import Mpris from "gi://AstalMpris";
const MAX_TITLE: Number = 20;
QP//------------------------------------------------------------------------------
87// Media Widget -> shows playbackstate for each player.
,+// Also shows artist and title for Spotify.
NM// TODO: Only show active player (e.g. youtube playes and spotify is paused).
76function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
87	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
A@		artist = bind(player, "artist").as(a => a && a + " - " || "");
*)		title = bind(player, "title").as(t => {
'&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
&%			return t.substring(0, 20) + "...";
		});
<;	return <box id={player.busName} className="MainBox Media">
:9		{isSpot && <box className="info">{artist}{title}</box>}
10		<button onClicked={() => player.play_pause()}>
0/			{bind(player, "playbackStatus").as(status =>
,+				status === Mpris.PlaybackStatus.PLAYING
,+					? <icon icon="media-playback-pause" />
,+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
	/<button onClicked={() => player.play_pause()}>{bind(player, "playbackStatus").as(status =>
,+				status === Mpris.PlaybackStatus.PLAYING
,+					? <icon icon="media-playback-pause" />
,+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[e
import { bind } from "astal";
%$import Mpris from "gi://AstalMpris";
const MAX_TITLE: Number = 20;
QP//------------------------------------------------------------------------------
87// Media Widget -> shows playbackstate for each player.
,+// Also shows artist and title for Spotify.
NM// TODO: Only show active player (e.g. youtube playes and spotify is paused).
76function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
87	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
A@		artist = bind(player, "artist").as(a => a && a + " - " || "");
*)		title = bind(player, "title").as(t => {
'&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
&%			return t.substring(0, 20) + "...";
		});
<;	return <box id={player.busName} className="MainBox Media">
:9		{isSpot && <box className="info">{artist}{title}</box>}
10		<button onClicked={() => player.play_pause()}>
0/			{bind(player, "playbackStatus").as(status =>
,+				status === Mpris.PlaybackStatus.PLAYING
,+					? <icon icon="media-playback-pause" />
,+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
{bind(player, "playbackStatus").as(status =>
,+				status === Mpris.PlaybackStatus.PLAYING
,+					? <icon icon="media-playback-pause" />
,+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[e
import { bind } from "astal";
%$import Mpris from "gi://AstalMpris";
const MAX_TITLE: Number = 20;
QP//------------------------------------------------------------------------------
87// Media Widget -> shows playbackstate for each player.
,+// Also shows artist and title for Spotify.
NM// TODO: Only show active player (e.g. youtube playes and spotify is paused).
76function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
87	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
A@		artist = bind(player, "artist").as(a => a && a + " - " || "");
*)		title = bind(player, "title").as(t => {
'&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
&%			return t.substring(0, 20) + "...";
		});
<;	return <box id={player.busName} className="MainBox Media">
:9		{isSpot && <box className="info">{artist}{title}</box>}
10		<button onClicked={() => player.play_pause()}>
0/			{bind(player, "playbackStatus").as(status =>
,+				status === Mpris.PlaybackStatus.PLAYING
,+					? <icon icon="media-playback-pause" />
,+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
{bind(player, "playbackStatus").as(status =>status === Mpris.PlaybackStatus.PLAYING
,+					? <icon icon="media-playback-pause" />
,+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[e
import { bind } from "astal";
%$import Mpris from "gi://AstalMpris";
const MAX_TITLE: Number = 20;
QP//------------------------------------------------------------------------------
87// Media Widget -> shows playbackstate for each player.
,+// Also shows artist and title for Spotify.
NM// TODO: Only show active player (e.g. youtube playes and spotify is paused).
76function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
87	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
A@		artist = bind(player, "artist").as(a => a && a + " - " || "");
*)		title = bind(player, "title").as(t => {
'&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
&%			return t.substring(0, 20) + "...";
		});
<;	return <box id={player.busName} className="MainBox Media">
:9		{isSpot && <box className="info">{artist}{title}</box>}
10		<button onClicked={() => player.play_pause()}>
0/			{bind(player, "playbackStatus").as(status =>
,+				status === Mpris.PlaybackStatus.PLAYING
,+					? <icon icon="media-playback-pause" />
,+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
status === Mpris.PlaybackStatus.PLAYING
,+					? <icon icon="media-playback-pause" />
,+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[e
import { bind } from "astal";
%$import Mpris from "gi://AstalMpris";
const MAX_TITLE: Number = 20;
QP//------------------------------------------------------------------------------
87// Media Widget -> shows playbackstate for each player.
,+// Also shows artist and title for Spotify.
NM// TODO: Only show active player (e.g. youtube playes and spotify is paused).
76function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
87	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
A@		artist = bind(player, "artist").as(a => a && a + " - " || "");
*)		title = bind(player, "title").as(t => {
'&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
&%			return t.substring(0, 20) + "...";
		});
<;	return <box id={player.busName} className="MainBox Media">
:9		{isSpot && <box className="info">{artist}{title}</box>}
10		<button onClicked={() => player.play_pause()}>
0/			{bind(player, "playbackStatus").as(status =>
,+				status === Mpris.PlaybackStatus.PLAYING
,+					? <icon icon="media-playback-pause" />
,+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
status === Mpris.PlaybackStatus.PLAYING? <icon icon="media-playback-pause" />
,+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[e
import { bind } from "astal";
%$import Mpris from "gi://AstalMpris";
const MAX_TITLE: Number = 20;
QP//------------------------------------------------------------------------------
87// Media Widget -> shows playbackstate for each player.
,+// Also shows artist and title for Spotify.
NM// TODO: Only show active player (e.g. youtube playes and spotify is paused).
76function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
87	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
A@		artist = bind(player, "artist").as(a => a && a + " - " || "");
*)		title = bind(player, "title").as(t => {
'&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
&%			return t.substring(0, 20) + "...";
		});
<;	return <box id={player.busName} className="MainBox Media">
:9		{isSpot && <box className="info">{artist}{title}</box>}
10		<button onClicked={() => player.play_pause()}>
0/			{bind(player, "playbackStatus").as(status =>
,+				status === Mpris.PlaybackStatus.PLAYING
,+					? <icon icon="media-playback-pause" />
,+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
? <icon icon="media-playback-pause" />
,+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[e
import { bind } from "astal";
%$import Mpris from "gi://AstalMpris";
const MAX_TITLE: Number = 20;
QP//------------------------------------------------------------------------------
87// Media Widget -> shows playbackstate for each player.
,+// Also shows artist and title for Spotify.
NM// TODO: Only show active player (e.g. youtube playes and spotify is paused).
76function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
87	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
A@		artist = bind(player, "artist").as(a => a && a + " - " || "");
*)		title = bind(player, "title").as(t => {
'&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
&%			return t.substring(0, 20) + "...";
		});
<;	return <box id={player.busName} className="MainBox Media">
:9		{isSpot && <box className="info">{artist}{title}</box>}
10		<button onClicked={() => player.play_pause()}>
0/			{bind(player, "playbackStatus").as(status =>
,+				status === Mpris.PlaybackStatus.PLAYING
,+					? <icon icon="media-playback-pause" />
,+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
? <icon icon="media-playback-pause" />: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[e
import { bind } from "astal";
%$import Mpris from "gi://AstalMpris";
const MAX_TITLE: Number = 20;
QP//------------------------------------------------------------------------------
87// Media Widget -> shows playbackstate for each player.
,+// Also shows artist and title for Spotify.
NM// TODO: Only show active player (e.g. youtube playes and spotify is paused).
76function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
87	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
A@		artist = bind(player, "artist").as(a => a && a + " - " || "");
*)		title = bind(player, "title").as(t => {
'&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
&%			return t.substring(0, 20) + "...";
		});
<;	return <box id={player.busName} className="MainBox Media">
:9		{isSpot && <box className="info">{artist}{title}</box>}
10		<button onClicked={() => player.play_pause()}>
0/			{bind(player, "playbackStatus").as(status =>
,+				status === Mpris.PlaybackStatus.PLAYING
,+					? <icon icon="media-playback-pause" />
,+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
n: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[e
import { bind } from "astal";
%$import Mpris from "gi://AstalMpris";
const MAX_TITLE: Number = 20;
QP//------------------------------------------------------------------------------
87// Media Widget -> shows playbackstate for each player.
,+// Also shows artist and title for Spotify.
NM// TODO: Only show active player (e.g. youtube playes and spotify is paused).
76function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
87	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
A@		artist = bind(player, "artist").as(a => a && a + " - " || "");
*)		title = bind(player, "title").as(t => {
'&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
&%			return t.substring(0, 20) + "...";
		});
<;	return <box id={player.busName} className="MainBox Media">
:9		{isSpot && <box className="info">{artist}{title}</box>}
10		<button onClicked={() => player.play_pause()}>
0/			{bind(player, "playbackStatus").as(status =>
,+				status === Mpris.PlaybackStatus.PLAYING
,+					? <icon icon="media-playback-pause" />
,+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
g: <icon icon="media-playback-start" />)}
		</button>
	</box>
g@[e
import { bind } from "astal";
%$import Mpris from "gi://AstalMpris";
const MAX_TITLE: Number = 20;
QP//------------------------------------------------------------------------------
87// Media Widget -> shows playbackstate for each player.
,+// Also shows artist and title for Spotify.
NM// TODO: Only show active player (e.g. youtube playes and spotify is paused).
76function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
87	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
A@		artist = bind(player, "artist").as(a => a && a + " - " || "");
*)		title = bind(player, "title").as(t => {
'&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
&%			return t.substring(0, 20) + "...";
		});
<;	return <box id={player.busName} className="MainBox Media">
:9		{isSpot && <box className="info">{artist}{title}</box>}
10		<button onClicked={() => player.play_pause()}>
0/			{bind(player, "playbackStatus").as(status =>
,+				status === Mpris.PlaybackStatus.PLAYING
,+					? <icon icon="media-playback-pause" />
,+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
		</button>
	</box>
g@[e
import { bind } from "astal";
%$import Mpris from "gi://AstalMpris";
const MAX_TITLE: Number = 20;
QP//------------------------------------------------------------------------------
87// Media Widget -> shows playbackstate for each player.
,+// Also shows artist and title for Spotify.
NM// TODO: Only show active player (e.g. youtube playes and spotify is paused).
76function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
87	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
A@		artist = bind(player, "artist").as(a => a && a + " - " || "");
*)		title = bind(player, "title").as(t => {
'&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
&%			return t.substring(0, 20) + "...";
		});
<;	return <box id={player.busName} className="MainBox Media">
:9		{isSpot && <box className="info">{artist}{title}</box>}
10		<button onClicked={() => player.play_pause()}>
0/			{bind(player, "playbackStatus").as(status =>
,+				status === Mpris.PlaybackStatus.PLAYING
,+					? <icon icon="media-playback-pause" />
,+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
9</button>
	</box>
g@[e
import { bind } from "astal";
%$import Mpris from "gi://AstalMpris";
const MAX_TITLE: Number = 20;
QP//------------------------------------------------------------------------------
87// Media Widget -> shows playbackstate for each player.
,+// Also shows artist and title for Spotify.
NM// TODO: Only show active player (e.g. youtube playes and spotify is paused).
76function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
87	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
A@		artist = bind(player, "artist").as(a => a && a + " - " || "");
*)		title = bind(player, "title").as(t => {
'&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
&%			return t.substring(0, 20) + "...";
		});
<;	return <box id={player.busName} className="MainBox Media">
:9		{isSpot && <box className="info">{artist}{title}</box>}
10		<button onClicked={() => player.play_pause()}>
0/			{bind(player, "playbackStatus").as(status =>
,+				status === Mpris.PlaybackStatus.PLAYING
,+					? <icon icon="media-playback-pause" />
,+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
	</button>
+</box>
g@[e
import { bind } from "astal";
%$import Mpris from "gi://AstalMpris";
const MAX_TITLE: Number = 20;
QP//------------------------------------------------------------------------------
87// Media Widget -> shows playbackstate for each player.
,+// Also shows artist and title for Spotify.
NM// TODO: Only show active player (e.g. youtube playes and spotify is paused).
76function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
87	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
A@		artist = bind(player, "artist").as(a => a && a + " - " || "");
*)		title = bind(player, "title").as(t => {
'&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
&%			return t.substring(0, 20) + "...";
		});
<;	return <box id={player.busName} className="MainBox Media">
:9		{isSpot && <box className="info">{artist}{title}</box>}
10		<button onClicked={() => player.play_pause()}>
0/			{bind(player, "playbackStatus").as(status =>
,+				status === Mpris.PlaybackStatus.PLAYING
,+					? <icon icon="media-playback-pause" />
,+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
4</button></box>
g@[e
import { bind } from "astal";
%$import Mpris from "gi://AstalMpris";
const MAX_TITLE: Number = 20;
QP//------------------------------------------------------------------------------
87// Media Widget -> shows playbackstate for each player.
,+// Also shows artist and title for Spotify.
NM// TODO: Only show active player (e.g. youtube playes and spotify is paused).
76function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
87	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
A@		artist = bind(player, "artist").as(a => a && a + " - " || "");
*)		title = bind(player, "title").as(t => {
'&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
&%			return t.substring(0, 20) + "...";
		});
<;	return <box id={player.busName} className="MainBox Media">
:9		{isSpot && <box className="info">{artist}{title}</box>}
10		<button onClicked={() => player.play_pause()}>
0/			{bind(player, "playbackStatus").as(status =>
,+				status === Mpris.PlaybackStatus.PLAYING
,+					? <icon icon="media-playback-pause" />
,+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
+</box>
g@[e
import { bind } from "astal";
%$import Mpris from "gi://AstalMpris";
const MAX_TITLE: Number = 20;
QP//------------------------------------------------------------------------------
87// Media Widget -> shows playbackstate for each player.
,+// Also shows artist and title for Spotify.
NM// TODO: Only show active player (e.g. youtube playes and spotify is paused).
76function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
87	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
A@		artist = bind(player, "artist").as(a => a && a + " - " || "");
*)		title = bind(player, "title").as(t => {
'&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
&%			return t.substring(0, 20) + "...";
		});
<;	return <box id={player.busName} className="MainBox Media">
:9		{isSpot && <box className="info">{artist}{title}</box>}
10		<button onClicked={() => player.play_pause()}>
0/			{bind(player, "playbackStatus").as(status =>
,+				status === Mpris.PlaybackStatus.PLAYING
,+					? <icon icon="media-playback-pause" />
,+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
A6function Media({ player }: { player: Mpris.Player }) {5
|</box>
g@[e
import { bind } from "astal";
%$import Mpris from "gi://AstalMpris";
const MAX_TITLE: Number = 20;
QP//------------------------------------------------------------------------------
87// Media Widget -> shows playbackstate for each player.
,+// Also shows artist and title for Spotify.
NM// TODO: Only show active player (e.g. youtube playes and spotify is paused).
76function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
87	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
A@		artist = bind(player, "artist").as(a => a && a + " - " || "");
*)		title = bind(player, "title").as(t => {
'&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
&%			return t.substring(0, 20) + "...";
		});
<;	return <box id={player.busName} className="MainBox Media">
:9		{isSpot && <box className="info">{artist}{title}</box>}
10		<button onClicked={() => player.play_pause()}>
0/			{bind(player, "playbackStatus").as(status =>
,+				status === Mpris.PlaybackStatus.PLAYING
,+					? <icon icon="media-playback-pause" />
,+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
A6function Media({ player }: { player: Mpris.Player }) {5
</box>mport { bind } from "astal";
%$import Mpris from "gi://AstalMpris";
const MAX_TITLE: Number = 20;
QP//------------------------------------------------------------------------------
87// Media Widget -> shows playbackstate for each player.
,+// Also shows artist and title for Spotify.
NM// TODO: Only show active player (e.g. youtube playes and spotify is paused).
76function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
87	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
A@		artist = bind(player, "artist").as(a => a && a + " - " || "");
*)		title = bind(player, "title").as(t => {
'&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
&%			return t.substring(0, 20) + "...";
		});
<;	return <box id={player.busName} className="MainBox Media">
:9		{isSpot && <box className="info">{artist}{title}</box>}
10		<button onClicked={() => player.play_pause()}>
0/			{bind(player, "playbackStatus").as(status =>
,+				status === Mpris.PlaybackStatus.PLAYING
,+					? <icon icon="media-playback-pause" />
,+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
A6function Media({ player }: { player: Mpris.Player }) {5
</box>import { bind } from "astal";
%$import Mpris from "gi://AstalMpris";
const MAX_TITLE: Number = 20;
QP//------------------------------------------------------------------------------
87// Media Widget -> shows playbackstate for each player.
,+// Also shows artist and title for Spotify.
NM// TODO: Only show active player (e.g. youtube playes and spotify is paused).
76function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
87	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
A@		artist = bind(player, "artist").as(a => a && a + " - " || "");
*)		title = bind(player, "title").as(t => {
'&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
&%			return t.substring(0, 20) + "...";
		});
<;	return <box id={player.busName} className="MainBox Media">
:9		{isSpot && <box className="info">{artist}{title}</box>}
10		<button onClicked={() => player.play_pause()}>
0/			{bind(player, "playbackStatus").as(status =>
,+				status === Mpris.PlaybackStatus.PLAYING
,+					? <icon icon="media-playback-pause" />
,+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
A6function Media({ player }: { player: Mpris.Player }) {5
import { bind } from "astal";
%$import Mpris from "gi://AstalMpris";
const MAX_TITLE: Number = 20;
QP//------------------------------------------------------------------------------
87// Media Widget -> shows playbackstate for each player.
,+// Also shows artist and title for Spotify.
NM// TODO: Only show active player (e.g. youtube playes and spotify is paused).
76function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
87	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
A@		artist = bind(player, "artist").as(a => a && a + " - " || "");
*)		title = bind(player, "title").as(t => {
'&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
&%			return t.substring(0, 20) + "...";
		});
<;	return <box id={player.busName} className="MainBox Media">
:9		{isSpot && <box className="info">{artist}{title}</box>}
10		<button onClicked={() => player.play_pause()}>
0/			{bind(player, "playbackStatus").as(status =>
,+				status === Mpris.PlaybackStatus.PLAYING
,+					? <icon icon="media-playback-pause" />
,+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
A6function Media({ player }: { player: Mpris.Player }) {5
import { bind } from "astal";$import Mpris from "gi://AstalMpris";
const MAX_TITLE: Number = 20;
QP//------------------------------------------------------------------------------
87// Media Widget -> shows playbackstate for each player.
,+// Also shows artist and title for Spotify.
NM// TODO: Only show active player (e.g. youtube playes and spotify is paused).
76function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
87	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
A@		artist = bind(player, "artist").as(a => a && a + " - " || "");
*)		title = bind(player, "title").as(t => {
'&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
&%			return t.substring(0, 20) + "...";
		});
<;	return <box id={player.busName} className="MainBox Media">
:9		{isSpot && <box className="info">{artist}{title}</box>}
10		<button onClicked={() => player.play_pause()}>
0/			{bind(player, "playbackStatus").as(status =>
,+				status === Mpris.PlaybackStatus.PLAYING
,+					? <icon icon="media-playback-pause" />
,+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
A6function Media({ player }: { player: Mpris.Player }) {5
$import Mpris from "gi://AstalMpris";
const MAX_TITLE: Number = 20;
QP//------------------------------------------------------------------------------
87// Media Widget -> shows playbackstate for each player.
,+// Also shows artist and title for Spotify.
NM// TODO: Only show active player (e.g. youtube playes and spotify is paused).
76function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
87	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
A@		artist = bind(player, "artist").as(a => a && a + " - " || "");
*)		title = bind(player, "title").as(t => {
'&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
&%			return t.substring(0, 20) + "...";
		});
<;	return <box id={player.busName} className="MainBox Media">
:9		{isSpot && <box className="info">{artist}{title}</box>}
10		<button onClicked={() => player.play_pause()}>
0/			{bind(player, "playbackStatus").as(status =>
,+				status === Mpris.PlaybackStatus.PLAYING
,+					? <icon icon="media-playback-pause" />
,+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
A6function Media({ player }: { player: Mpris.Player }) {5
import Mpris from "gi://AstalMpris";
const MAX_TITLE: Number = 20;
QP//------------------------------------------------------------------------------
87// Media Widget -> shows playbackstate for each player.
,+// Also shows artist and title for Spotify.
NM// TODO: Only show active player (e.g. youtube playes and spotify is paused).
76function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
87	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
A@		artist = bind(player, "artist").as(a => a && a + " - " || "");
*)		title = bind(player, "title").as(t => {
'&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
&%			return t.substring(0, 20) + "...";
		});
<;	return <box id={player.busName} className="MainBox Media">
:9		{isSpot && <box className="info">{artist}{title}</box>}
10		<button onClicked={() => player.play_pause()}>
0/			{bind(player, "playbackStatus").as(status =>
,+				status === Mpris.PlaybackStatus.PLAYING
,+					? <icon icon="media-playback-pause" />
,+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
A6function Media({ player }: { player: Mpris.Player }) {5
import Mpris from "gi://AstalMpris";const MAX_TITLE: Number = 20;
QP//------------------------------------------------------------------------------
87// Media Widget -> shows playbackstate for each player.
,+// Also shows artist and title for Spotify.
NM// TODO: Only show active player (e.g. youtube playes and spotify is paused).
76function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
87	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
A@		artist = bind(player, "artist").as(a => a && a + " - " || "");
*)		title = bind(player, "title").as(t => {
'&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
&%			return t.substring(0, 20) + "...";
		});
<;	return <box id={player.busName} className="MainBox Media">
:9		{isSpot && <box className="info">{artist}{title}</box>}
10		<button onClicked={() => player.play_pause()}>
0/			{bind(player, "playbackStatus").as(status =>
,+				status === Mpris.PlaybackStatus.PLAYING
,+					? <icon icon="media-playback-pause" />
,+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
A6function Media({ player }: { player: Mpris.Player }) {5
cconst MAX_TITLE: Number = 20;
QP//------------------------------------------------------------------------------
87// Media Widget -> shows playbackstate for each player.
,+// Also shows artist and title for Spotify.
NM// TODO: Only show active player (e.g. youtube playes and spotify is paused).
76function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
87	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
A@		artist = bind(player, "artist").as(a => a && a + " - " || "");
*)		title = bind(player, "title").as(t => {
'&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
&%			return t.substring(0, 20) + "...";
		});
<;	return <box id={player.busName} className="MainBox Media">
:9		{isSpot && <box className="info">{artist}{title}</box>}
10		<button onClicked={() => player.play_pause()}>
0/			{bind(player, "playbackStatus").as(status =>
,+				status === Mpris.PlaybackStatus.PLAYING
,+					? <icon icon="media-playback-pause" />
,+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
A6function Media({ player }: { player: Mpris.Player }) {5
Wconst MAX_TITLE: Number = 20;//------------------------------------------------------------------------------
87// Media Widget -> shows playbackstate for each player.
,+// Also shows artist and title for Spotify.
NM// TODO: Only show active player (e.g. youtube playes and spotify is paused).
76function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
87	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
A@		artist = bind(player, "artist").as(a => a && a + " - " || "");
*)		title = bind(player, "title").as(t => {
'&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
&%			return t.substring(0, 20) + "...";
		});
<;	return <box id={player.busName} className="MainBox Media">
:9		{isSpot && <box className="info">{artist}{title}</box>}
10		<button onClicked={() => player.play_pause()}>
0/			{bind(player, "playbackStatus").as(status =>
,+				status === Mpris.PlaybackStatus.PLAYING
,+					? <icon icon="media-playback-pause" />
,+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
A6function Media({ player }: { player: Mpris.Player }) {5
://------------------------------------------------------------------------------
87// Media Widget -> shows playbackstate for each player.
,+// Also shows artist and title for Spotify.
NM// TODO: Only show active player (e.g. youtube playes and spotify is paused).
76function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
87	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
A@		artist = bind(player, "artist").as(a => a && a + " - " || "");
*)		title = bind(player, "title").as(t => {
'&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
&%			return t.substring(0, 20) + "...";
		});
<;	return <box id={player.busName} className="MainBox Media">
:9		{isSpot && <box className="info">{artist}{title}</box>}
10		<button onClicked={() => player.play_pause()}>
0/			{bind(player, "playbackStatus").as(status =>
,+				status === Mpris.PlaybackStatus.PLAYING
,+					? <icon icon="media-playback-pause" />
,+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
A6function Media({ player }: { player: Mpris.Player }) {5
6//------------------------------------------------------------------------------// Media Widget -> shows playbackstate for each player.
,+// Also shows artist and title for Spotify.
NM// TODO: Only show active player (e.g. youtube playes and spotify is paused).
76function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
87	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
A@		artist = bind(player, "artist").as(a => a && a + " - " || "");
*)		title = bind(player, "title").as(t => {
'&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
&%			return t.substring(0, 20) + "...";
		});
<;	return <box id={player.busName} className="MainBox Media">
:9		{isSpot && <box className="info">{artist}{title}</box>}
10		<button onClicked={() => player.play_pause()}>
0/			{bind(player, "playbackStatus").as(status =>
,+				status === Mpris.PlaybackStatus.PLAYING
,+					? <icon icon="media-playback-pause" />
,+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
A6function Media({ player }: { player: Mpris.Player }) {5
// Media Widget -> shows playbackstate for each player.
,+// Also shows artist and title for Spotify.
NM// TODO: Only show active player (e.g. youtube playes and spotify is paused).
76function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
87	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
A@		artist = bind(player, "artist").as(a => a && a + " - " || "");
*)		title = bind(player, "title").as(t => {
'&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
&%			return t.substring(0, 20) + "...";
		});
<;	return <box id={player.busName} className="MainBox Media">
:9		{isSpot && <box className="info">{artist}{title}</box>}
10		<button onClicked={() => player.play_pause()}>
0/			{bind(player, "playbackStatus").as(status =>
,+				status === Mpris.PlaybackStatus.PLAYING
,+					? <icon icon="media-playback-pause" />
,+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
A6function Media({ player }: { player: Mpris.Player }) {5
// Also shows artist and title for Spotify.
NM// TODO: Only show active player (e.g. youtube playes and spotify is paused).
76function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
87	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
A@		artist = bind(player, "artist").as(a => a && a + " - " || "");
*)		title = bind(player, "title").as(t => {
'&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
&%			return t.substring(0, 20) + "...";
		});
<;	return <box id={player.busName} className="MainBox Media">
:9		{isSpot && <box className="info">{artist}{title}</box>}
10		<button onClicked={() => player.play_pause()}>
0/			{bind(player, "playbackStatus").as(status =>
,+				status === Mpris.PlaybackStatus.PLAYING
,+					? <icon icon="media-playback-pause" />
,+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
A6function Media({ player }: { player: Mpris.Player }) {5
|// TODO: Only show active player (e.g. youtube playes and spotify is paused).
76function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
87	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
A@		artist = bind(player, "artist").as(a => a && a + " - " || "");
*)		title = bind(player, "title").as(t => {
'&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
&%			return t.substring(0, 20) + "...";
		});
<;	return <box id={player.busName} className="MainBox Media">
:9		{isSpot && <box className="info">{artist}{title}</box>}
10		<button onClicked={() => player.play_pause()}>
0/			{bind(player, "playbackStatus").as(status =>
,+				status === Mpris.PlaybackStatus.PLAYING
,+					? <icon icon="media-playback-pause" />
,+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
A6function Media({ player }: { player: Mpris.Player }) {5
76function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
87	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
A@		artist = bind(player, "artist").as(a => a && a + " - " || "");
*)		title = bind(player, "title").as(t => {
'&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
&%			return t.substring(0, 20) + "...";
		});
<;	return <box id={player.busName} className="MainBox Media">
:9		{isSpot && <box className="info">{artist}{title}</box>}
10		<button onClicked={() => player.play_pause()}>
0/			{bind(player, "playbackStatus").as(status =>
,+				status === Mpris.PlaybackStatus.PLAYING
,+					? <icon icon="media-playback-pause" />
,+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
A6function Media({ player }: { player: Mpris.Player }) {5
'//function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
87	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
A@		artist = bind(player, "artist").as(a => a && a + " - " || "");
*)		title = bind(player, "title").as(t => {
'&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
&%			return t.substring(0, 20) + "...";
		});
<;	return <box id={player.busName} className="MainBox Media">
:9		{isSpot && <box className="info">{artist}{title}</box>}
10		<button onClicked={() => player.play_pause()}>
0/			{bind(player, "playbackStatus").as(status =>
,+				status === Mpris.PlaybackStatus.PLAYING
,+					? <icon icon="media-playback-pause" />
,+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
A6function Media({ player }: { player: Mpris.Player }) {5
%function Media({ player }: { player: Mpris.Player }) {
	let artist, title: any = "";
87	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
A@		artist = bind(player, "artist").as(a => a && a + " - " || "");
*)		title = bind(player, "title").as(t => {
'&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
&%			return t.substring(0, 20) + "...";
		});
<;	return <box id={player.busName} className="MainBox Media">
:9		{isSpot && <box className="info">{artist}{title}</box>}
10		<button onClicked={() => player.play_pause()}>
0/			{bind(player, "playbackStatus").as(status =>
,+				status === Mpris.PlaybackStatus.PLAYING
,+					? <icon icon="media-playback-pause" />
,+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
A6function Media({ player }: { player: Mpris.Player }) {5
let artist, title: any = "";
87	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
A@		artist = bind(player, "artist").as(a => a && a + " - " || "");
*)		title = bind(player, "title").as(t => {
'&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
&%			return t.substring(0, 20) + "...";
		});
<;	return <box id={player.busName} className="MainBox Media">
:9		{isSpot && <box className="info">{artist}{title}</box>}
10		<button onClicked={() => player.play_pause()}>
0/			{bind(player, "playbackStatus").as(status =>
,+				status === Mpris.PlaybackStatus.PLAYING
,+					? <icon icon="media-playback-pause" />
,+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
A6function Media({ player }: { player: Mpris.Player }) {5
const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
A@		artist = bind(player, "artist").as(a => a && a + " - " || "");
*)		title = bind(player, "title").as(t => {
'&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
&%			return t.substring(0, 20) + "...";
		});
<;	return <box id={player.busName} className="MainBox Media">
:9		{isSpot && <box className="info">{artist}{title}</box>}
10		<button onClicked={() => player.play_pause()}>
0/			{bind(player, "playbackStatus").as(status =>
,+				status === Mpris.PlaybackStatus.PLAYING
,+					? <icon icon="media-playback-pause" />
,+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
A6function Media({ player }: { player: Mpris.Player }) {5
if (isSpot) {
A@		artist = bind(player, "artist").as(a => a && a + " - " || "");
*)		title = bind(player, "title").as(t => {
'&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
&%			return t.substring(0, 20) + "...";
		});
<;	return <box id={player.busName} className="MainBox Media">
:9		{isSpot && <box className="info">{artist}{title}</box>}
10		<button onClicked={() => player.play_pause()}>
0/			{bind(player, "playbackStatus").as(status =>
,+				status === Mpris.PlaybackStatus.PLAYING
,+					? <icon icon="media-playback-pause" />
,+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
A6function Media({ player }: { player: Mpris.Player }) {5
if (isSpot) {artist = bind(player, "artist").as(a => a && a + " - " || "");
*)		title = bind(player, "title").as(t => {
'&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
&%			return t.substring(0, 20) + "...";
		});
<;	return <box id={player.busName} className="MainBox Media">
:9		{isSpot && <box className="info">{artist}{title}</box>}
10		<button onClicked={() => player.play_pause()}>
0/			{bind(player, "playbackStatus").as(status =>
,+				status === Mpris.PlaybackStatus.PLAYING
,+					? <icon icon="media-playback-pause" />
,+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
A6function Media({ player }: { player: Mpris.Player }) {5
{artist = bind(player, "artist").as(a => a && a + " - " || "");
*)		title = bind(player, "title").as(t => {
'&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
&%			return t.substring(0, 20) + "...";
		});
<;	return <box id={player.busName} className="MainBox Media">
:9		{isSpot && <box className="info">{artist}{title}</box>}
10		<button onClicked={() => player.play_pause()}>
0/			{bind(player, "playbackStatus").as(status =>
,+				status === Mpris.PlaybackStatus.PLAYING
,+					? <icon icon="media-playback-pause" />
,+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
A6function Media({ player }: { player: Mpris.Player }) {5
:)		title = bind(player, "title").as(t => {
'&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
&%			return t.substring(0, 20) + "...";
		});
<;	return <box id={player.busName} className="MainBox Media">
:9		{isSpot && <box className="info">{artist}{title}</box>}
10		<button onClicked={() => player.play_pause()}>
0/			{bind(player, "playbackStatus").as(status =>
,+				status === Mpris.PlaybackStatus.PLAYING
,+					? <icon icon="media-playback-pause" />
,+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
A6function Media({ player }: { player: Mpris.Player }) {5
7title = bind(player, "title").as(t => {
'&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
&%			return t.substring(0, 20) + "...";
		});
<;	return <box id={player.busName} className="MainBox Media">
:9		{isSpot && <box className="info">{artist}{title}</box>}
10		<button onClicked={() => player.play_pause()}>
0/			{bind(player, "playbackStatus").as(status =>
,+				status === Mpris.PlaybackStatus.PLAYING
,+					? <icon icon="media-playback-pause" />
,+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
A6function Media({ player }: { player: Mpris.Player }) {5
	if (t.length < MAX_TITLE) return t;
			if (!t) return "";
&%			return t.substring(0, 20) + "...";
		});
<;	return <box id={player.busName} className="MainBox Media">
:9		{isSpot && <box className="info">{artist}{title}</box>}
10		<button onClicked={() => player.play_pause()}>
0/			{bind(player, "playbackStatus").as(status =>
,+				status === Mpris.PlaybackStatus.PLAYING
,+					? <icon icon="media-playback-pause" />
,+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
A6function Media({ player }: { player: Mpris.Player }) {5
if (!t) return "";
&%			return t.substring(0, 20) + "...";
		});
<;	return <box id={player.busName} className="MainBox Media">
:9		{isSpot && <box className="info">{artist}{title}</box>}
10		<button onClicked={() => player.play_pause()}>
0/			{bind(player, "playbackStatus").as(status =>
,+				status === Mpris.PlaybackStatus.PLAYING
,+					? <icon icon="media-playback-pause" />
,+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
A6function Media({ player }: { player: Mpris.Player }) {5
return t.substring(0, 20) + "...";
		});
<;	return <box id={player.busName} className="MainBox Media">
:9		{isSpot && <box className="info">{artist}{title}</box>}
10		<button onClicked={() => player.play_pause()}>
0/			{bind(player, "playbackStatus").as(status =>
,+				status === Mpris.PlaybackStatus.PLAYING
,+					? <icon icon="media-playback-pause" />
,+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
A6function Media({ player }: { player: Mpris.Player }) {5
<;	return <box id={player.busName} className="MainBox Media">
:9		{isSpot && <box className="info">{artist}{title}</box>}
10		<button onClicked={() => player.play_pause()}>
0/			{bind(player, "playbackStatus").as(status =>
,+				status === Mpris.PlaybackStatus.PLAYING
,+					? <icon icon="media-playback-pause" />
,+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
A6function Media({ player }: { player: Mpris.Player }) {5
<;	return <box id={player.busName} className="MainBox Media">
:9		{isSpot && <box className="info">{artist}{title}</box>}
10		<button onClicked={() => player.play_pause()}>
0/			{bind(player, "playbackStatus").as(status =>
,+				status === Mpris.PlaybackStatus.PLAYING
,+					? <icon icon="media-playback-pause" />
,+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
A6function Media({ player }: { player: Mpris.Player }) {5
};	return <box id={player.busName} className="MainBox Media">
:9		{isSpot && <box className="info">{artist}{title}</box>}
10		<button onClicked={() => player.play_pause()}>
0/			{bind(player, "playbackStatus").as(status =>
,+				status === Mpris.PlaybackStatus.PLAYING
,+					? <icon icon="media-playback-pause" />
,+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
A6function Media({ player }: { player: Mpris.Player }) {5
return <box id={player.busName} className="MainBox Media">
:9		{isSpot && <box className="info">{artist}{title}</box>}
10		<button onClicked={() => player.play_pause()}>
0/			{bind(player, "playbackStatus").as(status =>
,+				status === Mpris.PlaybackStatus.PLAYING
,+					? <icon icon="media-playback-pause" />
,+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
A6function Media({ player }: { player: Mpris.Player }) {5
L{isSpot && <box className="info">{artist}{title}</box>}
10		<button onClicked={() => player.play_pause()}>
0/			{bind(player, "playbackStatus").as(status =>
,+				status === Mpris.PlaybackStatus.PLAYING
,+					? <icon icon="media-playback-pause" />
,+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
A6function Media({ player }: { player: Mpris.Player }) {5
<button onClicked={() => player.play_pause()}>
0/			{bind(player, "playbackStatus").as(status =>
,+				status === Mpris.PlaybackStatus.PLAYING
,+					? <icon icon="media-playback-pause" />
,+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
A6function Media({ player }: { player: Mpris.Player }) {5
{bind(player, "playbackStatus").as(status =>
,+				status === Mpris.PlaybackStatus.PLAYING
,+					? <icon icon="media-playback-pause" />
,+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
A6function Media({ player }: { player: Mpris.Player }) {5
status === Mpris.PlaybackStatus.PLAYING
,+					? <icon icon="media-playback-pause" />
,+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
A6function Media({ player }: { player: Mpris.Player }) {5
v? <icon icon="media-playback-pause" />
,+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
A6function Media({ player }: { player: Mpris.Player }) {5
G: <icon icon="media-playback-start" />
			)}
		</button>
	</box>
g@[i
A6function Media({ player }: { player: Mpris.Player }) {5
		</button>
	</box>
g@[i
A6function Media({ player }: { player: Mpris.Player }) {5
)}</button>
	</box>
g@[i
A6function Media({ player }: { player: Mpris.Player }) {5
</button>
	</box>
g@[i
A6function Media({ player }: { player: Mpris.Player }) {5
	</button>
</box>
g@[i
A6function Media({ player }: { player: Mpris.Player }) {5
</button></box>
g@[i
A6function Media({ player }: { player: Mpris.Player }) {5
</box>
g@[i
A6function Media({ player }: { player: Mpris.Player }) {5
;</box>
g@[i
A6function Media({ player }: { player: Mpris.Player }) {5
;</box>
g@[i
A6function Media({ player }: { player: Mpris.Player }) {5
7</box>}
g@[i
A6function Media({ player }: { player: Mpris.Player }) {5
	g@[
G<function MediaStatus({ player }: { player: Mpris.Player }) {5
	g@[
	g@[
	return <label label=5
	g@[
	return <label label={}5
	g@[
1&	return <label label={player.identity}5
	g@[
	g@[
	return fasle5
	g@[
	return false5
	g@\
	return false;
4)	return <label label={player.identity} />5
	g@\
	// return false;
-,	// return <label label={player.identity} />
	g@\
F;	return <box id={player.busName} className="MainBox Media">5
	gC=
;0		<button onClicked={() => player.play_pause()}>5
const MAX_TITLE: Number = 20;5
G<	return <box id={player.identity} className="MainBox Media">5
,+				status === Mpris.PlaybackStatus.PLAYING
,+					? <icon icon="media-playback-pause" />
6+					: <icon icon="media-playback-start" />5
				
				<icon icon=5
				<icon icon=""5
				<icon icon=""5
				<icon icon="vidcutter"5
				<icon icon="vidcutter" />5
/.				// status === Mpris.PlaybackStatus.PLAYING
/.				// 	? <icon icon="media-playback-pause" />
9.				// 	: <icon icon="media-playback-start" />5
2'	return <box className="MainBox Media">5
const MAX_TITLE: number = 20;5
const MAX_TITLE: number = 20;5
6+					? <icon icon="media-playback-pause" />5
6+					? <icon icon="media-playback-pause" />5
6+					: <icon icon="media-playback-start" />5
			<box>5
				</box>5
+ 					? "media-playback-pause" />5
+ 					: "media-playback-start" />5
					: "media-playback-start"5
					? "media-playback-pause"5
g@[$
import  bind } from "astal";5
let artist, title: any = "";
6const isSpot: Boolean = player.identity === "Spotify";
if (isSpot) {
?artist = bind(player, "artist").as(a => a && a + " - " || "");)
'title = bind(player, "title").as(t => {
#if (t.length < MAX_TITLE) return t;
if (!t) return "";
"return t.substring(0, 20) + "...";
});};
:return <box id={player.busName} className="MainBox Media">
7{isSpot && <box className="info">{artist}{title}</box>}
.<button onClicked={() => player.play_pause()}>
,{bind(player, "playbackStatus").as(status =>
'status === Mpris.PlaybackStatus.PLAYING
&? <icon icon="media-playback-pause" />
&: <icon icon="media-playback-start" />
	</button>
</box>
import { bind } from "astal";
$import Mpris from "gi://AstalMpris";
const MAX_TITLE: Number = 20;
P//------------------------------------------------------------------------------
7// Media Widget -> shows playbackstate for each player.
+// Also shows artist and title for Spotify.
M// TODO: Only show active player (e.g. youtube playes and spotify is paused).
6function Media({ player }: { player: Mpris.Player }) {
let artist, title: any = "";
6const isSpot: Boolean = player.identity === "Spotify";
jif (isSpot) {
>artist = bind(player, "artist").as(a => a && a + " - " || "");
'title = bind(player, "title").as(t => {
#if (t.length < MAX_TITLE) return t;
if (!t) return "";
"return t.substring(0, 20) + "...";
:return <box id={player.busName} className="MainBox Media">
7{isSpot && <box className="info">{artist}{title}</box>}
.<button onClicked={() => player.play_pause()}>
,{bind(player, "playbackStatus").as(status =>
'status === Mpris.PlaybackStatus.PLAYING
&? <icon icon="media-playback-pause" />
&: <icon icon="media-playback-start" />
	</button>
</box>
</box>}5
A		artist = bind(player, "artist").as(a => a && a + " - " || "");)5
@		artist = bind(player, "artist").as(a => a && a + " - " || ""))5
?		artist = bind(player, "artist").as(a => a && a + " - " || "")5
	let artist, title: any = "";5
 	let artist, title: string = "";5
 	let artist, title: string = "";5
-import { Variable, GLib, bind } from "astal";
import { bind } from "astal";
import { bind } from "astal";
$import Mpris from "gi://AstalMpris";
const MAX_TITLE: Number = 20;
P//------------------------------------------------------------------------------
7// Media Widget -> shows playbackstate for each player.
+// Also shows artist and title for Spotify.
M// TODO: Only show active player (e.g. youtube playes and spotify is paused).
6function Media({ player }: { player: Mpris.Player }) {
(	let artist: string, title: string = "";
7	const isSpot: Boolean = player.identity === "Spotify";
	if (isSpot) {
@		artist = bind(player, "artist").as(a => a && a + " - " || "");
)		title = bind(player, "title").as(t => {
&			if (t.length < MAX_TITLE) return t;
			if (!t) return "";
%			return t.substring(0, 20) + "...";
		});
;	return <box id={player.busName} className="MainBox Media">
9		{isSpot && <box className="info">{artist}{title}</box>}
0		<button onClicked={() => player.play_pause()}>
/			{bind(player, "playbackStatus").as(status =>
+				status === Mpris.PlaybackStatus.PLAYING
+					? <icon icon="media-playback-pause" />
+					: <icon icon="media-playback-start" />
			)}
		</button>
	</box>5
:import { bind } from "astal";
%	import Mpris from "gi://AstalMpris";5
	const MAX_TITLE: Number = 20;5
import Mpris from "gi://AstalMpris";5
	const MAX_TITLE: Number = 20;5
	const MAX_TITLE: Number = 20;5
const MAX_TITLE: Number = 20;5
#function Media({ player }: { player: Mpris.Player }) {
		let artist, title: any = "";
8		const isSpot: Boolean = player.identity === "Spotify";
		if (isSpot) {
A			artist = bind(player, "artist").as(a => a && a + " - " || "");
*			title = bind(player, "title").as(t => {
'				if (t.length < MAX_TITLE) return t;
				if (!t) return "";
&				return t.substring(0, 20) + "...";
			});
		};
<		return <box id={player.busName} className="MainBox Media">
:			{isSpot && <box className="info">{artist}{title}</box>}
1			<button onClicked={() => player.play_pause()}>
0				{bind(player, "playbackStatus").as(status =>
,					status === Mpris.PlaybackStatus.PLAYING
,						? <icon icon="media-playback-pause" /> : <icon icon="media-playback-start" />)}</button></box>5
!function Media({ player }: { player: Mpris.Player }) {
		let artist, title: any = "";
8		const isSpot: Boolean = player.identity === "Spotify";
		if (isSpot) {
A			artist = bind(player, "artist").as(a => a && a + " - " || "");
* title = bind(player, "title").as(t => {
'				if (t.length < MAX_TITLE) return t;
				if (!t) return "";
&				return t.substring(0, 20) + "...";
			});
		};
<		return <box id={player.busName} className="MainBox Media">
:			{isSpot && <box className="info">{artist}{title}</box>}
1			<button onClicked={() => player.play_pause()}>
0				{bind(player, "playbackStatus").as(status =>
,					status === Mpris.PlaybackStatus.PLAYING
,						? <icon icon="media-playback-pause" /> : <icon icon="media-playback-start" />)}</button></box>5
!function Media({ player }: { player: Mpris.Player }) {
		let artist, title: any = "";
8		const isSpot: Boolean = player.identity === "Spotify";
		if (isSpot) {
A			artist = bind(player, "artist").as(a => a && a + " - " || "");
* title = bind(player, "title").as(t => {
'				if (t.length < MAX_TITLE) return t;
				if (!t) return "";
&				return t.substring(0, 20) + "...";
			});
		};
<		return <box id={player.busName} className="MainBox Media">
:			{isSpot && <box className="info">{artist}{title}</box>}
1			<button onClicked={() => player.play_pause()}>
0				{bind(player, "playbackStatus").as(status =>
,					status === Mpris.PlaybackStatus.PLAYING
,						? <icon icon="media-playback-pause" /> : <icon icon="media-playback-start" />)}</button></box>5
let artist, title: any = "";
8		const isSpot: Boolean = player.identity === "Spotify";
		if (isSpot) {
A			artist = bind(player, "artist").as(a => a && a + " - " || "");
* title = bind(player, "title").as(t => {
'				if (t.length < MAX_TITLE) return t;
				if (!t) return "";
&				return t.substring(0, 20) + "...";
			});
		};
<		return <box id={player.busName} className="MainBox Media">
:			{isSpot && <box className="info">{artist}{title}</box>}
1			<button onClicked={() => player.play_pause()}>
0				{bind(player, "playbackStatus").as(status =>
,					status === Mpris.PlaybackStatus.PLAYING
,						? <icon icon="media-playback-pause" /> : <icon icon="media-playback-start" />)}</button></box>5
const isSpot: Boolean = player.identity === "Spotify";
		if (isSpot) {
A			artist = bind(player, "artist").as(a => a && a + " - " || "");
* title = bind(player, "title").as(t => {
'				if (t.length < MAX_TITLE) return t;
				if (!t) return "";
&				return t.substring(0, 20) + "...";
			});
		};
<		return <box id={player.busName} className="MainBox Media">
:			{isSpot && <box className="info">{artist}{title}</box>}
1			<button onClicked={() => player.play_pause()}>
0				{bind(player, "playbackStatus").as(status =>
,					status === Mpris.PlaybackStatus.PLAYING
,						? <icon icon="media-playback-pause" /> : <icon icon="media-playback-start" />)}</button></box>5
if (isSpot) {
A			artist = bind(player, "artist").as(a => a && a + " - " || "");
* title = bind(player, "title").as(t => {
'				if (t.length < MAX_TITLE) return t;
				if (!t) return "";
&				return t.substring(0, 20) + "...";
			});
		};
<		return <box id={player.busName} className="MainBox Media">
:			{isSpot && <box className="info">{artist}{title}</box>}
1			<button onClicked={() => player.play_pause()}>
0				{bind(player, "playbackStatus").as(status =>
,					status === Mpris.PlaybackStatus.PLAYING
,						? <icon icon="media-playback-pause" /> : <icon icon="media-playback-start" />)}</button></box>5
u		artist = bind(player, "artist").as(a => a && a + " - " || "");
* title = bind(player, "title").as(t => {
'				if (t.length < MAX_TITLE) return t;
				if (!t) return "";
&				return t.substring(0, 20) + "...";
			});
		};
<		return <box id={player.busName} className="MainBox Media">
:			{isSpot && <box className="info">{artist}{title}</box>}
1			<button onClicked={() => player.play_pause()}>
0				{bind(player, "playbackStatus").as(status =>
,					status === Mpris.PlaybackStatus.PLAYING
,						? <icon icon="media-playback-pause" /> : <icon icon="media-playback-start" />)}</button></box>5
q		artist = bind(player, "artist").as(a => a && a + " - " || "");)
* title = bind(player, "title").as(t => {
'				if (t.length < MAX_TITLE) return t;
				if (!t) return "";
&				return t.substring(0, 20) + "...";
			});
		};
<		return <box id={player.busName} className="MainBox Media">
:			{isSpot && <box className="info">{artist}{title}</box>}
1			<button onClicked={() => player.play_pause()}>
0				{bind(player, "playbackStatus").as(status =>
,					status === Mpris.PlaybackStatus.PLAYING
,						? <icon icon="media-playback-pause" /> : <icon icon="media-playback-start" />)}</button></box>5
A		artist = bind(player, "artist").as(a => a && a + " - " || "");)5
-		title = bind(player, "title").as(t => {
'				if (t.length < MAX_TITLE) return t;
				if (!t) return "";
&				return t.substring(0, 20) + "...";
			});
		};
<		return <box id={player.busName} className="MainBox Media">
:			{isSpot && <box className="info">{artist}{title}</box>}
1			<button onClicked={() => player.play_pause()}>
0				{bind(player, "playbackStatus").as(status =>
,					status === Mpris.PlaybackStatus.PLAYING
,						? <icon icon="media-playback-pause" /> : <icon icon="media-playback-start" />)}</button></box>5
			if (t.length < MAX_TITLE) return t;
				if (!t) return "";
&				return t.substring(0, 20) + "...";
			});
		};
<		return <box id={player.busName} className="MainBox Media">
:			{isSpot && <box className="info">{artist}{title}</box>}
1			<button onClicked={() => player.play_pause()}>
0				{bind(player, "playbackStatus").as(status =>
,					status === Mpris.PlaybackStatus.PLAYING
,						? <icon icon="media-playback-pause" /> : <icon icon="media-playback-start" />)}</button></box>5
			if (!t) return "";
&				return t.substring(0, 20) + "...";
			});
		};
<		return <box id={player.busName} className="MainBox Media">
:			{isSpot && <box className="info">{artist}{title}</box>}
1			<button onClicked={() => player.play_pause()}>
0				{bind(player, "playbackStatus").as(status =>
,					status === Mpris.PlaybackStatus.PLAYING
,						? <icon icon="media-playback-pause" /> : <icon icon="media-playback-start" />)}</button></box>5
			return t.substring(0, 20) + "...";
			});
		};
<		return <box id={player.busName} className="MainBox Media">
:			{isSpot && <box className="info">{artist}{title}</box>}
1			<button onClicked={() => player.play_pause()}>
0				{bind(player, "playbackStatus").as(status =>
,					status === Mpris.PlaybackStatus.PLAYING
,						? <icon icon="media-playback-pause" /> : <icon icon="media-playback-start" />)}</button></box>5
		});
		};
<		return <box id={player.busName} className="MainBox Media">
:			{isSpot && <box className="info">{artist}{title}</box>}
1			<button onClicked={() => player.play_pause()}>
0				{bind(player, "playbackStatus").as(status =>
,					status === Mpris.PlaybackStatus.PLAYING
,						? <icon icon="media-playback-pause" /> : <icon icon="media-playback-start" />)}</button></box>5
<		return <box id={player.busName} className="MainBox Media">
:			{isSpot && <box className="info">{artist}{title}</box>}
1			<button onClicked={() => player.play_pause()}>
0				{bind(player, "playbackStatus").as(status =>
,					status === Mpris.PlaybackStatus.PLAYING
,						? <icon icon="media-playback-pause" /> : <icon icon="media-playback-start" />)}</button></box>5
|	};return <box id={player.busName} className="MainBox Media">
:			{isSpot && <box className="info">{artist}{title}</box>}
1			<button onClicked={() => player.play_pause()}>
0				{bind(player, "playbackStatus").as(status =>
,					status === Mpris.PlaybackStatus.PLAYING
,						? <icon icon="media-playback-pause" /> : <icon icon="media-playback-start" />)}</button></box>5
z	return <box id={player.busName} className="MainBox Media">
:			{isSpot && <box className="info">{artist}{title}</box>}
1			<button onClicked={() => player.play_pause()}>
0				{bind(player, "playbackStatus").as(status =>
,					status === Mpris.PlaybackStatus.PLAYING
,						? <icon icon="media-playback-pause" /> : <icon icon="media-playback-start" />)}</button></box>5
:		{isSpot && <box className="info">{artist}{title}</box>}
1			<button onClicked={() => player.play_pause()}>
0				{bind(player, "playbackStatus").as(status =>
,					status === Mpris.PlaybackStatus.PLAYING
,						? <icon icon="media-playback-pause" /> : <icon icon="media-playback-start" />)}</button></box>5
		<button onClicked={() => player.play_pause()}>
0				{bind(player, "playbackStatus").as(status =>
,					status === Mpris.PlaybackStatus.PLAYING
,						? <icon icon="media-playback-pause" /> : <icon icon="media-playback-start" />)}</button></box>5
			{bind(player, "playbackStatus").as(status =>
,					status === Mpris.PlaybackStatus.PLAYING
,						? <icon icon="media-playback-pause" /> : <icon icon="media-playback-start" />)}</button></box>5
				status === Mpris.PlaybackStatus.PLAYING
,						? <icon icon="media-playback-pause" /> : <icon icon="media-playback-start" />)}</button></box>5
c					? <icon icon="media-playback-pause" /> : <icon icon="media-playback-start" />)}</button></box>5
<					: <icon icon="media-playback-start" />)}</button></box>5
		</button>
	</box>
		</button></box>5
let artist, title: any = "";
6const isSpot: Boolean = player.identity === "Spotify";
if (isSpot) {5
